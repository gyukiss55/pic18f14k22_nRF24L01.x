

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Sun Aug 14 10:20:18 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F14K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    55                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    56                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    57                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    58  0000                     
    59                           ; Version 2.40
    60                           ; Generated 17/11/2021 GMT
    61                           ; 
    62                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    63                           ; All rights reserved.
    64                           ; 
    65                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    66                           ; 
    67                           ; Redistribution and use in source and binary forms, with or without modification, are
    68                           ; permitted provided that the following conditions are met:
    69                           ; 
    70                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    71                           ;        conditions and the following disclaimer.
    72                           ; 
    73                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    74                           ;        of conditions and the following disclaimer in the documentation and/or other
    75                           ;        materials provided with the distribution. Publication is not required when
    76                           ;        this file is used in an embedded application.
    77                           ; 
    78                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    79                           ;        software without specific prior written permission.
    80                           ; 
    81                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    82                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    83                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    84                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    85                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    86                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    87                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    88                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    89                           ; 
    90                           ; 
    91                           ; Code-generator required, PIC18F14K22 Definitions
    92                           ; 
    93                           ; SFR Addresses
    94  0000                     
    95 ;; Function _MASTER0_open is unused but had its address taken
    96  0000                     
    97 ;; Function _EUSART1_DefaultFramingErrorHandler is unused but had its address taken
    98  0000                     
    99 ;; Function _EUSART1_DefaultOverrunErrorHandler is unused but had its address taken
   100  0000                     
   101 ;; Function _EUSART1_DefaultErrorHandler is unused but had its address taken
   102  0000                     
   103 ;; Function _SPI1_Close is unused but had its address taken
   104  0000                     
   105 ;; Function _SPI1_ExchangeBlock is unused but had its address taken
   106  0000                     
   107 ;; Function _SPI1_WriteBlock is unused but had its address taken
   108  0000                     
   109 ;; Function _SPI1_ReadBlock is unused but had its address taken
   110  0000                     
   111 ;; Function _SPI1_WriteByte is unused but had its address taken
   112  0000                     
   113 ;; Function _SPI1_ReadByte is unused but had its address taken
   114  0000                     
   115                           	psect	idataBANK0
   116  0018FC                     __pidataBANK0:
   117                           	callstack 0
   118                           
   119                           ;initializer for _ADDRESS_DATA_RXPIPE1
   120  0018FC  E2                 	db	226
   121  0018FD  E2                 	db	226
   122  0018FE  E2                 	db	226
   123  0018FF  E2                 	db	226
   124  001900  E2                 	db	226
   125                           
   126                           ;initializer for _ADDRESS_DATA_TXPIPE0
   127  001901  E1                 	db	225
   128  001902  E1                 	db	225
   129  001903  E1                 	db	225
   130  001904  E1                 	db	225
   131  001905  E1                 	db	225
   132                           
   133                           ;initializer for _ADDRESS_DATA_RXPIPE0
   134  001906  E1                 	db	225
   135  001907  E1                 	db	225
   136  001908  E1                 	db	225
   137  001909  E1                 	db	225
   138  00190A  E1                 	db	225
   139                           
   140                           	psect	mediumconst
   141  003B8E                     __pmediumconst:
   142                           	callstack 0
   143  003B8E  00                 	db	0
   144  003B8F                     _spiMaster:
   145                           	callstack 0
   146  003B8F  00                 	db	0
   147  003B90  00                 	db	0
   148  003B91  00                 	db	0
   149  003B92  00                 	db	0
   150  003B93  E4                 	db	low _SPI1_ExchangeByte
   151  003B94  16                 	db	high _SPI1_ExchangeByte
   152  003B95  00                 	db	0
   153  003B96  00                 	db	0
   154  003B97  00                 	db	0
   155  003B98  00                 	db	0
   156  003B99  00                 	db	0
   157  003B9A  00                 	db	0
   158  003B9B  00                 	db	0
   159  003B9C  00                 	db	0
   160  003B9D  00                 	db	0
   161  003B9E  00                 	db	0
   162  003B9F  00                 	db	0
   163  003BA0  00                 	db	0
   164  003BA1  00                 	db	0
   165  003BA2  00                 	db	0
   166  003BA3                     __end_of_spiMaster:
   167                           	callstack 0
   168  003BA3                     _dpowers:
   169                           	callstack 0
   170  003BA3  0001               	dw	1
   171  003BA5  000A               	dw	10
   172  003BA7  0064               	dw	100
   173  003BA9  03E8               	dw	1000
   174  003BAB  2710               	dw	10000
   175  003BAD                     __end_of_dpowers:
   176                           	callstack 0
   177  003BAD                     _hexpowers:
   178                           	callstack 0
   179  003BAD  0001               	dw	1
   180  003BAF  0010               	dw	16
   181  003BB1  0100               	dw	256
   182  003BB3  1000               	dw	4096
   183  003BB5                     __end_of_hexpowers:
   184                           	callstack 0
   185  0000                     _TMR0L	set	4054
   186  0000                     _TMR0H	set	4055
   187  0000                     _TXREG	set	4013
   188  0000                     _RCREG1	set	4014
   189  0000                     _TXSTAbits	set	4012
   190  003BB5                     STR_3:
   191  003BB5  23                 	db	35
   192  003BB6  23                 	db	35
   193  003BB7  23                 	db	35
   194  003BB8  23                 	db	35
   195  003BB9  23                 	db	35
   196  003BBA  23                 	db	35
   197  003BBB  23                 	db	35
   198  003BBC  23                 	db	35
   199  003BBD  23                 	db	35
   200  003BBE  23                 	db	35
   201  003BBF  23                 	db	35
   202  003BC0  23                 	db	35
   203  003BC1  23                 	db	35
   204  003BC2  23                 	db	35
   205  003BC3  23                 	db	35
   206  003BC4  23                 	db	35
   207  003BC5  23                 	db	35
   208  003BC6  23                 	db	35
   209  003BC7  23                 	db	35
   210  003BC8  23                 	db	35
   211  003BC9  23                 	db	35
   212  003BCA  23                 	db	35
   213  003BCB  23                 	db	35
   214  003BCC  23                 	db	35
   215  003BCD  23                 	db	35
   216  003BCE  23                 	db	35
   217  003BCF  23                 	db	35
   218  003BD0  23                 	db	35
   219  003BD1  23                 	db	35
   220  003BD2  23                 	db	35
   221  003BD3  23                 	db	35
   222  003BD4  23                 	db	35
   223  003BD5  23                 	db	35
   224  003BD6  23                 	db	35
   225  003BD7  23                 	db	35
   226  003BD8  23                 	db	35
   227  003BD9  23                 	db	35
   228  003BDA  23                 	db	35
   229  003BDB  23                 	db	35
   230  003BDC  23                 	db	35
   231  003BDD  23                 	db	35
   232  003BDE  23                 	db	35
   233  003BDF  23                 	db	35
   234  003BE0  23                 	db	35
   235  003BE1  23                 	db	35
   236  003BE2  23                 	db	35
   237  003BE3  23                 	db	35
   238  003BE4  23                 	db	35
   239  003BE5  23                 	db	35
   240  003BE6  23                 	db	35
   241  003BE7  23                 	db	35
   242  003BE8  23                 	db	35
   243  003BE9  23                 	db	35
   244  003BEA  23                 	db	35
   245  003BEB  23                 	db	35
   246  003BEC  23                 	db	35
   247  003BED  23                 	db	35
   248  003BEE  23                 	db	35
   249  003BEF  23                 	db	35
   250  003BF0  23                 	db	35
   251  003BF1  23                 	db	35
   252  003BF2  23                 	db	35
   253  003BF3  23                 	db	35
   254  003BF4  0D                 	db	13
   255  003BF5  0A                 	db	10
   256  003BF6  00                 	db	0
   257  003BF7                     STR_32:
   258  003BF7  5B                 	db	91	;'['
   259  003BF8  30                 	db	48	;'0'
   260  003BF9  78                 	db	120	;'x'
   261  003BFA  25                 	db	37
   262  003BFB  30                 	db	48	;'0'
   263  003BFC  32                 	db	50	;'2'
   264  003BFD  58                 	db	88	;'X'
   265  003BFE  5D                 	db	93	;']'
   266  003BFF  20                 	db	32
   267  003C00  30                 	db	48	;'0'
   268  003C01  78                 	db	120	;'x'
   269  003C02  25                 	db	37
   270  003C03  30                 	db	48	;'0'
   271  003C04  32                 	db	50	;'2'
   272  003C05  58                 	db	88	;'X'
   273  003C06  20                 	db	32
   274  003C07  41                 	db	65	;'A'
   275  003C08  52                 	db	82	;'R'
   276  003C09  44                 	db	68	;'D'
   277  003C0A  3D                 	db	61	;'='
   278  003C0B  25                 	db	37
   279  003C0C  58                 	db	88	;'X'
   280  003C0D  20                 	db	32
   281  003C0E  41                 	db	65	;'A'
   282  003C0F  52                 	db	82	;'R'
   283  003C10  43                 	db	67	;'C'
   284  003C11  3D                 	db	61	;'='
   285  003C12  25                 	db	37
   286  003C13  58                 	db	88	;'X'
   287  003C14  20                 	db	32
   288  003C15  28                 	db	40
   289  003C16  72                 	db	114	;'r'
   290  003C17  65                 	db	101	;'e'
   291  003C18  74                 	db	116	;'t'
   292  003C19  72                 	db	114	;'r'
   293  003C1A  2E                 	db	46
   294  003C1B  64                 	db	100	;'d'
   295  003C1C  65                 	db	101	;'e'
   296  003C1D  6C                 	db	108	;'l'
   297  003C1E  61                 	db	97	;'a'
   298  003C1F  79                 	db	121	;'y'
   299  003C20  3D                 	db	61	;'='
   300  003C21  25                 	db	37
   301  003C22  75                 	db	117	;'u'
   302  003C23  75                 	db	117	;'u'
   303  003C24  73                 	db	115	;'s'
   304  003C25  2C                 	db	44
   305  003C26  20                 	db	32
   306  003C27  63                 	db	99	;'c'
   307  003C28  6F                 	db	111	;'o'
   308  003C29  75                 	db	117	;'u'
   309  003C2A  6E                 	db	110	;'n'
   310  003C2B  74                 	db	116	;'t'
   311  003C2C  3D                 	db	61	;'='
   312  003C2D  25                 	db	37
   313  003C2E  75                 	db	117	;'u'
   314  003C2F  29                 	db	41
   315  003C30  0D                 	db	13
   316  003C31  0A                 	db	10
   317  003C32  00                 	db	0
   318  003C33                     STR_31:
   319  003C33  5B                 	db	91	;'['
   320  003C34  30                 	db	48	;'0'
   321  003C35  78                 	db	120	;'x'
   322  003C36  25                 	db	37
   323  003C37  30                 	db	48	;'0'
   324  003C38  32                 	db	50	;'2'
   325  003C39  58                 	db	88	;'X'
   326  003C3A  5D                 	db	93	;']'
   327  003C3B  20                 	db	32
   328  003C3C  30                 	db	48	;'0'
   329  003C3D  78                 	db	120	;'x'
   330  003C3E  25                 	db	37
   331  003C3F  30                 	db	48	;'0'
   332  003C40  32                 	db	50	;'2'
   333  003C41  58                 	db	88	;'X'
   334  003C42  20                 	db	32
   335  003C43  45                 	db	69	;'E'
   336  003C44  4E                 	db	78	;'N'
   337  003C45  5F                 	db	95	;'_'
   338  003C46  52                 	db	82	;'R'
   339  003C47  58                 	db	88	;'X'
   340  003C48  41                 	db	65	;'A'
   341  003C49  44                 	db	68	;'D'
   342  003C4A  44                 	db	68	;'D'
   343  003C4B  52                 	db	82	;'R'
   344  003C4C  3D                 	db	61	;'='
   345  003C4D  25                 	db	37
   346  003C4E  30                 	db	48	;'0'
   347  003C4F  36                 	db	54	;'6'
   348  003C50  62                 	db	98	;'b'
   349  003C51  20                 	db	32
   350  003C52  28                 	db	40
   351  003C53  61                 	db	97	;'a'
   352  003C54  64                 	db	100	;'d'
   353  003C55  64                 	db	100	;'d'
   354  003C56  72                 	db	114	;'r'
   355  003C57  65                 	db	101	;'e'
   356  003C58  73                 	db	115	;'s'
   357  003C59  73                 	db	115	;'s'
   358  003C5A  20                 	db	32
   359  003C5B  77                 	db	119	;'w'
   360  003C5C  69                 	db	105	;'i'
   361  003C5D  64                 	db	100	;'d'
   362  003C5E  74                 	db	116	;'t'
   363  003C5F  68                 	db	104	;'h'
   364  003C60  20                 	db	32
   365  003C61  3D                 	db	61	;'='
   366  003C62  20                 	db	32
   367  003C63  25                 	db	37
   368  003C64  75                 	db	117	;'u'
   369  003C65  29                 	db	41
   370  003C66  0D                 	db	13
   371  003C67  0A                 	db	10
   372  003C68  00                 	db	0
   373  003C69                     STR_14:
   374  003C69  5B                 	db	91	;'['
   375  003C6A  30                 	db	48	;'0'
   376  003C6B  78                 	db	120	;'x'
   377  003C6C  25                 	db	37
   378  003C6D  30                 	db	48	;'0'
   379  003C6E  32                 	db	50	;'2'
   380  003C6F  58                 	db	88	;'X'
   381  003C70  5D                 	db	93	;']'
   382  003C71  20                 	db	32
   383  003C72  30                 	db	48	;'0'
   384  003C73  78                 	db	120	;'x'
   385  003C74  25                 	db	37
   386  003C75  30                 	db	48	;'0'
   387  003C76  32                 	db	50	;'2'
   388  003C77  58                 	db	88	;'X'
   389  003C78  20                 	db	32
   390  003C79  4D                 	db	77	;'M'
   391  003C7A  41                 	db	65	;'A'
   392  003C7B  53                 	db	83	;'S'
   393  003C7C  4B                 	db	75	;'K'
   394  003C7D  3A                 	db	58	;':'
   395  003C7E  25                 	db	37
   396  003C7F  30                 	db	48	;'0'
   397  003C80  33                 	db	51	;'3'
   398  003C81  58                 	db	88	;'X'
   399  003C82  20                 	db	32
   400  003C83  43                 	db	67	;'C'
   401  003C84  52                 	db	82	;'R'
   402  003C85  43                 	db	67	;'C'
   403  003C86  3A                 	db	58	;':'
   404  003C87  25                 	db	37
   405  003C88  30                 	db	48	;'0'
   406  003C89  32                 	db	50	;'2'
   407  003C8A  58                 	db	88	;'X'
   408  003C8B  20                 	db	32
   409  003C8C  50                 	db	80	;'P'
   410  003C8D  57                 	db	87	;'W'
   411  003C8E  52                 	db	82	;'R'
   412  003C8F  3A                 	db	58	;':'
   413  003C90  25                 	db	37
   414  003C91  73                 	db	115	;'s'
   415  003C92  20                 	db	32
   416  003C93  4D                 	db	77	;'M'
   417  003C94  4F                 	db	79	;'O'
   418  003C95  44                 	db	68	;'D'
   419  003C96  45                 	db	69	;'E'
   420  003C97  3A                 	db	58	;':'
   421  003C98  50                 	db	80	;'P'
   422  003C99  25                 	db	37
   423  003C9A  73                 	db	115	;'s'
   424  003C9B  0D                 	db	13
   425  003C9C  0A                 	db	10
   426  003C9D  00                 	db	0
   427  003C9E                     STR_34:
   428  003C9E  5B                 	db	91	;'['
   429  003C9F  30                 	db	48	;'0'
   430  003CA0  78                 	db	120	;'x'
   431  003CA1  25                 	db	37
   432  003CA2  30                 	db	48	;'0'
   433  003CA3  32                 	db	50	;'2'
   434  003CA4  58                 	db	88	;'X'
   435  003CA5  5D                 	db	93	;']'
   436  003CA6  20                 	db	32
   437  003CA7  30                 	db	48	;'0'
   438  003CA8  78                 	db	120	;'x'
   439  003CA9  25                 	db	37
   440  003CAA  30                 	db	48	;'0'
   441  003CAB  32                 	db	50	;'2'
   442  003CAC  58                 	db	88	;'X'
   443  003CAD  20                 	db	32
   444  003CAE  43                 	db	67	;'C'
   445  003CAF  4F                 	db	79	;'O'
   446  003CB0  4E                 	db	78	;'N'
   447  003CB1  54                 	db	84	;'T'
   448  003CB2  5F                 	db	95	;'_'
   449  003CB3  57                 	db	87	;'W'
   450  003CB4  41                 	db	65	;'A'
   451  003CB5  56                 	db	86	;'V'
   452  003CB6  45                 	db	69	;'E'
   453  003CB7  3A                 	db	58	;':'
   454  003CB8  25                 	db	37
   455  003CB9  73                 	db	115	;'s'
   456  003CBA  20                 	db	32
   457  003CBB  50                 	db	80	;'P'
   458  003CBC  4C                 	db	76	;'L'
   459  003CBD  4C                 	db	76	;'L'
   460  003CBE  5F                 	db	95	;'_'
   461  003CBF  4C                 	db	76	;'L'
   462  003CC0  4F                 	db	79	;'O'
   463  003CC1  43                 	db	67	;'C'
   464  003CC2  4B                 	db	75	;'K'
   465  003CC3  3A                 	db	58	;':'
   466  003CC4  25                 	db	37
   467  003CC5  73                 	db	115	;'s'
   468  003CC6  20                 	db	32
   469  003CC7  44                 	db	68	;'D'
   470  003CC8  61                 	db	97	;'a'
   471  003CC9  74                 	db	116	;'t'
   472  003CCA  61                 	db	97	;'a'
   473  003CCB  52                 	db	82	;'R'
   474  003CCC  61                 	db	97	;'a'
   475  003CCD  74                 	db	116	;'t'
   476  003CCE  65                 	db	101	;'e'
   477  003CCF  3D                 	db	61	;'='
   478  003CD0  00                 	db	0
   479  003CD1                     STR_50:
   480  003CD1  5B                 	db	91	;'['
   481  003CD2  30                 	db	48	;'0'
   482  003CD3  78                 	db	120	;'x'
   483  003CD4  25                 	db	37
   484  003CD5  30                 	db	48	;'0'
   485  003CD6  32                 	db	50	;'2'
   486  003CD7  58                 	db	88	;'X'
   487  003CD8  5D                 	db	93	;']'
   488  003CD9  20                 	db	32
   489  003CDA  30                 	db	48	;'0'
   490  003CDB  78                 	db	120	;'x'
   491  003CDC  25                 	db	37
   492  003CDD  30                 	db	48	;'0'
   493  003CDE  32                 	db	50	;'2'
   494  003CDF  58                 	db	88	;'X'
   495  003CE0  20                 	db	32
   496  003CE1  49                 	db	73	;'I'
   497  003CE2  52                 	db	82	;'R'
   498  003CE3  51                 	db	81	;'Q'
   499  003CE4  3A                 	db	58	;':'
   500  003CE5  25                 	db	37
   501  003CE6  30                 	db	48	;'0'
   502  003CE7  33                 	db	51	;'3'
   503  003CE8  58                 	db	88	;'X'
   504  003CE9  20                 	db	32
   505  003CEA  52                 	db	82	;'R'
   506  003CEB  58                 	db	88	;'X'
   507  003CEC  5F                 	db	95	;'_'
   508  003CED  50                 	db	80	;'P'
   509  003CEE  49                 	db	73	;'I'
   510  003CEF  50                 	db	80	;'P'
   511  003CF0  45                 	db	69	;'E'
   512  003CF1  3A                 	db	58	;':'
   513  003CF2  25                 	db	37
   514  003CF3  75                 	db	117	;'u'
   515  003CF4  20                 	db	32
   516  003CF5  54                 	db	84	;'T'
   517  003CF6  58                 	db	88	;'X'
   518  003CF7  5F                 	db	95	;'_'
   519  003CF8  46                 	db	70	;'F'
   520  003CF9  55                 	db	85	;'U'
   521  003CFA  4C                 	db	76	;'L'
   522  003CFB  4C                 	db	76	;'L'
   523  003CFC  3A                 	db	58	;':'
   524  003CFD  25                 	db	37
   525  003CFE  73                 	db	115	;'s'
   526  003CFF  0D                 	db	13
   527  003D00  0A                 	db	10
   528  003D01  00                 	db	0
   529  003D02                     STR_53:
   530  003D02  5B                 	db	91	;'['
   531  003D03  30                 	db	48	;'0'
   532  003D04  78                 	db	120	;'x'
   533  003D05  25                 	db	37
   534  003D06  30                 	db	48	;'0'
   535  003D07  32                 	db	50	;'2'
   536  003D08  58                 	db	88	;'X'
   537  003D09  5D                 	db	93	;']'
   538  003D0A  20                 	db	32
   539  003D0B  30                 	db	48	;'0'
   540  003D0C  78                 	db	120	;'x'
   541  003D0D  25                 	db	37
   542  003D0E  30                 	db	48	;'0'
   543  003D0F  32                 	db	50	;'2'
   544  003D10  58                 	db	88	;'X'
   545  003D11  20                 	db	32
   546  003D12  50                 	db	80	;'P'
   547  003D13  4C                 	db	76	;'L'
   548  003D14  4F                 	db	79	;'O'
   549  003D15  53                 	db	83	;'S'
   550  003D16  5F                 	db	95	;'_'
   551  003D17  43                 	db	67	;'C'
   552  003D18  4E                 	db	78	;'N'
   553  003D19  54                 	db	84	;'T'
   554  003D1A  3D                 	db	61	;'='
   555  003D1B  25                 	db	37
   556  003D1C  75                 	db	117	;'u'
   557  003D1D  20                 	db	32
   558  003D1E  41                 	db	65	;'A'
   559  003D1F  52                 	db	82	;'R'
   560  003D20  43                 	db	67	;'C'
   561  003D21  5F                 	db	95	;'_'
   562  003D22  43                 	db	67	;'C'
   563  003D23  4E                 	db	78	;'N'
   564  003D24  54                 	db	84	;'T'
   565  003D25  3D                 	db	61	;'='
   566  003D26  25                 	db	37
   567  003D27  75                 	db	117	;'u'
   568  003D28  0D                 	db	13
   569  003D29  0A                 	db	10
   570  003D2A  00                 	db	0
   571  003D2B                     STR_4:
   572  003D2B  4E                 	db	78	;'N'
   573  003D2C  52                 	db	82	;'R'
   574  003D2D  46                 	db	70	;'F'
   575  003D2E  32                 	db	50	;'2'
   576  003D2F  34                 	db	52	;'4'
   577  003D30  4C                 	db	76	;'L'
   578  003D31  30                 	db	48	;'0'
   579  003D32  31                 	db	49	;'1'
   580  003D33  20                 	db	32
   581  003D34  49                 	db	73	;'I'
   582  003D35  6E                 	db	110	;'n'
   583  003D36  69                 	db	105	;'i'
   584  003D37  74                 	db	116	;'t'
   585  003D38  69                 	db	105	;'i'
   586  003D39  61                 	db	97	;'a'
   587  003D3A  6C                 	db	108	;'l'
   588  003D3B  69                 	db	105	;'i'
   589  003D3C  7A                 	db	122	;'z'
   590  003D3D  65                 	db	101	;'e'
   591  003D3E  20                 	db	32
   592  003D3F  73                 	db	115	;'s'
   593  003D40  75                 	db	117	;'u'
   594  003D41  63                 	db	99	;'c'
   595  003D42  63                 	db	99	;'c'
   596  003D43  65                 	db	101	;'e'
   597  003D44  73                 	db	115	;'s'
   598  003D45  73                 	db	115	;'s'
   599  003D46  66                 	db	102	;'f'
   600  003D47  75                 	db	117	;'u'
   601  003D48  6C                 	db	108	;'l'
   602  003D49  0D                 	db	13
   603  003D4A  0A                 	db	10
   604  003D4B  00                 	db	0
   605  003D4C                     STR_10:
   606  003D4C  46                 	db	70	;'F'
   607  003D4D  61                 	db	97	;'a'
   608  003D4E  69                 	db	105	;'i'
   609  003D4F  6C                 	db	108	;'l'
   610  003D50  65                 	db	101	;'e'
   611  003D51  64                 	db	100	;'d'
   612  003D52  20                 	db	32
   613  003D53  49                 	db	73	;'I'
   614  003D54  6E                 	db	110	;'n'
   615  003D55  69                 	db	105	;'i'
   616  003D56  74                 	db	116	;'t'
   617  003D57  69                 	db	105	;'i'
   618  003D58  61                 	db	97	;'a'
   619  003D59  6C                 	db	108	;'l'
   620  003D5A  69                 	db	105	;'i'
   621  003D5B  7A                 	db	122	;'z'
   622  003D5C  65                 	db	101	;'e'
   623  003D5D  20                 	db	32
   624  003D5E  4E                 	db	78	;'N'
   625  003D5F  52                 	db	82	;'R'
   626  003D60  46                 	db	70	;'F'
   627  003D61  32                 	db	50	;'2'
   628  003D62  34                 	db	52	;'4'
   629  003D63  4C                 	db	76	;'L'
   630  003D64  30                 	db	48	;'0'
   631  003D65  31                 	db	49	;'1'
   632  003D66  0D                 	db	13
   633  003D67  0A                 	db	10
   634  003D68  00                 	db	0
   635  003D69                     STR_33:
   636  003D69  5B                 	db	91	;'['
   637  003D6A  30                 	db	48	;'0'
   638  003D6B  78                 	db	120	;'x'
   639  003D6C  25                 	db	37
   640  003D6D  30                 	db	48	;'0'
   641  003D6E  32                 	db	50	;'2'
   642  003D6F  58                 	db	88	;'X'
   643  003D70  5D                 	db	93	;']'
   644  003D71  20                 	db	32
   645  003D72  30                 	db	48	;'0'
   646  003D73  78                 	db	120	;'x'
   647  003D74  25                 	db	37
   648  003D75  30                 	db	48	;'0'
   649  003D76  32                 	db	50	;'2'
   650  003D77  58                 	db	88	;'X'
   651  003D78  20                 	db	32
   652  003D79  28                 	db	40
   653  003D7A  25                 	db	37
   654  003D7B  2E                 	db	46
   655  003D7C  33                 	db	51	;'3'
   656  003D7D  75                 	db	117	;'u'
   657  003D7E  47                 	db	71	;'G'
   658  003D7F  48                 	db	72	;'H'
   659  003D80  7A                 	db	122	;'z'
   660  003D81  29                 	db	41
   661  003D82  0D                 	db	13
   662  003D83  0A                 	db	10
   663  003D84  00                 	db	0
   664  003D85                     STR_25:
   665  003D85  5B                 	db	91	;'['
   666  003D86  30                 	db	48	;'0'
   667  003D87  78                 	db	120	;'x'
   668  003D88  25                 	db	37
   669  003D89  30                 	db	48	;'0'
   670  003D8A  32                 	db	50	;'2'
   671  003D8B  58                 	db	88	;'X'
   672  003D8C  5D                 	db	93	;']'
   673  003D8D  20                 	db	32
   674  003D8E  30                 	db	48	;'0'
   675  003D8F  78                 	db	120	;'x'
   676  003D90  25                 	db	37
   677  003D91  30                 	db	48	;'0'
   678  003D92  32                 	db	50	;'2'
   679  003D93  58                 	db	88	;'X'
   680  003D94  20                 	db	32
   681  003D95  45                 	db	69	;'E'
   682  003D96  4E                 	db	78	;'N'
   683  003D97  5F                 	db	95	;'_'
   684  003D98  52                 	db	82	;'R'
   685  003D99  58                 	db	88	;'X'
   686  003D9A  41                 	db	65	;'A'
   687  003D9B  44                 	db	68	;'D'
   688  003D9C  44                 	db	68	;'D'
   689  003D9D  52                 	db	82	;'R'
   690  003D9E  3A                 	db	58	;':'
   691  003D9F  20                 	db	32
   692  003DA0  00                 	db	0
   693  003DA1                     STR_12:
   694  003DA1  6E                 	db	110	;'n'
   695  003DA2  72                 	db	114	;'r'
   696  003DA3  66                 	db	102	;'f'
   697  003DA4  32                 	db	50	;'2'
   698  003DA5  34                 	db	52	;'4'
   699  003DA6  5F                 	db	95	;'_'
   700  003DA7  73                 	db	115	;'s'
   701  003DA8  65                 	db	101	;'e'
   702  003DA9  74                 	db	116	;'t'
   703  003DAA  5F                 	db	95	;'_'
   704  003DAB  72                 	db	114	;'r'
   705  003DAC  66                 	db	102	;'f'
   706  003DAD  5F                 	db	95	;'_'
   707  003DAE  6D                 	db	109	;'m'
   708  003DAF  6F                 	db	111	;'o'
   709  003DB0  64                 	db	100	;'d'
   710  003DB1  65                 	db	101	;'e'
   711  003DB2  28                 	db	40
   712  003DB3  6D                 	db	109	;'m'
   713  003DB4  6F                 	db	111	;'o'
   714  003DB5  64                 	db	100	;'d'
   715  003DB6  65                 	db	101	;'e'
   716  003DB7  29                 	db	41
   717  003DB8  0D                 	db	13
   718  003DB9  0A                 	db	10
   719  003DBA  00                 	db	0
   720  003DBB                     STR_54:
   721  003DBB  5B                 	db	91	;'['
   722  003DBC  30                 	db	48	;'0'
   723  003DBD  78                 	db	120	;'x'
   724  003DBE  25                 	db	37
   725  003DBF  30                 	db	48	;'0'
   726  003DC0  32                 	db	50	;'2'
   727  003DC1  58                 	db	88	;'X'
   728  003DC2  5D                 	db	93	;']'
   729  003DC3  20                 	db	32
   730  003DC4  30                 	db	48	;'0'
   731  003DC5  78                 	db	120	;'x'
   732  003DC6  25                 	db	37
   733  003DC7  30                 	db	48	;'0'
   734  003DC8  32                 	db	50	;'2'
   735  003DC9  58                 	db	88	;'X'
   736  003DCA  20                 	db	32
   737  003DCB  52                 	db	82	;'R'
   738  003DCC  50                 	db	80	;'P'
   739  003DCD  44                 	db	68	;'D'
   740  003DCE  3D                 	db	61	;'='
   741  003DCF  25                 	db	37
   742  003DD0  73                 	db	115	;'s'
   743  003DD1  0D                 	db	13
   744  003DD2  0A                 	db	10
   745  003DD3  00                 	db	0
   746  003DD4                     STR_6:
   747  003DD4  4E                 	db	78	;'N'
   748  003DD5  52                 	db	82	;'R'
   749  003DD6  46                 	db	70	;'F'
   750  003DD7  32                 	db	50	;'2'
   751  003DD8  34                 	db	52	;'4'
   752  003DD9  20                 	db	32
   753  003DDA  52                 	db	82	;'R'
   754  003DDB  65                 	db	101	;'e'
   755  003DDC  63                 	db	99	;'c'
   756  003DDD  65                 	db	101	;'e'
   757  003DDE  69                 	db	105	;'i'
   758  003DDF  76                 	db	118	;'v'
   759  003DE0  65                 	db	101	;'e'
   760  003DE1  20                 	db	32
   761  003DE2  44                 	db	68	;'D'
   762  003DE3  61                 	db	97	;'a'
   763  003DE4  74                 	db	116	;'t'
   764  003DE5  61                 	db	97	;'a'
   765  003DE6  3A                 	db	58	;':'
   766  003DE7  20                 	db	32
   767  003DE8  25                 	db	37
   768  003DE9  73                 	db	115	;'s'
   769  003DEA  0D                 	db	13
   770  003DEB  0A                 	db	10
   771  003DEC  00                 	db	0
   772  003DED                     STR_13:
   773  003DED  72                 	db	114	;'r'
   774  003DEE  66                 	db	102	;'f'
   775  003DEF  43                 	db	67	;'C'
   776  003DF0  61                 	db	97	;'a'
   777  003DF1  72                 	db	114	;'r'
   778  003DF2  64                 	db	100	;'d'
   779  003DF3  50                 	db	80	;'P'
   780  003DF4  72                 	db	114	;'r'
   781  003DF5  65                 	db	101	;'e'
   782  003DF6  73                 	db	115	;'s'
   783  003DF7  65                 	db	101	;'e'
   784  003DF8  6E                 	db	110	;'n'
   785  003DF9  74                 	db	116	;'t'
   786  003DFA  20                 	db	32
   787  003DFB  3D                 	db	61	;'='
   788  003DFC  20                 	db	32
   789  003DFD  54                 	db	84	;'T'
   790  003DFE  52                 	db	82	;'R'
   791  003DFF  55                 	db	85	;'U'
   792  003E00  45                 	db	69	;'E'
   793  003E01  0D                 	db	13
   794  003E02  0A                 	db	10
   795  003E03  00                 	db	0
   796  003E04                     STR_78:
   797  003E04  5B                 	db	91	;'['
   798  003E05  30                 	db	48	;'0'
   799  003E06  78                 	db	120	;'x'
   800  003E07  25                 	db	37
   801  003E08  30                 	db	48	;'0'
   802  003E09  32                 	db	50	;'2'
   803  003E0A  58                 	db	88	;'X'
   804  003E0B  5D                 	db	93	;']'
   805  003E0C  20                 	db	32
   806  003E0D  52                 	db	82	;'R'
   807  003E0E  58                 	db	88	;'X'
   808  003E0F  5F                 	db	95	;'_'
   809  003E10  50                 	db	80	;'P'
   810  003E11  57                 	db	87	;'W'
   811  003E12  5F                 	db	95	;'_'
   812  003E13  50                 	db	80	;'P'
   813  003E14  30                 	db	48	;'0'
   814  003E15  3D                 	db	61	;'='
   815  003E16  25                 	db	37
   816  003E17  75                 	db	117	;'u'
   817  003E18  0D                 	db	13
   818  003E19  0A                 	db	10
   819  003E1A  00                 	db	0
   820  003E1B                     STR_79:
   821  003E1B  5B                 	db	91	;'['
   822  003E1C  30                 	db	48	;'0'
   823  003E1D  78                 	db	120	;'x'
   824  003E1E  25                 	db	37
   825  003E1F  30                 	db	48	;'0'
   826  003E20  32                 	db	50	;'2'
   827  003E21  58                 	db	88	;'X'
   828  003E22  5D                 	db	93	;']'
   829  003E23  20                 	db	32
   830  003E24  52                 	db	82	;'R'
   831  003E25  58                 	db	88	;'X'
   832  003E26  5F                 	db	95	;'_'
   833  003E27  50                 	db	80	;'P'
   834  003E28  57                 	db	87	;'W'
   835  003E29  5F                 	db	95	;'_'
   836  003E2A  50                 	db	80	;'P'
   837  003E2B  31                 	db	49	;'1'
   838  003E2C  3D                 	db	61	;'='
   839  003E2D  25                 	db	37
   840  003E2E  75                 	db	117	;'u'
   841  003E2F  0D                 	db	13
   842  003E30  0A                 	db	10
   843  003E31  00                 	db	0
   844  003E32                     STR_80:
   845  003E32  5B                 	db	91	;'['
   846  003E33  30                 	db	48	;'0'
   847  003E34  78                 	db	120	;'x'
   848  003E35  25                 	db	37
   849  003E36  30                 	db	48	;'0'
   850  003E37  32                 	db	50	;'2'
   851  003E38  58                 	db	88	;'X'
   852  003E39  5D                 	db	93	;']'
   853  003E3A  20                 	db	32
   854  003E3B  52                 	db	82	;'R'
   855  003E3C  58                 	db	88	;'X'
   856  003E3D  5F                 	db	95	;'_'
   857  003E3E  50                 	db	80	;'P'
   858  003E3F  57                 	db	87	;'W'
   859  003E40  5F                 	db	95	;'_'
   860  003E41  50                 	db	80	;'P'
   861  003E42  32                 	db	50	;'2'
   862  003E43  3D                 	db	61	;'='
   863  003E44  25                 	db	37
   864  003E45  75                 	db	117	;'u'
   865  003E46  0D                 	db	13
   866  003E47  0A                 	db	10
   867  003E48  00                 	db	0
   868  003E49                     STR_81:
   869  003E49  5B                 	db	91	;'['
   870  003E4A  30                 	db	48	;'0'
   871  003E4B  78                 	db	120	;'x'
   872  003E4C  25                 	db	37
   873  003E4D  30                 	db	48	;'0'
   874  003E4E  32                 	db	50	;'2'
   875  003E4F  58                 	db	88	;'X'
   876  003E50  5D                 	db	93	;']'
   877  003E51  20                 	db	32
   878  003E52  52                 	db	82	;'R'
   879  003E53  58                 	db	88	;'X'
   880  003E54  5F                 	db	95	;'_'
   881  003E55  50                 	db	80	;'P'
   882  003E56  57                 	db	87	;'W'
   883  003E57  5F                 	db	95	;'_'
   884  003E58  50                 	db	80	;'P'
   885  003E59  33                 	db	51	;'3'
   886  003E5A  3D                 	db	61	;'='
   887  003E5B  25                 	db	37
   888  003E5C  75                 	db	117	;'u'
   889  003E5D  0D                 	db	13
   890  003E5E  0A                 	db	10
   891  003E5F  00                 	db	0
   892  003E60                     STR_82:
   893  003E60  5B                 	db	91	;'['
   894  003E61  30                 	db	48	;'0'
   895  003E62  78                 	db	120	;'x'
   896  003E63  25                 	db	37
   897  003E64  30                 	db	48	;'0'
   898  003E65  32                 	db	50	;'2'
   899  003E66  58                 	db	88	;'X'
   900  003E67  5D                 	db	93	;']'
   901  003E68  20                 	db	32
   902  003E69  52                 	db	82	;'R'
   903  003E6A  58                 	db	88	;'X'
   904  003E6B  5F                 	db	95	;'_'
   905  003E6C  50                 	db	80	;'P'
   906  003E6D  57                 	db	87	;'W'
   907  003E6E  5F                 	db	95	;'_'
   908  003E6F  50                 	db	80	;'P'
   909  003E70  34                 	db	52	;'4'
   910  003E71  3D                 	db	61	;'='
   911  003E72  25                 	db	37
   912  003E73  75                 	db	117	;'u'
   913  003E74  0D                 	db	13
   914  003E75  0A                 	db	10
   915  003E76  00                 	db	0
   916  003E77                     STR_83:
   917  003E77  5B                 	db	91	;'['
   918  003E78  30                 	db	48	;'0'
   919  003E79  78                 	db	120	;'x'
   920  003E7A  25                 	db	37
   921  003E7B  30                 	db	48	;'0'
   922  003E7C  32                 	db	50	;'2'
   923  003E7D  58                 	db	88	;'X'
   924  003E7E  5D                 	db	93	;']'
   925  003E7F  20                 	db	32
   926  003E80  52                 	db	82	;'R'
   927  003E81  58                 	db	88	;'X'
   928  003E82  5F                 	db	95	;'_'
   929  003E83  50                 	db	80	;'P'
   930  003E84  57                 	db	87	;'W'
   931  003E85  5F                 	db	95	;'_'
   932  003E86  50                 	db	80	;'P'
   933  003E87  35                 	db	53	;'5'
   934  003E88  3D                 	db	61	;'='
   935  003E89  25                 	db	37
   936  003E8A  75                 	db	117	;'u'
   937  003E8B  0D                 	db	13
   938  003E8C  0A                 	db	10
   939  003E8D  00                 	db	0
   940  003E8E                     STR_19:
   941  003E8E  5B                 	db	91	;'['
   942  003E8F  30                 	db	48	;'0'
   943  003E90  78                 	db	120	;'x'
   944  003E91  25                 	db	37
   945  003E92  30                 	db	48	;'0'
   946  003E93  32                 	db	50	;'2'
   947  003E94  58                 	db	88	;'X'
   948  003E95  5D                 	db	93	;']'
   949  003E96  20                 	db	32
   950  003E97  30                 	db	48	;'0'
   951  003E98  78                 	db	120	;'x'
   952  003E99  25                 	db	37
   953  003E9A  30                 	db	48	;'0'
   954  003E9B  32                 	db	50	;'2'
   955  003E9C  58                 	db	88	;'X'
   956  003E9D  20                 	db	32
   957  003E9E  45                 	db	69	;'E'
   958  003E9F  4E                 	db	78	;'N'
   959  003EA0  41                 	db	65	;'A'
   960  003EA1  41                 	db	65	;'A'
   961  003EA2  3A                 	db	58	;':'
   962  003EA3  20                 	db	32
   963  003EA4  00                 	db	0
   964  003EA5                     STR_57:
   965  003EA5  5B                 	db	91	;'['
   966  003EA6  30                 	db	48	;'0'
   967  003EA7  78                 	db	120	;'x'
   968  003EA8  25                 	db	37
   969  003EA9  30                 	db	48	;'0'
   970  003EAA  32                 	db	50	;'2'
   971  003EAB  58                 	db	88	;'X'
   972  003EAC  5D                 	db	93	;']'
   973  003EAD  20                 	db	32
   974  003EAE  52                 	db	82	;'R'
   975  003EAF  58                 	db	88	;'X'
   976  003EB0  5F                 	db	95	;'_'
   977  003EB1  41                 	db	65	;'A'
   978  003EB2  44                 	db	68	;'D'
   979  003EB3  44                 	db	68	;'D'
   980  003EB4  52                 	db	82	;'R'
   981  003EB5  5F                 	db	95	;'_'
   982  003EB6  50                 	db	80	;'P'
   983  003EB7  30                 	db	48	;'0'
   984  003EB8  20                 	db	32
   985  003EB9  22                 	db	34
   986  003EBA  00                 	db	0
   987  003EBB                     STR_60:
   988  003EBB  5B                 	db	91	;'['
   989  003EBC  30                 	db	48	;'0'
   990  003EBD  78                 	db	120	;'x'
   991  003EBE  25                 	db	37
   992  003EBF  30                 	db	48	;'0'
   993  003EC0  32                 	db	50	;'2'
   994  003EC1  58                 	db	88	;'X'
   995  003EC2  5D                 	db	93	;']'
   996  003EC3  20                 	db	32
   997  003EC4  52                 	db	82	;'R'
   998  003EC5  58                 	db	88	;'X'
   999  003EC6  5F                 	db	95	;'_'
  1000  003EC7  41                 	db	65	;'A'
  1001  003EC8  44                 	db	68	;'D'
  1002  003EC9  44                 	db	68	;'D'
  1003  003ECA  52                 	db	82	;'R'
  1004  003ECB  5F                 	db	95	;'_'
  1005  003ECC  50                 	db	80	;'P'
  1006  003ECD  31                 	db	49	;'1'
  1007  003ECE  20                 	db	32
  1008  003ECF  22                 	db	34
  1009  003ED0  00                 	db	0
  1010  003ED1                     STR_63:
  1011  003ED1  5B                 	db	91	;'['
  1012  003ED2  30                 	db	48	;'0'
  1013  003ED3  78                 	db	120	;'x'
  1014  003ED4  25                 	db	37
  1015  003ED5  30                 	db	48	;'0'
  1016  003ED6  32                 	db	50	;'2'
  1017  003ED7  58                 	db	88	;'X'
  1018  003ED8  5D                 	db	93	;']'
  1019  003ED9  20                 	db	32
  1020  003EDA  52                 	db	82	;'R'
  1021  003EDB  58                 	db	88	;'X'
  1022  003EDC  5F                 	db	95	;'_'
  1023  003EDD  41                 	db	65	;'A'
  1024  003EDE  44                 	db	68	;'D'
  1025  003EDF  44                 	db	68	;'D'
  1026  003EE0  52                 	db	82	;'R'
  1027  003EE1  5F                 	db	95	;'_'
  1028  003EE2  50                 	db	80	;'P'
  1029  003EE3  32                 	db	50	;'2'
  1030  003EE4  20                 	db	32
  1031  003EE5  22                 	db	34
  1032  003EE6  00                 	db	0
  1033  003EE7                     STR_66:
  1034  003EE7  5B                 	db	91	;'['
  1035  003EE8  30                 	db	48	;'0'
  1036  003EE9  78                 	db	120	;'x'
  1037  003EEA  25                 	db	37
  1038  003EEB  30                 	db	48	;'0'
  1039  003EEC  32                 	db	50	;'2'
  1040  003EED  58                 	db	88	;'X'
  1041  003EEE  5D                 	db	93	;']'
  1042  003EEF  20                 	db	32
  1043  003EF0  52                 	db	82	;'R'
  1044  003EF1  58                 	db	88	;'X'
  1045  003EF2  5F                 	db	95	;'_'
  1046  003EF3  41                 	db	65	;'A'
  1047  003EF4  44                 	db	68	;'D'
  1048  003EF5  44                 	db	68	;'D'
  1049  003EF6  52                 	db	82	;'R'
  1050  003EF7  5F                 	db	95	;'_'
  1051  003EF8  50                 	db	80	;'P'
  1052  003EF9  33                 	db	51	;'3'
  1053  003EFA  20                 	db	32
  1054  003EFB  22                 	db	34
  1055  003EFC  00                 	db	0
  1056  003EFD                     STR_69:
  1057  003EFD  5B                 	db	91	;'['
  1058  003EFE  30                 	db	48	;'0'
  1059  003EFF  78                 	db	120	;'x'
  1060  003F00  25                 	db	37
  1061  003F01  30                 	db	48	;'0'
  1062  003F02  32                 	db	50	;'2'
  1063  003F03  58                 	db	88	;'X'
  1064  003F04  5D                 	db	93	;']'
  1065  003F05  20                 	db	32
  1066  003F06  52                 	db	82	;'R'
  1067  003F07  58                 	db	88	;'X'
  1068  003F08  5F                 	db	95	;'_'
  1069  003F09  41                 	db	65	;'A'
  1070  003F0A  44                 	db	68	;'D'
  1071  003F0B  44                 	db	68	;'D'
  1072  003F0C  52                 	db	82	;'R'
  1073  003F0D  5F                 	db	95	;'_'
  1074  003F0E  50                 	db	80	;'P'
  1075  003F0F  34                 	db	52	;'4'
  1076  003F10  20                 	db	32
  1077  003F11  22                 	db	34
  1078  003F12  00                 	db	0
  1079  003F13                     STR_72:
  1080  003F13  5B                 	db	91	;'['
  1081  003F14  30                 	db	48	;'0'
  1082  003F15  78                 	db	120	;'x'
  1083  003F16  25                 	db	37
  1084  003F17  30                 	db	48	;'0'
  1085  003F18  32                 	db	50	;'2'
  1086  003F19  58                 	db	88	;'X'
  1087  003F1A  5D                 	db	93	;']'
  1088  003F1B  20                 	db	32
  1089  003F1C  52                 	db	82	;'R'
  1090  003F1D  58                 	db	88	;'X'
  1091  003F1E  5F                 	db	95	;'_'
  1092  003F1F  41                 	db	65	;'A'
  1093  003F20  44                 	db	68	;'D'
  1094  003F21  44                 	db	68	;'D'
  1095  003F22  52                 	db	82	;'R'
  1096  003F23  5F                 	db	95	;'_'
  1097  003F24  50                 	db	80	;'P'
  1098  003F25  35                 	db	53	;'5'
  1099  003F26  20                 	db	32
  1100  003F27  22                 	db	34
  1101  003F28  00                 	db	0
  1102  003F29                     STR_1:
  1103  003F29  53                 	db	83	;'S'
  1104  003F2A  50                 	db	80	;'P'
  1105  003F2B  49                 	db	73	;'I'
  1106  003F2C  31                 	db	49	;'1'
  1107  003F2D  5F                 	db	95	;'_'
  1108  003F2E  52                 	db	82	;'R'
  1109  003F2F  65                 	db	101	;'e'
  1110  003F30  61                 	db	97	;'a'
  1111  003F31  64                 	db	100	;'d'
  1112  003F32  42                 	db	66	;'B'
  1113  003F33  79                 	db	121	;'y'
  1114  003F34  74                 	db	116	;'t'
  1115  003F35  65                 	db	101	;'e'
  1116  003F36  20                 	db	32
  1117  003F37  25                 	db	37
  1118  003F38  64                 	db	100	;'d'
  1119  003F39  20                 	db	32
  1120  003F3A  0D                 	db	13
  1121  003F3B  0A                 	db	10
  1122  003F3C  00                 	db	0
  1123  003F3D                     STR_75:
  1124  003F3D  5B                 	db	91	;'['
  1125  003F3E  30                 	db	48	;'0'
  1126  003F3F  78                 	db	120	;'x'
  1127  003F40  25                 	db	37
  1128  003F41  30                 	db	48	;'0'
  1129  003F42  32                 	db	50	;'2'
  1130  003F43  58                 	db	88	;'X'
  1131  003F44  5D                 	db	93	;']'
  1132  003F45  20                 	db	32
  1133  003F46  54                 	db	84	;'T'
  1134  003F47  58                 	db	88	;'X'
  1135  003F48  5F                 	db	95	;'_'
  1136  003F49  41                 	db	65	;'A'
  1137  003F4A  44                 	db	68	;'D'
  1138  003F4B  44                 	db	68	;'D'
  1139  003F4C  52                 	db	82	;'R'
  1140  003F4D  20                 	db	32
  1141  003F4E  22                 	db	34
  1142  003F4F  00                 	db	0
  1143  003F50                     STR_2:
  1144  003F50  54                 	db	84	;'T'
  1145  003F51  69                 	db	105	;'i'
  1146  003F52  6D                 	db	109	;'m'
  1147  003F53  65                 	db	101	;'e'
  1148  003F54  72                 	db	114	;'r'
  1149  003F55  30                 	db	48	;'0'
  1150  003F56  20                 	db	32
  1151  003F57  69                 	db	105	;'i'
  1152  003F58  6E                 	db	110	;'n'
  1153  003F59  69                 	db	105	;'i'
  1154  003F5A  74                 	db	116	;'t'
  1155  003F5B  20                 	db	32
  1156  003F5C  44                 	db	68	;'D'
  1157  003F5D  6F                 	db	111	;'o'
  1158  003F5E  6E                 	db	110	;'n'
  1159  003F5F  65                 	db	101	;'e'
  1160  003F60  0D                 	db	13
  1161  003F61  0A                 	db	10
  1162  003F62  00                 	db	0
  1163  003F63                     STR_85:
  1164  003F63  30                 	db	48	;'0'
  1165  003F64  31                 	db	49	;'1'
  1166  003F65  32                 	db	50	;'2'
  1167  003F66  33                 	db	51	;'3'
  1168  003F67  34                 	db	52	;'4'
  1169  003F68  35                 	db	53	;'5'
  1170  003F69  36                 	db	54	;'6'
  1171  003F6A  37                 	db	55	;'7'
  1172  003F6B  38                 	db	56	;'8'
  1173  003F6C  39                 	db	57	;'9'
  1174  003F6D  41                 	db	65	;'A'
  1175  003F6E  42                 	db	66	;'B'
  1176  003F6F  43                 	db	67	;'C'
  1177  003F70  44                 	db	68	;'D'
  1178  003F71  45                 	db	69	;'E'
  1179  003F72  46                 	db	70	;'F'
  1180  003F73  00                 	db	0
  1181  003F74                     STR_86:
  1182  003F74  30                 	db	48	;'0'
  1183  003F75  31                 	db	49	;'1'
  1184  003F76  32                 	db	50	;'2'
  1185  003F77  33                 	db	51	;'3'
  1186  003F78  34                 	db	52	;'4'
  1187  003F79  35                 	db	53	;'5'
  1188  003F7A  36                 	db	54	;'6'
  1189  003F7B  37                 	db	55	;'7'
  1190  003F7C  38                 	db	56	;'8'
  1191  003F7D  39                 	db	57	;'9'
  1192  003F7E  61                 	db	97	;'a'
  1193  003F7F  62                 	db	98	;'b'
  1194  003F80  63                 	db	99	;'c'
  1195  003F81  64                 	db	100	;'d'
  1196  003F82  65                 	db	101	;'e'
  1197  003F83  66                 	db	102	;'f'
  1198  003F84  00                 	db	0
  1199  003F85                     STR_20:
  1200  003F85  5B                 	db	91	;'['
  1201  003F86  50                 	db	80	;'P'
  1202  003F87  25                 	db	37
  1203  003F88  31                 	db	49	;'1'
  1204  003F89  75                 	db	117	;'u'
  1205  003F8A  25                 	db	37
  1206  003F8B  73                 	db	115	;'s'
  1207  003F8C  5D                 	db	93	;']'
  1208  003F8D  25                 	db	37
  1209  003F8E  73                 	db	115	;'s'
  1210  003F8F  00                 	db	0
  1211  003F90                     STR_41:
  1212  003F90  32                 	db	50	;'2'
  1213  003F91  35                 	db	53	;'5'
  1214  003F92  30                 	db	48	;'0'
  1215  003F93  6B                 	db	107	;'k'
  1216  003F94  62                 	db	98	;'b'
  1217  003F95  70                 	db	112	;'p'
  1218  003F96  73                 	db	115	;'s'
  1219  003F97  20                 	db	32
  1220  003F98  00                 	db	0
  1221  003F99                     STR_43:
  1222  003F99  52                 	db	82	;'R'
  1223  003F9A  46                 	db	70	;'F'
  1224  003F9B  5F                 	db	95	;'_'
  1225  003F9C  50                 	db	80	;'P'
  1226  003F9D  57                 	db	87	;'W'
  1227  003F9E  52                 	db	82	;'R'
  1228  003F9F  3D                 	db	61	;'='
  1229  003FA0  00                 	db	0
  1230  003FA1                     STR_84:
  1231  003FA1  28                 	db	40
  1232  003FA2  6E                 	db	110	;'n'
  1233  003FA3  75                 	db	117	;'u'
  1234  003FA4  6C                 	db	108	;'l'
  1235  003FA5  6C                 	db	108	;'l'
  1236  003FA6  29                 	db	41
  1237  003FA7  00                 	db	0
  1238  003FA8                     STR_39:
  1239  003FA8  31                 	db	49	;'1'
  1240  003FA9  4D                 	db	77	;'M'
  1241  003FAA  62                 	db	98	;'b'
  1242  003FAB  70                 	db	112	;'p'
  1243  003FAC  73                 	db	115	;'s'
  1244  003FAD  20                 	db	32
  1245  003FAE  00                 	db	0
  1246  003FAF                     STR_40:
  1247  003FAF  32                 	db	50	;'2'
  1248  003FB0  4D                 	db	77	;'M'
  1249  003FB1  62                 	db	98	;'b'
  1250  003FB2  70                 	db	112	;'p'
  1251  003FB3  73                 	db	115	;'s'
  1252  003FB4  20                 	db	32
  1253  003FB5  00                 	db	0
  1254  003FB6                     STR_65:
  1255  003FB6  25                 	db	37
  1256  003FB7  68                 	db	104	;'h'
  1257  003FB8  22                 	db	34
  1258  003FB9  0D                 	db	13
  1259  003FBA  0A                 	db	10
  1260  003FBB  00                 	db	0
  1261  003FBC                     STR_71:
  1262  003FBC  25                 	db	37
  1263  003FBD  78                 	db	120	;'x'
  1264  003FBE  22                 	db	34
  1265  003FBF  0D                 	db	13
  1266  003FC0  0A                 	db	10
  1267  003FC1  00                 	db	0
  1268  003FC2                     STR_49:
  1269  003FC2  64                 	db	100	;'d'
  1270  003FC3  42                 	db	66	;'B'
  1271  003FC4  6D                 	db	109	;'m'
  1272  003FC5  0D                 	db	13
  1273  003FC6  0A                 	db	10
  1274  003FC7  00                 	db	0
  1275  003FC8                     STR_42:
  1276  003FC8  3F                 	db	63	;'?'
  1277  003FC9  3F                 	db	63	;'?'
  1278  003FCA  3F                 	db	63	;'?'
  1279  003FCB  20                 	db	32
  1280  003FCC  00                 	db	0
  1281  003FCD                     STR_7:
  1282  003FCD  25                 	db	37
  1283  003FCE  64                 	db	100	;'d'
  1284  003FCF  2C                 	db	44
  1285  003FD0  20                 	db	32
  1286  003FD1  00                 	db	0
  1287  003FD2                     STR_45:
  1288  003FD2  2D                 	db	45
  1289  003FD3  31                 	db	49	;'1'
  1290  003FD4  32                 	db	50	;'2'
  1291  003FD5  00                 	db	0
  1292  003FD6                     STR_44:
  1293  003FD6  2D                 	db	45
  1294  003FD7  31                 	db	49	;'1'
  1295  003FD8  38                 	db	56	;'8'
  1296  003FD9  00                 	db	0
  1297  003FDA                     STR_48:
  1298  003FDA  3F                 	db	63	;'?'
  1299  003FDB  3F                 	db	63	;'?'
  1300  003FDC  3F                 	db	63	;'?'
  1301  003FDD  00                 	db	0
  1302  003FDE                     STR_16:
  1303  003FDE  4F                 	db	79	;'O'
  1304  003FDF  46                 	db	70	;'F'
  1305  003FE0  46                 	db	70	;'F'
  1306  003FE1  00                 	db	0
  1307  003FE2                     STR_51:
  1308  003FE2  59                 	db	89	;'Y'
  1309  003FE3  45                 	db	69	;'E'
  1310  003FE4  53                 	db	83	;'S'
  1311  003FE5  00                 	db	0
  1312  003FE6                     STR_46:
  1313  003FE6  2D                 	db	45
  1314  003FE7  36                 	db	54	;'6'
  1315  003FE8  00                 	db	0
  1316  003FE9                     STR_15:
  1317  003FE9  4F                 	db	79	;'O'
  1318  003FEA  4E                 	db	78	;'N'
  1319  003FEB  00                 	db	0
  1320  003FEC                     STR_52:
  1321  003FEC  4E                 	db	78	;'N'
  1322  003FED  4F                 	db	79	;'O'
  1323  003FEE  00                 	db	0
  1324  003FEF                     STR_17:
  1325  003FEF  52                 	db	82	;'R'
  1326  003FF0  58                 	db	88	;'X'
  1327  003FF1  00                 	db	0
  1328  003FF2                     STR_18:
  1329  003FF2  54                 	db	84	;'T'
  1330  003FF3  58                 	db	88	;'X'
  1331  003FF4  00                 	db	0
  1332  003FF5                     STR_58:
  1333  003FF5  25                 	db	37
  1334  003FF6  78                 	db	120	;'x'
  1335  003FF7  00                 	db	0
  1336  003FF8                     STR_21:
  1337  003FF8  2B                 	db	43
  1338  003FF9  00                 	db	0
  1339  003FFA                     STR_22:
  1340  003FFA  2D                 	db	45
  1341  003FFB  00                 	db	0
  1342  003FFC                     STR_47:
  1343  003FFC  30                 	db	48	;'0'
  1344  003FFD  00                 	db	0
  1345  003FFE  00                 	db	0	; dummy byte at the end
  1346  0000                     
  1347                           	psect	nvCOMRAM
  1348  000059                     __pnvCOMRAM:
  1349                           	callstack 0
  1350  000059                     _timer0ReloadVal:
  1351                           	callstack 0
  1352  000059                     	ds	2
  1353                           
  1354                           	psect	nvBANK0
  1355  0000C6                     __pnvBANK0:
  1356                           	callstack 0
  1357  0000C6                     _TMR0_InterruptHandler:
  1358                           	callstack 0
  1359  0000C6                     	ds	2
  1360  0000C8                     _EUSART1_ErrorHandler:
  1361                           	callstack 0
  1362  0000C8                     	ds	2
  1363  0000CA                     _EUSART1_OverrunErrorHandler:
  1364                           	callstack 0
  1365  0000CA                     	ds	2
  1366  0000CC                     _EUSART1_FramingErrorHandler:
  1367                           	callstack 0
  1368  0000CC                     	ds	2
  1369  0000                     _LATAbits	set	3977
  1370  0000                     _SSPCON1	set	4038
  1371  0000                     _T0CON	set	4053
  1372  0000                     _LATCbits	set	3979
  1373  0000                     _TRISBbits	set	3987
  1374  0000                     _TRISCbits	set	3988
  1375  0000                     _ANSEL	set	3966
  1376  0000                     _ANSELH	set	3967
  1377  0000                     _LATA	set	3977
  1378  0000                     _OSCCONbits	set	4051
  1379  0000                     _T0CONbits	set	4053
  1380  0000                     _INTCONbits	set	4082
  1381  0000                     _TRISA	set	3986
  1382  0000                     _LATC	set	3979
  1383  0000                     _LATB	set	3978
  1384  0000                     _PIE1bits	set	3997
  1385  0000                     _PIR1bits	set	3998
  1386  0000                     _RCSTAbits	set	4011
  1387  0000                     _SPBRG	set	4015
  1388  0000                     _SPBRGH	set	4016
  1389  0000                     _TRISC	set	3988
  1390  0000                     _TRISB	set	3987
  1391  0000                     _BAUDCONbits	set	4024
  1392  0000                     _SSPCON1bits	set	4038
  1393  0000                     _PIE2bits	set	4000
  1394  0000                     _SSPBUF	set	4041
  1395  0000                     _SSPSTATbits	set	4039
  1396  0000                     _PIR2bits	set	4001
  1397  0000                     _RCONbits	set	4048
  1398                           
  1399                           ; #config settings
  1400                           
  1401                           	psect	cinit
  1402  0016A8                     __pcinit:
  1403                           	callstack 0
  1404  0016A8                     start_initialization:
  1405                           	callstack 0
  1406  0016A8                     __initialization:
  1407                           	callstack 0
  1408                           
  1409                           ; Initialize objects allocated to BANK0 (15 bytes)
  1410                           ; load TBLPTR registers with __pidataBANK0
  1411  0016A8  0EFC               	movlw	low __pidataBANK0
  1412  0016AA  6EF6               	movwf	tblptrl,c
  1413  0016AC  0E18               	movlw	high __pidataBANK0
  1414  0016AE  6EF7               	movwf	tblptrh,c
  1415  0016B0  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  1416  0016B2  6EF8               	movwf	tblptru,c
  1417  0016B4  EE00  F0B7         	lfsr	0,__pdataBANK0
  1418  0016B8  EE10 F00F          	lfsr	1,15
  1419  0016BC                     copy_data0:
  1420  0016BC  0009               	tblrd		*+
  1421  0016BE  CFF5 FFEE          	movff	tablat,postinc0
  1422  0016C2  50E5               	movf	postdec1,w,c
  1423  0016C4  50E1               	movf	fsr1l,w,c
  1424  0016C6  E1FA               	bnz	copy_data0
  1425                           
  1426                           ; Clear objects allocated to BANK0 (87 bytes)
  1427  0016C8  EE00  F060         	lfsr	0,__pbssBANK0
  1428  0016CC  0E57               	movlw	87
  1429  0016CE                     clear_0:
  1430  0016CE  6AEE               	clrf	postinc0,c
  1431  0016D0  06E8               	decf	wreg,f,c
  1432  0016D2  E1FD               	bnz	clear_0
  1433                           
  1434                           ; Clear objects allocated to COMRAM (1 bytes)
  1435  0016D4  6A5B               	clrf	__pbssCOMRAM& (0+255),c
  1436  0016D6                     end_of_initialization:
  1437                           	callstack 0
  1438  0016D6                     __end_of__initialization:
  1439                           	callstack 0
  1440  0016D6  905C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1441  0016D8  925C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1442  0016DA  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1443  0016DC  6EF8               	movwf	tblptru,c
  1444  0016DE  0100               	movlb	0
  1445  0016E0  EFD1  F008         	goto	_main	;jump to C main() function
  1446                           
  1447                           	psect	bssCOMRAM
  1448  00005B                     __pbssCOMRAM:
  1449                           	callstack 0
  1450  00005B                     _spi_rx_data_ready:
  1451                           	callstack 0
  1452  00005B                     	ds	1
  1453                           
  1454                           	psect	bssBANK0
  1455  000060                     __pbssBANK0:
  1456                           	callstack 0
  1457  000060                     _bufferTX:
  1458                           	callstack 0
  1459  000060                     	ds	32
  1460  000080                     _buffer1:
  1461                           	callstack 0
  1462  000080                     	ds	20
  1463  000094                     _i:
  1464                           	callstack 0
  1465  000094                     	ds	1
  1466  000095                     _ret:
  1467                           	callstack 0
  1468  000095                     	ds	1
  1469  000096                     _eusart1RxLastError:
  1470                           	callstack 0
  1471  000096                     	ds	1
  1472  000097                     _bufferRX:
  1473                           	callstack 0
  1474  000097                     	ds	32
  1475                           
  1476                           	psect	dataBANK0
  1477  0000B7                     __pdataBANK0:
  1478                           	callstack 0
  1479  0000B7                     _ADDRESS_DATA_RXPIPE1:
  1480                           	callstack 0
  1481  0000B7                     	ds	5
  1482  0000BC                     _ADDRESS_DATA_TXPIPE0:
  1483                           	callstack 0
  1484  0000BC                     	ds	5
  1485  0000C1                     _ADDRESS_DATA_RXPIPE0:
  1486                           	callstack 0
  1487  0000C1                     	ds	5
  1488                           
  1489                           	psect	cstackBANK0
  1490  0000CE                     __pcstackBANK0:
  1491                           	callstack 0
  1492  0000CE                     ??_main:
  1493                           
  1494                           ; 1 bytes @ 0x0
  1495  0000CE                     	ds	2
  1496  0000D0                     main@i:
  1497                           	callstack 0
  1498                           
  1499                           ; 1 bytes @ 0x2
  1500  0000D0                     	ds	1
  1501                           
  1502                           	psect	cstackCOMRAM
  1503  000001                     __pcstackCOMRAM:
  1504                           	callstack 0
  1505  000001                     ??_blink_led:
  1506  000001                     
  1507                           ; 1 bytes @ 0x0
  1508  000001                     	ds	1
  1509  000002                     ??_INTERRUPT_InterruptManager:
  1510                           
  1511                           ; 1 bytes @ 0x1
  1512  000002                     	ds	2
  1513  000004                     ??_isdigit:
  1514  000004                     ?___wmul:
  1515                           	callstack 0
  1516  000004                     ?___lwdiv:
  1517                           	callstack 0
  1518  000004                     EUSART1_Write@txData:
  1519                           	callstack 0
  1520  000004                     SPI1_ExchangeByte@data:
  1521                           	callstack 0
  1522  000004                     EUSART1_SetFramingErrorHandler@interruptHandler:
  1523                           	callstack 0
  1524  000004                     EUSART1_SetOverrunErrorHandler@interruptHandler:
  1525                           	callstack 0
  1526  000004                     EUSART1_SetErrorHandler@interruptHandler:
  1527                           	callstack 0
  1528  000004                     TMR0_SetInterruptHandler@InterruptHandler:
  1529                           	callstack 0
  1530  000004                     ___wmul@multiplier:
  1531                           	callstack 0
  1532  000004                     ___lwdiv@dividend:
  1533                           	callstack 0
  1534                           
  1535                           ; 2 bytes @ 0x3
  1536  000004                     	ds	1
  1537  000005                     putch@txData:
  1538                           	callstack 0
  1539  000005                     SPI1_ExchangeByte@ret:
  1540                           	callstack 0
  1541  000005                     _isdigit$2143:
  1542                           	callstack 0
  1543                           
  1544                           ; 1 bytes @ 0x4
  1545  000005                     	ds	1
  1546  000006                     ??_TMR0_Initialize:
  1547  000006                     EUSART1_Initialize@sync:
  1548                           	callstack 0
  1549  000006                     nrf24_write_register@value:
  1550                           	callstack 0
  1551  000006                     nrf24_read_register@mnemonic_addr:
  1552                           	callstack 0
  1553  000006                     isdigit@c:
  1554                           	callstack 0
  1555  000006                     nrf24_write_buff@buffer:
  1556                           	callstack 0
  1557  000006                     nrf24_read_buff@buffer:
  1558                           	callstack 0
  1559  000006                     ___wmul@multiplicand:
  1560                           	callstack 0
  1561  000006                     ___lwdiv@divisor:
  1562                           	callstack 0
  1563                           
  1564                           ; 2 bytes @ 0x5
  1565  000006                     	ds	1
  1566  000007                     EUSART1_Initialize@brgh:
  1567                           	callstack 0
  1568  000007                     nrf24_write_register@mnemonic_addr:
  1569                           	callstack 0
  1570  000007                     nrf24_read_register@byte0:
  1571                           	callstack 0
  1572                           
  1573                           ; 1 bytes @ 0x6
  1574  000007                     	ds	1
  1575  000008                     ??_nrf24_is_rf_data_available:
  1576  000008                     ??_nrf24_set_rf_mode:
  1577  000008                     ??_nrf24_flush_tx_rx:
  1578  000008                     EUSART1_Initialize@brg16:
  1579                           	callstack 0
  1580  000008                     nrf24_write_buff@bytes:
  1581                           	callstack 0
  1582  000008                     nrf24_read_buff@bytes:
  1583                           	callstack 0
  1584  000008                     nrf24_set_channel_frq@rf_channel:
  1585                           	callstack 0
  1586  000008                     ___lwdiv@counter:
  1587                           	callstack 0
  1588  000008                     ___wmul@product:
  1589                           	callstack 0
  1590                           
  1591                           ; 2 bytes @ 0x7
  1592  000008                     	ds	1
  1593  000009                     nrf24_write_buff@mnemonic_addr:
  1594                           	callstack 0
  1595  000009                     nrf24_read_buff@mnemonic_addr:
  1596                           	callstack 0
  1597  000009                     ___lwdiv@quotient:
  1598                           	callstack 0
  1599                           
  1600                           ; 2 bytes @ 0x8
  1601  000009                     	ds	1
  1602  00000A                     nrf24_write_buff@i:
  1603                           	callstack 0
  1604  00000A                     nrf24_read_buff@i:
  1605                           	callstack 0
  1606  00000A                     nrf24_set_rf_mode@mode:
  1607                           	callstack 0
  1608                           
  1609                           ; 1 bytes @ 0x9
  1610  00000A                     	ds	1
  1611  00000B                     ?___lwmod:
  1612                           	callstack 0
  1613  00000B                     nrf24_read_rf_data@buffer:
  1614                           	callstack 0
  1615  00000B                     ___lwmod@dividend:
  1616                           	callstack 0
  1617                           
  1618                           ; 2 bytes @ 0xA
  1619  00000B                     	ds	2
  1620  00000D                     ___lwmod@divisor:
  1621                           	callstack 0
  1622                           
  1623                           ; 2 bytes @ 0xC
  1624  00000D                     	ds	2
  1625  00000F                     ___lwmod@counter:
  1626                           	callstack 0
  1627                           
  1628                           ; 1 bytes @ 0xE
  1629  00000F                     	ds	1
  1630  000010                     ?_printf:
  1631                           	callstack 0
  1632  000010                     printf@f:
  1633                           	callstack 0
  1634                           
  1635                           ; 2 bytes @ 0xF
  1636  000010                     	ds	14
  1637  00001E                     ??_printf:
  1638                           
  1639                           ; 1 bytes @ 0x1D
  1640  00001E                     	ds	4
  1641  000022                     printf@idx:
  1642                           	callstack 0
  1643                           
  1644                           ; 1 bytes @ 0x21
  1645  000022                     	ds	1
  1646  000023                     _printf$1703:
  1647                           	callstack 0
  1648                           
  1649                           ; 2 bytes @ 0x22
  1650  000023                     	ds	2
  1651  000025                     printf@cp:
  1652                           	callstack 0
  1653                           
  1654                           ; 2 bytes @ 0x24
  1655  000025                     	ds	2
  1656  000027                     printf@ap:
  1657                           	callstack 0
  1658                           
  1659                           ; 2 bytes @ 0x26
  1660  000027                     	ds	2
  1661  000029                     printf@len:
  1662                           	callstack 0
  1663                           
  1664                           ; 2 bytes @ 0x28
  1665  000029                     	ds	2
  1666  00002B                     printf@val:
  1667                           	callstack 0
  1668                           
  1669                           ; 2 bytes @ 0x2A
  1670  00002B                     	ds	2
  1671  00002D                     printf@flag:
  1672                           	callstack 0
  1673                           
  1674                           ; 1 bytes @ 0x2C
  1675  00002D                     	ds	1
  1676  00002E                     printf@width:
  1677                           	callstack 0
  1678                           
  1679                           ; 2 bytes @ 0x2D
  1680  00002E                     	ds	2
  1681  000030                     printf@prec:
  1682                           	callstack 0
  1683                           
  1684                           ; 1 bytes @ 0x2F
  1685  000030                     	ds	1
  1686  000031                     printf@c:
  1687                           	callstack 0
  1688                           
  1689                           ; 1 bytes @ 0x30
  1690  000031                     	ds	1
  1691  000032                     ??_nrf24_printf_rf_config:
  1692                           
  1693                           ; 1 bytes @ 0x31
  1694  000032                     	ds	7
  1695  000039                     _nrf24_printf_rf_config$1579:
  1696                           	callstack 0
  1697                           
  1698                           ; 2 bytes @ 0x38
  1699  000039                     	ds	2
  1700  00003B                     _nrf24_printf_rf_config$1580:
  1701                           	callstack 0
  1702                           
  1703                           ; 2 bytes @ 0x3A
  1704  00003B                     	ds	2
  1705  00003D                     _nrf24_printf_rf_config$1589:
  1706                           	callstack 0
  1707                           
  1708                           ; 2 bytes @ 0x3C
  1709  00003D                     	ds	2
  1710  00003F                     _nrf24_printf_rf_config$1590:
  1711                           	callstack 0
  1712                           
  1713                           ; 2 bytes @ 0x3E
  1714  00003F                     	ds	2
  1715  000041                     _nrf24_printf_rf_config$1599:
  1716                           	callstack 0
  1717                           
  1718                           ; 2 bytes @ 0x40
  1719  000041                     	ds	2
  1720  000043                     _nrf24_printf_rf_config$1600:
  1721                           	callstack 0
  1722                           
  1723                           ; 2 bytes @ 0x42
  1724  000043                     	ds	2
  1725  000045                     _nrf24_printf_rf_config$1611:
  1726                           	callstack 0
  1727                           
  1728                           ; 2 bytes @ 0x44
  1729  000045                     	ds	2
  1730  000047                     _nrf24_printf_rf_config$1612:
  1731                           	callstack 0
  1732                           
  1733                           ; 2 bytes @ 0x46
  1734  000047                     	ds	2
  1735  000049                     _nrf24_printf_rf_config$1628:
  1736                           	callstack 0
  1737                           
  1738                           ; 2 bytes @ 0x48
  1739  000049                     	ds	2
  1740  00004B                     _nrf24_printf_rf_config$1634:
  1741                           	callstack 0
  1742                           
  1743                           ; 2 bytes @ 0x4A
  1744  00004B                     	ds	2
  1745  00004D                     nrf24_printf_rf_config@buf:
  1746                           	callstack 0
  1747                           
  1748                           ; 5 bytes @ 0x4C
  1749  00004D                     	ds	5
  1750  000052                     nrf24_printf_rf_config@j:
  1751                           	callstack 0
  1752                           
  1753                           ; 1 bytes @ 0x51
  1754  000052                     	ds	1
  1755  000053                     nrf24_printf_rf_config@aw:
  1756                           	callstack 0
  1757                           
  1758                           ; 1 bytes @ 0x52
  1759  000053                     	ds	1
  1760  000054                     nrf24_printf_rf_config@i:
  1761                           	callstack 0
  1762                           
  1763                           ; 1 bytes @ 0x53
  1764  000054                     	ds	1
  1765  000055                     nrf24_rf_init@rf_channel:
  1766                           	callstack 0
  1767                           
  1768                           ; 1 bytes @ 0x54
  1769  000055                     	ds	1
  1770  000056                     ??_nrf24_rf_init:
  1771                           
  1772                           ; 1 bytes @ 0x55
  1773  000056                     	ds	1
  1774  000057                     nrf24_rf_init@mode:
  1775                           	callstack 0
  1776                           
  1777                           ; 1 bytes @ 0x56
  1778  000057                     	ds	1
  1779  000058                     nrf24_rf_init@stat:
  1780                           	callstack 0
  1781                           
  1782                           ; 1 bytes @ 0x57
  1783  000058                     	ds	1
  1784                           
  1785 ;;
  1786 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1787 ;;
  1788 ;; *************** function _main *****************
  1789 ;; Defined at:
  1790 ;;		line 25 in file "main.c"
  1791 ;; Parameters:    Size  Location     Type
  1792 ;;		None
  1793 ;; Auto vars:     Size  Location     Type
  1794 ;;  i               1    2[BANK0 ] unsigned char 
  1795 ;; Return value:  Size  Location     Type
  1796 ;;                  1    wreg      void 
  1797 ;; Registers used:
  1798 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1799 ;; Tracked objects:
  1800 ;;		On entry : 0/0
  1801 ;;		On exit  : 0/0
  1802 ;;		Unchanged: 0/0
  1803 ;; Data sizes:     COMRAM   BANK0   BANK1
  1804 ;;      Params:         0       0       0
  1805 ;;      Locals:         0       1       0
  1806 ;;      Temps:          0       2       0
  1807 ;;      Totals:         0       3       0
  1808 ;;Total ram usage:        3 bytes
  1809 ;; Hardware stack levels required when called: 9
  1810 ;; This function calls:
  1811 ;;		_SPI1_Open
  1812 ;;		_SYSTEM_Initialize
  1813 ;;		_TMR0_SetInterruptHandler
  1814 ;;		_nrf24_is_rf_data_available
  1815 ;;		_nrf24_printf_rf_config
  1816 ;;		_nrf24_read_rf_data
  1817 ;;		_nrf24_rf_init
  1818 ;;		_printf
  1819 ;; This function is called by:
  1820 ;;		Startup code after reset
  1821 ;; This function uses a non-reentrant model
  1822 ;;
  1823                           
  1824                           	psect	text0
  1825  0011A2                     __ptext0:
  1826                           	callstack 0
  1827  0011A2                     _main:
  1828                           	callstack 22
  1829  0011A2                     
  1830                           ;main.c: 27:     SYSTEM_Initialize();
  1831  0011A2  EC5E  F00C         	call	_SYSTEM_Initialize	;wreg free
  1832  0011A6                     
  1833                           ;main.c: 34:     (INTCONbits.GIE = 1);
  1834  0011A6  8EF2               	bsf	242,7,c	;volatile
  1835  0011A8                     
  1836                           ;main.c: 40:     (INTCONbits.PEIE = 1);
  1837  0011A8  8CF2               	bsf	242,6,c	;volatile
  1838                           
  1839                           ;main.c: 57:     TMR0_SetInterruptHandler(blink_led);
  1840  0011AA  0EFE               	movlw	low _blink_led
  1841  0011AC  6E04               	movwf	TMR0_SetInterruptHandler@InterruptHandler^0,c
  1842  0011AE  0E17               	movlw	high _blink_led
  1843  0011B0  6E05               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^0,c
  1844  0011B2  EC98  F00C         	call	_TMR0_SetInterruptHandler	;wreg free
  1845  0011B6                     
  1846                           ;main.c: 59:     printf("Timer0 init Done\r\n");
  1847  0011B6  0E50               	movlw	low STR_2
  1848  0011B8  6E10               	movwf	printf@f^0,c
  1849  0011BA  0E3F               	movlw	high STR_2
  1850  0011BC  6E11               	movwf	(printf@f+1)^0,c
  1851  0011BE  EC35  F005         	call	_printf	;wreg free
  1852  0011C2                     
  1853                           ;main.c: 64:     SPI1_Open(SPI1_DEFAULT);
  1854  0011C2  0E01               	movlw	1
  1855  0011C4  EC42  F00C         	call	_SPI1_Open
  1856  0011C8                     
  1857                           ;main.c: 69:     ret = nrf24_rf_init(RX_MODE, 115);
  1858  0011C8  0E73               	movlw	115
  1859  0011CA  6E55               	movwf	nrf24_rf_init@rf_channel^0,c
  1860  0011CC  0E01               	movlw	1
  1861  0011CE  EC72  F009         	call	_nrf24_rf_init
  1862  0011D2  0100               	movlb	0	; () banked
  1863  0011D4  6F95               	movwf	_ret& (0+255),b
  1864  0011D6                     
  1865                           ; BSR set to: 0
  1866                           ;main.c: 73:     if (ret == NRF24_INIT_OK) {
  1867  0011D6  5195               	movf	_ret& (0+255),w,b
  1868  0011D8  A4D8               	btfss	status,2,c
  1869  0011DA  EFF1  F008         	goto	u2791
  1870  0011DE  EFF3  F008         	goto	u2790
  1871  0011E2                     u2791:
  1872  0011E2  EF5C  F009         	goto	l4602
  1873  0011E6                     u2790:
  1874  0011E6                     
  1875                           ; BSR set to: 0
  1876                           ;main.c: 75:         printf("###########################################################
      +                          ####\r\n");
  1877  0011E6  0EB5               	movlw	low STR_3
  1878  0011E8  6E10               	movwf	printf@f^0,c
  1879  0011EA  0E3B               	movlw	high STR_3
  1880  0011EC  6E11               	movwf	(printf@f+1)^0,c
  1881  0011EE  EC35  F005         	call	_printf	;wreg free
  1882                           
  1883                           ;main.c: 76:         printf("NRF24L01 Initialize successful\r\n");
  1884  0011F2  0E2B               	movlw	low STR_4
  1885  0011F4  6E10               	movwf	printf@f^0,c
  1886  0011F6  0E3D               	movlw	high STR_4
  1887  0011F8  6E11               	movwf	(printf@f+1)^0,c
  1888  0011FA  EC35  F005         	call	_printf	;wreg free
  1889                           
  1890                           ;main.c: 77:         nrf24_printf_rf_config();
  1891  0011FE  EC35  F000         	call	_nrf24_printf_rf_config	;wreg free
  1892                           
  1893                           ;main.c: 78:         printf("###########################################################
      +                          ####\r\n");
  1894  001202  0EB5               	movlw	low STR_3
  1895  001204  6E10               	movwf	printf@f^0,c
  1896  001206  0E3B               	movlw	high STR_3
  1897  001208  6E11               	movwf	(printf@f+1)^0,c
  1898  00120A  EC35  F005         	call	_printf	;wreg free
  1899  00120E                     l4578:
  1900                           
  1901                           ;main.c: 89:             while (nrf24_is_rf_data_available()) {
  1902  00120E  EC22  F00C         	call	_nrf24_is_rf_data_available	;wreg free
  1903  001212  0900               	iorlw	0
  1904  001214  A4D8               	btfss	status,2,c
  1905  001216  EF0F  F009         	goto	u2801
  1906  00121A  EF11  F009         	goto	u2800
  1907  00121E                     u2801:
  1908  00121E  EF07  F009         	goto	l4578
  1909  001222                     u2800:
  1910  001222                     
  1911                           ;main.c: 91:             nrf24_read_rf_data(bufferRX);
  1912  001222  0E97               	movlw	low _bufferRX
  1913  001224  6E0B               	movwf	nrf24_read_rf_data@buffer^0,c
  1914  001226  0E00               	movlw	high _bufferRX
  1915  001228  6E0C               	movwf	(nrf24_read_rf_data@buffer+1)^0,c
  1916  00122A  EC11  F00C         	call	_nrf24_read_rf_data	;wreg free
  1917  00122E                     
  1918                           ;main.c: 92:             printf("NRF24 Receive Data: %s\r\n", bufferRX);
  1919  00122E  0ED4               	movlw	low STR_6
  1920  001230  6E10               	movwf	printf@f^0,c
  1921  001232  0E3D               	movlw	high STR_6
  1922  001234  6E11               	movwf	(printf@f+1)^0,c
  1923  001236  0E97               	movlw	low _bufferRX
  1924  001238  6E12               	movwf	(?_printf+2)^0,c
  1925  00123A  0E00               	movlw	high _bufferRX
  1926  00123C  6E13               	movwf	(?_printf+3)^0,c
  1927  00123E  EC35  F005         	call	_printf	;wreg free
  1928  001242                     
  1929                           ;main.c: 93:             for (uint8_t i = 0; i < 32; ++i){
  1930  001242  0E00               	movlw	0
  1931  001244  0100               	movlb	0	; () banked
  1932  001246  6FD0               	movwf	main@i& (0+255),b
  1933  001248                     l4590:
  1934                           
  1935                           ; BSR set to: 0
  1936                           ;main.c: 94:                 printf("%d, ", bufferRX[i]);
  1937  001248  0ECD               	movlw	low STR_7
  1938  00124A  6E10               	movwf	printf@f^0,c
  1939  00124C  0E3F               	movlw	high STR_7
  1940  00124E  6E11               	movwf	(printf@f+1)^0,c
  1941  001250  0E97               	movlw	low _bufferRX
  1942  001252  25D0               	addwf	main@i& (0+255),w,b
  1943  001254  6ED9               	movwf	fsr2l,c
  1944  001256  6ADA               	clrf	fsr2h,c
  1945  001258  0E00               	movlw	high _bufferRX
  1946  00125A  22DA               	addwfc	fsr2h,f,c
  1947  00125C  50DF               	movf	indf2,w,c
  1948  00125E  6FCE               	movwf	??_main& (0+255),b
  1949  001260  51CE               	movf	??_main& (0+255),w,b
  1950  001262  6E12               	movwf	(?_printf+2)^0,c
  1951  001264  6A13               	clrf	(?_printf+3)^0,c
  1952  001266  EC35  F005         	call	_printf	;wreg free
  1953  00126A                     
  1954                           ;main.c: 95:             }
  1955  00126A  0100               	movlb	0	; () banked
  1956  00126C  2BD0               	incf	main@i& (0+255),f,b
  1957  00126E                     
  1958                           ; BSR set to: 0
  1959  00126E  0E1F               	movlw	31
  1960  001270  65D0               	cpfsgt	main@i& (0+255),b
  1961  001272  EF3D  F009         	goto	u2811
  1962  001276  EF3F  F009         	goto	u2810
  1963  00127A                     u2811:
  1964  00127A  EF24  F009         	goto	l4590
  1965  00127E                     u2810:
  1966  00127E                     
  1967                           ; BSR set to: 0
  1968                           ;main.c: 96:             printf("\n");
  1969  00127E  0E3B               	movlw	low (STR_1+18)
  1970  001280  6E10               	movwf	printf@f^0,c
  1971  001282  0E3F               	movlw	high (STR_1+18)
  1972  001284  6E11               	movwf	(printf@f+1)^0,c
  1973  001286  EC35  F005         	call	_printf	;wreg free
  1974  00128A                     
  1975                           ;main.c: 97:             _delay((unsigned long)((10)*(16000000/4000.0)));
  1976  00128A  0E34               	movlw	52
  1977  00128C  0100               	movlb	0	; () banked
  1978  00128E  6FCE               	movwf	??_main& (0+255),b
  1979  001290  0EF1               	movlw	241
  1980  001292                     u2827:
  1981  001292  2EE8               	decfsz	wreg,f,c
  1982  001294  D7FE               	bra	u2827
  1983  001296  2FCE               	decfsz	??_main& (0+255),f,b
  1984  001298  D7FC               	bra	u2827
  1985  00129A  D000               	nop2	
  1986  00129C                     
  1987                           ;main.c: 99:             _delay((unsigned long)((100)*(16000000/4000.0)));
  1988  00129C  0E03               	movlw	3
  1989  00129E  0100               	movlb	0	; () banked
  1990  0012A0  6FCF               	movwf	(??_main+1)& (0+255),b
  1991  0012A2  0E08               	movlw	8
  1992  0012A4  6FCE               	movwf	??_main& (0+255),b
  1993  0012A6  0E77               	movlw	119
  1994  0012A8                     u2837:
  1995  0012A8  2EE8               	decfsz	wreg,f,c
  1996  0012AA  D7FE               	bra	u2837
  1997  0012AC  2FCE               	decfsz	??_main& (0+255),f,b
  1998  0012AE  D7FC               	bra	u2837
  1999  0012B0  2FCF               	decfsz	(??_main+1)& (0+255),f,b
  2000  0012B2  D7FA               	bra	u2837
  2001  0012B4  EF07  F009         	goto	l4578
  2002  0012B8                     l4602:
  2003                           
  2004                           ; BSR set to: 0
  2005                           ;main.c: 102:         printf("##########################################################
      +                          #####\r\n");
  2006  0012B8  0EB5               	movlw	low STR_3
  2007  0012BA  6E10               	movwf	printf@f^0,c
  2008  0012BC  0E3B               	movlw	high STR_3
  2009  0012BE  6E11               	movwf	(printf@f+1)^0,c
  2010  0012C0  EC35  F005         	call	_printf	;wreg free
  2011                           
  2012                           ;main.c: 103:         printf("Failed Initialize NRF24L01\r\n");
  2013  0012C4  0E4C               	movlw	low STR_10
  2014  0012C6  6E10               	movwf	printf@f^0,c
  2015  0012C8  0E3D               	movlw	high STR_10
  2016  0012CA  6E11               	movwf	(printf@f+1)^0,c
  2017  0012CC  EC35  F005         	call	_printf	;wreg free
  2018                           
  2019                           ;main.c: 104:         printf("##########################################################
      +                          #####\r\n");
  2020  0012D0  0EB5               	movlw	low STR_3
  2021  0012D2  6E10               	movwf	printf@f^0,c
  2022  0012D4  0E3B               	movlw	high STR_3
  2023  0012D6  6E11               	movwf	(printf@f+1)^0,c
  2024  0012D8  EC35  F005         	call	_printf	;wreg free
  2025  0012DC                     l371:
  2026  0012DC  EF6E  F009         	goto	l371
  2027  0012E0  EF33  F000         	goto	start
  2028  0012E4                     __end_of_main:
  2029                           	callstack 0
  2030                           
  2031 ;; *************** function _nrf24_rf_init *****************
  2032 ;; Defined at:
  2033 ;;		line 62 in file "nrf24_lib.c"
  2034 ;; Parameters:    Size  Location     Type
  2035 ;;  mode            1    wreg     unsigned char 
  2036 ;;  rf_channel      1   84[COMRAM] unsigned char 
  2037 ;; Auto vars:     Size  Location     Type
  2038 ;;  mode            1   86[COMRAM] unsigned char 
  2039 ;;  stat            1   87[COMRAM] enum E2474
  2040 ;; Return value:  Size  Location     Type
  2041 ;;                  1    wreg      enum E2474
  2042 ;; Registers used:
  2043 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2044 ;; Tracked objects:
  2045 ;;		On entry : 0/0
  2046 ;;		On exit  : 0/0
  2047 ;;		Unchanged: 0/0
  2048 ;; Data sizes:     COMRAM   BANK0   BANK1
  2049 ;;      Params:         1       0       0
  2050 ;;      Locals:         2       0       0
  2051 ;;      Temps:          1       0       0
  2052 ;;      Totals:         4       0       0
  2053 ;;Total ram usage:        4 bytes
  2054 ;; Hardware stack levels used: 1
  2055 ;; Hardware stack levels required when called: 8
  2056 ;; This function calls:
  2057 ;;		_SPI1_Open
  2058 ;;		_nrf24_printf_rf_config
  2059 ;;		_nrf24_read_register
  2060 ;;		_nrf24_set_channel_frq
  2061 ;;		_nrf24_set_rf_mode
  2062 ;;		_nrf24_write_buff
  2063 ;;		_nrf24_write_register
  2064 ;;		_printf
  2065 ;; This function is called by:
  2066 ;;		_main
  2067 ;; This function uses a non-reentrant model
  2068 ;;
  2069                           
  2070                           	psect	text1
  2071  0012E4                     __ptext1:
  2072                           	callstack 0
  2073  0012E4                     _nrf24_rf_init:
  2074                           	callstack 22
  2075                           
  2076                           ;incstack = 0
  2077                           ;nrf24_rf_init@mode stored from wreg
  2078  0012E4  6E57               	movwf	nrf24_rf_init@mode^0,c
  2079  0012E6                     
  2080                           ;nrf24_lib.c: 63:     NRF24_INIT_STATUS stat = NRF24_INIT_FAILED;
  2081  0012E6  0E01               	movlw	1
  2082  0012E8  6E58               	movwf	nrf24_rf_init@stat^0,c
  2083  0012EA                     
  2084                           ;nrf24_lib.c: 64:     SPI1_Open(SPI1_DEFAULT);
  2085  0012EA  0E01               	movlw	1
  2086  0012EC  EC42  F00C         	call	_SPI1_Open
  2087  0012F0  9894               	bcf	148,4,c	;volatile
  2088  0012F2  9A94               	bcf	148,5,c	;volatile
  2089  0012F4  888B               	bsf	139,4,c	;volatile
  2090  0012F6  8A8B               	bsf	139,5,c	;volatile
  2091  0012F8                     
  2092                           ;nrf24_lib.c: 70:     _delay((unsigned long)((100)*(16000000/4000000.0)));
  2093  0012F8  0E85               	movlw	133
  2094  0012FA                     u2847:
  2095  0012FA  2EE8               	decfsz	wreg,f,c
  2096  0012FC  D7FE               	bra	u2847
  2097  0012FE  F000               	nop	
  2098  001300  9A8B               	bcf	139,5,c	;volatile
  2099  001302                     
  2100                           ;nrf24_lib.c: 95:     nrf24_write_register(0x00, 0x0B);
  2101  001302  0E0B               	movlw	11
  2102  001304  6E06               	movwf	nrf24_write_register@value^0,c
  2103  001306  0E00               	movlw	0
  2104  001308  ECE5  F009         	call	_nrf24_write_register
  2105  00130C                     
  2106                           ;nrf24_lib.c: 97:     nrf24_write_register(0x01, 0x00);
  2107  00130C  0E00               	movlw	0
  2108  00130E  6E06               	movwf	nrf24_write_register@value^0,c
  2109  001310  0E01               	movlw	1
  2110  001312  ECE5  F009         	call	_nrf24_write_register
  2111  001316                     
  2112                           ;nrf24_lib.c: 98:     nrf24_write_register(0x02, 0x01);
  2113  001316  0E01               	movlw	1
  2114  001318  6E06               	movwf	nrf24_write_register@value^0,c
  2115  00131A  0E02               	movlw	2
  2116  00131C  ECE5  F009         	call	_nrf24_write_register
  2117  001320                     
  2118                           ;nrf24_lib.c: 99:     nrf24_write_register(0x03, 0x03);
  2119  001320  0E03               	movlw	3
  2120  001322  6E06               	movwf	nrf24_write_register@value^0,c
  2121  001324  0E03               	movlw	3
  2122  001326  ECE5  F009         	call	_nrf24_write_register
  2123  00132A                     
  2124                           ;nrf24_lib.c: 104:     nrf24_write_buff(0x0A , ADDRESS_DATA_RXPIPE0, 5);
  2125  00132A  0EC1               	movlw	low _ADDRESS_DATA_RXPIPE0
  2126  00132C  6E06               	movwf	nrf24_write_buff@buffer^0,c
  2127  00132E  0E00               	movlw	high _ADDRESS_DATA_RXPIPE0
  2128  001330  6E07               	movwf	(nrf24_write_buff@buffer+1)^0,c
  2129  001332  0E05               	movlw	5
  2130  001334  6E08               	movwf	nrf24_write_buff@bytes^0,c
  2131  001336  0E0A               	movlw	10
  2132  001338  EC31  F00B         	call	_nrf24_write_buff
  2133  00133C                     
  2134                           ;nrf24_lib.c: 112:     nrf24_write_buff(0x10 , ADDRESS_DATA_TXPIPE0, 5);
  2135  00133C  0EBC               	movlw	low _ADDRESS_DATA_TXPIPE0
  2136  00133E  6E06               	movwf	nrf24_write_buff@buffer^0,c
  2137  001340  0E00               	movlw	high _ADDRESS_DATA_TXPIPE0
  2138  001342  6E07               	movwf	(nrf24_write_buff@buffer+1)^0,c
  2139  001344  0E05               	movlw	5
  2140  001346  6E08               	movwf	nrf24_write_buff@bytes^0,c
  2141  001348  0E10               	movlw	16
  2142  00134A  EC31  F00B         	call	_nrf24_write_buff
  2143  00134E                     
  2144                           ;nrf24_lib.c: 114:     nrf24_write_register(0x04, 0x00);
  2145  00134E  0E00               	movlw	0
  2146  001350  6E06               	movwf	nrf24_write_register@value^0,c
  2147  001352  0E04               	movlw	4
  2148  001354  ECE5  F009         	call	_nrf24_write_register
  2149  001358                     
  2150                           ;nrf24_lib.c: 115:     nrf24_set_channel_frq(rf_channel);
  2151  001358  5055               	movf	nrf24_rf_init@rf_channel^0,w,c
  2152  00135A  EC86  F00C         	call	_nrf24_set_channel_frq
  2153  00135E                     
  2154                           ;nrf24_lib.c: 128:     nrf24_write_register(0x06, 0x07);
  2155  00135E  0E07               	movlw	7
  2156  001360  6E06               	movwf	nrf24_write_register@value^0,c
  2157  001362  0E06               	movlw	6
  2158  001364  ECE5  F009         	call	_nrf24_write_register
  2159  001368                     
  2160                           ;nrf24_lib.c: 131:     nrf24_write_register(0x11, 32);
  2161  001368  0E20               	movlw	32
  2162  00136A  6E06               	movwf	nrf24_write_register@value^0,c
  2163  00136C  0E11               	movlw	17
  2164  00136E  ECE5  F009         	call	_nrf24_write_register
  2165  001372                     
  2166                           ;nrf24_lib.c: 133:     _delay((unsigned long)((10)*(16000000/4000000.0)));
  2167  001372  0E0D               	movlw	13
  2168  001374                     u2857:
  2169  001374  2EE8               	decfsz	wreg,f,c
  2170  001376  D7FE               	bra	u2857
  2171  001378  F000               	nop	
  2172  00137A                     
  2173                           ;nrf24_lib.c: 134:     nrf24_set_rf_mode(mode);
  2174  00137A  5057               	movf	nrf24_rf_init@mode^0,w,c
  2175  00137C  EC94  F00A         	call	_nrf24_set_rf_mode
  2176  001380                     
  2177                           ;nrf24_lib.c: 135:     _delay((unsigned long)((10)*(16000000/4000000.0)));
  2178  001380  0E0D               	movlw	13
  2179  001382                     u2867:
  2180  001382  2EE8               	decfsz	wreg,f,c
  2181  001384  D7FE               	bra	u2867
  2182  001386  F000               	nop	
  2183  001388                     
  2184                           ;nrf24_lib.c: 137:     printf("nrf24_set_rf_mode(mode)\r\n");
  2185  001388  0EA1               	movlw	low STR_12
  2186  00138A  6E10               	movwf	printf@f^0,c
  2187  00138C  0E3D               	movlw	high STR_12
  2188  00138E  6E11               	movwf	(printf@f+1)^0,c
  2189  001390  EC35  F005         	call	_printf	;wreg free
  2190  001394                     
  2191                           ;nrf24_lib.c: 138:     nrf24_printf_rf_config ();
  2192  001394  EC35  F000         	call	_nrf24_printf_rf_config	;wreg free
  2193  001398                     
  2194                           ;nrf24_lib.c: 140:     if ((nrf24_read_register(0x00) & 0x08) != 0){
  2195  001398  0E00               	movlw	0
  2196  00139A  EC51  F00C         	call	_nrf24_read_register
  2197  00139E  6E56               	movwf	??_nrf24_rf_init^0,c
  2198  0013A0  A656               	btfss	??_nrf24_rf_init^0,3,c
  2199  0013A2  EFD5  F009         	goto	u2751
  2200  0013A6  EFD7  F009         	goto	u2750
  2201  0013AA                     u2751:
  2202  0013AA  EFDF  F009         	goto	l4504
  2203  0013AE                     u2750:
  2204  0013AE                     
  2205                           ;nrf24_lib.c: 141:       printf("rfCardPresent = TRUE\r\n");
  2206  0013AE  0EED               	movlw	low STR_13
  2207  0013B0  6E10               	movwf	printf@f^0,c
  2208  0013B2  0E3D               	movlw	high STR_13
  2209  0013B4  6E11               	movwf	(printf@f+1)^0,c
  2210  0013B6  EC35  F005         	call	_printf	;wreg free
  2211  0013BA                     
  2212                           ;nrf24_lib.c: 142:       stat = NRF24_INIT_OK;
  2213  0013BA  0E00               	movlw	0
  2214  0013BC  6E58               	movwf	nrf24_rf_init@stat^0,c
  2215  0013BE                     l4504:
  2216                           
  2217                           ;nrf24_lib.c: 144:     _delay((unsigned long)((100)*(16000000/4000000.0)));
  2218  0013BE  0E85               	movlw	133
  2219  0013C0                     u2877:
  2220  0013C0  2EE8               	decfsz	wreg,f,c
  2221  0013C2  D7FE               	bra	u2877
  2222  0013C4  F000               	nop	
  2223  0013C6                     
  2224                           ;nrf24_lib.c: 145:     return stat;
  2225  0013C6  5058               	movf	nrf24_rf_init@stat^0,w,c
  2226  0013C8  0012               	return		;funcret
  2227  0013CA                     __end_of_nrf24_rf_init:
  2228                           	callstack 0
  2229                           
  2230 ;; *************** function _nrf24_write_buff *****************
  2231 ;; Defined at:
  2232 ;;		line 36 in file "nrf24_lib.c"
  2233 ;; Parameters:    Size  Location     Type
  2234 ;;  mnemonic_add    1    wreg     unsigned char 
  2235 ;;  buffer          2    5[COMRAM] PTR unsigned char 
  2236 ;;		 -> ADDRESS_DATA_TXPIPE0(5), ADDRESS_DATA_RXPIPE0(5), 
  2237 ;;  bytes           1    7[COMRAM] unsigned char 
  2238 ;; Auto vars:     Size  Location     Type
  2239 ;;  mnemonic_add    1    8[COMRAM] unsigned char 
  2240 ;;  i               1    9[COMRAM] unsigned char 
  2241 ;; Return value:  Size  Location     Type
  2242 ;;                  1    wreg      void 
  2243 ;; Registers used:
  2244 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2245 ;; Tracked objects:
  2246 ;;		On entry : 0/0
  2247 ;;		On exit  : 0/0
  2248 ;;		Unchanged: 0/0
  2249 ;; Data sizes:     COMRAM   BANK0   BANK1
  2250 ;;      Params:         3       0       0
  2251 ;;      Locals:         2       0       0
  2252 ;;      Temps:          0       0       0
  2253 ;;      Totals:         5       0       0
  2254 ;;Total ram usage:        5 bytes
  2255 ;; Hardware stack levels used: 1
  2256 ;; Hardware stack levels required when called: 5
  2257 ;; This function calls:
  2258 ;;		_SPI1_ExchangeByte
  2259 ;; This function is called by:
  2260 ;;		_nrf24_rf_init
  2261 ;;		_nrf24_send_rf_data
  2262 ;; This function uses a non-reentrant model
  2263 ;;
  2264                           
  2265                           	psect	text2
  2266  001662                     __ptext2:
  2267                           	callstack 0
  2268  001662                     _nrf24_write_buff:
  2269                           	callstack 24
  2270                           
  2271                           ;incstack = 0
  2272                           ;nrf24_write_buff@mnemonic_addr stored from wreg
  2273  001662  6E09               	movwf	nrf24_write_buff@mnemonic_addr^0,c
  2274  001664  988B               	bcf	139,4,c	;volatile
  2275  001666                     
  2276                           ;nrf24_lib.c: 40:     SPI1_ExchangeByte(0x20 | mnemonic_addr);
  2277  001666  5009               	movf	nrf24_write_buff@mnemonic_addr^0,w,c
  2278  001668  0920               	iorlw	32
  2279  00166A  EC72  F00B         	call	_SPI1_ExchangeByte
  2280  00166E                     
  2281                           ;nrf24_lib.c: 41:     for (i = 0; i < bytes; i++) {
  2282  00166E  0E00               	movlw	0
  2283  001670  6E0A               	movwf	nrf24_write_buff@i^0,c
  2284  001672  EF49  F00B         	goto	l4394
  2285  001676                     l4386:
  2286                           
  2287                           ;nrf24_lib.c: 42:         SPI1_ExchangeByte(*buffer);
  2288  001676  C006  FFD9         	movff	nrf24_write_buff@buffer,fsr2l
  2289  00167A  C007  FFDA         	movff	nrf24_write_buff@buffer+1,fsr2h
  2290  00167E  50DF               	movf	indf2,w,c
  2291  001680  EC72  F00B         	call	_SPI1_ExchangeByte
  2292  001684                     
  2293                           ;nrf24_lib.c: 43:         buffer++;
  2294  001684  4A06               	infsnz	nrf24_write_buff@buffer^0,f,c
  2295  001686  2A07               	incf	(nrf24_write_buff@buffer+1)^0,f,c
  2296  001688                     
  2297                           ;nrf24_lib.c: 44:         _delay((unsigned long)((10)*(16000000/4000000.0)));
  2298  001688  0E0D               	movlw	13
  2299  00168A                     u2887:
  2300  00168A  2EE8               	decfsz	wreg,f,c
  2301  00168C  D7FE               	bra	u2887
  2302  00168E  F000               	nop	
  2303  001690                     
  2304                           ;nrf24_lib.c: 45:     }
  2305  001690  2A0A               	incf	nrf24_write_buff@i^0,f,c
  2306  001692                     l4394:
  2307  001692  5008               	movf	nrf24_write_buff@bytes^0,w,c
  2308  001694  5C0A               	subwf	nrf24_write_buff@i^0,w,c
  2309  001696  A0D8               	btfss	status,0,c
  2310  001698  EF50  F00B         	goto	u2741
  2311  00169C  EF52  F00B         	goto	u2740
  2312  0016A0                     u2741:
  2313  0016A0  EF3B  F00B         	goto	l4386
  2314  0016A4                     u2740:
  2315  0016A4  888B               	bsf	139,4,c	;volatile
  2316  0016A6  0012               	return		;funcret
  2317  0016A8                     __end_of_nrf24_write_buff:
  2318                           	callstack 0
  2319                           
  2320 ;; *************** function _nrf24_set_rf_mode *****************
  2321 ;; Defined at:
  2322 ;;		line 148 in file "nrf24_lib.c"
  2323 ;; Parameters:    Size  Location     Type
  2324 ;;  mode            1    wreg     enum E2478
  2325 ;; Auto vars:     Size  Location     Type
  2326 ;;  mode            1    9[COMRAM] enum E2478
  2327 ;; Return value:  Size  Location     Type
  2328 ;;                  1    wreg      void 
  2329 ;; Registers used:
  2330 ;;		wreg, status,2, status,0, cstack
  2331 ;; Tracked objects:
  2332 ;;		On entry : 0/0
  2333 ;;		On exit  : 0/0
  2334 ;;		Unchanged: 0/0
  2335 ;; Data sizes:     COMRAM   BANK0   BANK1
  2336 ;;      Params:         0       0       0
  2337 ;;      Locals:         1       0       0
  2338 ;;      Temps:          2       0       0
  2339 ;;      Totals:         3       0       0
  2340 ;;Total ram usage:        3 bytes
  2341 ;; Hardware stack levels used: 1
  2342 ;; Hardware stack levels required when called: 6
  2343 ;; This function calls:
  2344 ;;		_nrf24_write_register
  2345 ;; This function is called by:
  2346 ;;		_nrf24_rf_init
  2347 ;;		_nrf24_send_rf_data
  2348 ;; This function uses a non-reentrant model
  2349 ;;
  2350                           
  2351                           	psect	text3
  2352  001528                     __ptext3:
  2353                           	callstack 0
  2354  001528                     _nrf24_set_rf_mode:
  2355                           	callstack 23
  2356                           
  2357                           ;incstack = 0
  2358                           ;nrf24_set_rf_mode@mode stored from wreg
  2359  001528  6E0A               	movwf	nrf24_set_rf_mode@mode^0,c
  2360  00152A                     
  2361                           ;nrf24_lib.c: 149:     switch (mode) {
  2362  00152A  EFA7  F00A         	goto	l4410
  2363  00152E                     l4400:
  2364                           
  2365                           ;nrf24_lib.c: 152:             nrf24_write_register(0x00, 0x0B);
  2366  00152E  0E0B               	movlw	11
  2367  001530  6E06               	movwf	nrf24_write_register@value^0,c
  2368  001532  0E00               	movlw	0
  2369  001534  ECE5  F009         	call	_nrf24_write_register
  2370  001538  8A8B               	bsf	139,5,c	;volatile
  2371  00153A  EFBC  F00A         	goto	l462
  2372  00153E                     l4404:
  2373                           
  2374                           ;nrf24_lib.c: 156:             nrf24_write_register(0x00, 0x0A);
  2375  00153E  0E0A               	movlw	10
  2376  001540  6E06               	movwf	nrf24_write_register@value^0,c
  2377  001542  0E00               	movlw	0
  2378  001544  ECE5  F009         	call	_nrf24_write_register
  2379  001548  9A8B               	bcf	139,5,c	;volatile
  2380  00154A  EFBC  F00A         	goto	l462
  2381  00154E                     l4410:
  2382  00154E  500A               	movf	nrf24_set_rf_mode@mode^0,w,c
  2383  001550  6E08               	movwf	??_nrf24_set_rf_mode^0,c
  2384  001552  6A09               	clrf	(??_nrf24_set_rf_mode+1)^0,c
  2385                           
  2386                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2387                           ; Switch size 1, requested type "simple"
  2388                           ; Number of cases is 1, Range of values is 0 to 0
  2389                           ; switch strategies available:
  2390                           ; Name         Instructions Cycles
  2391                           ; simple_byte            4     3 (average)
  2392                           ;	Chosen strategy is simple_byte
  2393  001554  5009               	movf	(??_nrf24_set_rf_mode+1)^0,w,c
  2394  001556  0A00               	xorlw	0	; case 0
  2395  001558  B4D8               	btfsc	status,2,c
  2396  00155A  EFB1  F00A         	goto	l4762
  2397  00155E  EFBC  F00A         	goto	l462
  2398  001562                     l4762:
  2399                           
  2400                           ; Switch size 1, requested type "simple"
  2401                           ; Number of cases is 2, Range of values is 1 to 2
  2402                           ; switch strategies available:
  2403                           ; Name         Instructions Cycles
  2404                           ; simple_byte            7     4 (average)
  2405                           ;	Chosen strategy is simple_byte
  2406  001562  5008               	movf	??_nrf24_set_rf_mode^0,w,c
  2407  001564  0A01               	xorlw	1	; case 1
  2408  001566  B4D8               	btfsc	status,2,c
  2409  001568  EF97  F00A         	goto	l4400
  2410  00156C  0A03               	xorlw	3	; case 2
  2411  00156E  B4D8               	btfsc	status,2,c
  2412  001570  EF9F  F00A         	goto	l4404
  2413  001574  EFBC  F00A         	goto	l462
  2414  001578                     l462:
  2415  001578  0012               	return		;funcret
  2416  00157A                     __end_of_nrf24_set_rf_mode:
  2417                           	callstack 0
  2418                           
  2419 ;; *************** function _nrf24_set_channel_frq *****************
  2420 ;; Defined at:
  2421 ;;		line 183 in file "nrf24_lib.c"
  2422 ;; Parameters:    Size  Location     Type
  2423 ;;  rf_channel      1    wreg     unsigned char 
  2424 ;; Auto vars:     Size  Location     Type
  2425 ;;  rf_channel      1    7[COMRAM] unsigned char 
  2426 ;; Return value:  Size  Location     Type
  2427 ;;                  1    wreg      void 
  2428 ;; Registers used:
  2429 ;;		wreg, status,2, status,0, cstack
  2430 ;; Tracked objects:
  2431 ;;		On entry : 0/0
  2432 ;;		On exit  : 0/0
  2433 ;;		Unchanged: 0/0
  2434 ;; Data sizes:     COMRAM   BANK0   BANK1
  2435 ;;      Params:         0       0       0
  2436 ;;      Locals:         1       0       0
  2437 ;;      Temps:          0       0       0
  2438 ;;      Totals:         1       0       0
  2439 ;;Total ram usage:        1 bytes
  2440 ;; Hardware stack levels used: 1
  2441 ;; Hardware stack levels required when called: 6
  2442 ;; This function calls:
  2443 ;;		_nrf24_write_register
  2444 ;; This function is called by:
  2445 ;;		_nrf24_rf_init
  2446 ;; This function uses a non-reentrant model
  2447 ;;
  2448                           
  2449                           	psect	text4
  2450  00190C                     __ptext4:
  2451                           	callstack 0
  2452  00190C                     _nrf24_set_channel_frq:
  2453                           	callstack 23
  2454                           
  2455                           ;incstack = 0
  2456                           ;nrf24_set_channel_frq@rf_channel stored from wreg
  2457  00190C  6E08               	movwf	nrf24_set_channel_frq@rf_channel^0,c
  2458  00190E                     
  2459                           ;nrf24_lib.c: 184:     nrf24_write_register(0x05, rf_channel);
  2460  00190E  C008  F006         	movff	nrf24_set_channel_frq@rf_channel,nrf24_write_register@value
  2461  001912  0E05               	movlw	5
  2462  001914  ECE5  F009         	call	_nrf24_write_register
  2463  001918  0012               	return		;funcret
  2464  00191A                     __end_of_nrf24_set_channel_frq:
  2465                           	callstack 0
  2466                           
  2467 ;; *************** function _nrf24_printf_rf_config *****************
  2468 ;; Defined at:
  2469 ;;		line 214 in file "nrf24_lib.c"
  2470 ;; Parameters:    Size  Location     Type
  2471 ;;		None
  2472 ;; Auto vars:     Size  Location     Type
  2473 ;;  buf             5   76[COMRAM] unsigned char [5]
  2474 ;;  i               1   83[COMRAM] unsigned char 
  2475 ;;  aw              1   82[COMRAM] unsigned char 
  2476 ;;  j               1   81[COMRAM] unsigned char 
  2477 ;; Return value:  Size  Location     Type
  2478 ;;                  1    wreg      void 
  2479 ;; Registers used:
  2480 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2481 ;; Tracked objects:
  2482 ;;		On entry : 0/0
  2483 ;;		On exit  : 0/0
  2484 ;;		Unchanged: 0/0
  2485 ;; Data sizes:     COMRAM   BANK0   BANK1
  2486 ;;      Params:         0       0       0
  2487 ;;      Locals:        28       0       0
  2488 ;;      Temps:          7       0       0
  2489 ;;      Totals:        35       0       0
  2490 ;;Total ram usage:       35 bytes
  2491 ;; Hardware stack levels used: 1
  2492 ;; Hardware stack levels required when called: 7
  2493 ;; This function calls:
  2494 ;;		_nrf24_read_buff
  2495 ;;		_nrf24_read_register
  2496 ;;		_printf
  2497 ;; This function is called by:
  2498 ;;		_main
  2499 ;;		_nrf24_rf_init
  2500 ;; This function uses a non-reentrant model
  2501 ;;
  2502                           
  2503                           	psect	text5
  2504  00006A                     __ptext5:
  2505                           	callstack 0
  2506  00006A                     _nrf24_printf_rf_config:
  2507                           	callstack 22
  2508  00006A                     
  2509                           ;nrf24_lib.c: 215:  uint8_t i,j;;nrf24_lib.c: 216:  uint8_t aw;;nrf24_lib.c: 217:  uint8
      +                          _t buf[5];;nrf24_lib.c: 221:  i = nrf24_read_register(0x00);
  2510  00006A  0E00               	movlw	0
  2511  00006C  EC51  F00C         	call	_nrf24_read_register
  2512  000070  6E54               	movwf	nrf24_printf_rf_config@i^0,c
  2513  000072                     
  2514                           ;nrf24_lib.c: 222:  printf("[0x%02X] 0x%02X MASK:%03X CRC:%02X PWR:%s MODE:P%s\r\n",
  2515  000072  B054               	btfsc	nrf24_printf_rf_config@i^0,0,c
  2516  000074  EF3E  F000         	goto	u2531
  2517  000078  EF40  F000         	goto	u2530
  2518  00007C                     u2531:
  2519  00007C  EF46  F000         	goto	l4116
  2520  000080                     u2530:
  2521  000080  0EF2               	movlw	low STR_18
  2522  000082  6E39               	movwf	_nrf24_printf_rf_config$1579^0,c
  2523  000084  0E3F               	movlw	high STR_18
  2524  000086  6E3A               	movwf	(_nrf24_printf_rf_config$1579+1)^0,c
  2525  000088  EF4A  F000         	goto	l4118
  2526  00008C                     l4116:
  2527  00008C  0EEF               	movlw	low STR_17
  2528  00008E  6E39               	movwf	_nrf24_printf_rf_config$1579^0,c
  2529  000090  0E3F               	movlw	high STR_17
  2530  000092  6E3A               	movwf	(_nrf24_printf_rf_config$1579+1)^0,c
  2531  000094                     l4118:
  2532  000094  B254               	btfsc	nrf24_printf_rf_config@i^0,1,c
  2533  000096  EF4F  F000         	goto	u2541
  2534  00009A  EF51  F000         	goto	u2540
  2535  00009E                     u2541:
  2536  00009E  EF57  F000         	goto	l4122
  2537  0000A2                     u2540:
  2538  0000A2  0EDE               	movlw	low STR_16
  2539  0000A4  6E3B               	movwf	_nrf24_printf_rf_config$1580^0,c
  2540  0000A6  0E3F               	movlw	high STR_16
  2541  0000A8  6E3C               	movwf	(_nrf24_printf_rf_config$1580+1)^0,c
  2542  0000AA  EF5B  F000         	goto	l4124
  2543  0000AE                     l4122:
  2544  0000AE  0EE9               	movlw	low STR_15
  2545  0000B0  6E3B               	movwf	_nrf24_printf_rf_config$1580^0,c
  2546  0000B2  0E3F               	movlw	high STR_15
  2547  0000B4  6E3C               	movwf	(_nrf24_printf_rf_config$1580+1)^0,c
  2548  0000B6                     l4124:
  2549  0000B6  0E69               	movlw	low STR_14
  2550  0000B8  6E10               	movwf	printf@f^0,c
  2551  0000BA  0E3C               	movlw	high STR_14
  2552  0000BC  6E11               	movwf	(printf@f+1)^0,c
  2553  0000BE  0E00               	movlw	0
  2554  0000C0  6E13               	movwf	(?_printf+3)^0,c
  2555  0000C2  0E00               	movlw	0
  2556  0000C4  6E12               	movwf	(?_printf+2)^0,c
  2557  0000C6  C054  F014         	movff	nrf24_printf_rf_config@i,?_printf+4
  2558  0000CA  6A15               	clrf	(?_printf+5)^0,c
  2559  0000CC  C054  F032         	movff	nrf24_printf_rf_config@i,??_nrf24_printf_rf_config
  2560  0000D0  3A32               	swapf	??_nrf24_printf_rf_config^0,f,c
  2561  0000D2  0E0F               	movlw	15
  2562  0000D4  1632               	andwf	??_nrf24_printf_rf_config^0,f,c
  2563  0000D6  5032               	movf	??_nrf24_printf_rf_config^0,w,c
  2564  0000D8  6E16               	movwf	(?_printf+6)^0,c
  2565  0000DA  6A17               	clrf	(?_printf+7)^0,c
  2566  0000DC  C054  F033         	movff	nrf24_printf_rf_config@i,??_nrf24_printf_rf_config+1
  2567  0000E0  90D8               	bcf	status,0,c
  2568  0000E2  3233               	rrcf	(??_nrf24_printf_rf_config+1)^0,f,c
  2569  0000E4  90D8               	bcf	status,0,c
  2570  0000E6  3233               	rrcf	(??_nrf24_printf_rf_config+1)^0,f,c
  2571  0000E8  0E03               	movlw	3
  2572  0000EA  1633               	andwf	(??_nrf24_printf_rf_config+1)^0,f,c
  2573  0000EC  5033               	movf	(??_nrf24_printf_rf_config+1)^0,w,c
  2574  0000EE  6E18               	movwf	(?_printf+8)^0,c
  2575  0000F0  6A19               	clrf	(?_printf+9)^0,c
  2576  0000F2  C03B  F01A         	movff	_nrf24_printf_rf_config$1580,?_printf+10
  2577  0000F6  C03C  F01B         	movff	_nrf24_printf_rf_config$1580+1,?_printf+11
  2578  0000FA  C039  F01C         	movff	_nrf24_printf_rf_config$1579,?_printf+12
  2579  0000FE  C03A  F01D         	movff	_nrf24_printf_rf_config$1579+1,?_printf+13
  2580  000102  EC35  F005         	call	_printf	;wreg free
  2581  000106                     
  2582                           ;nrf24_lib.c: 233:  i = nrf24_read_register(0x01);
  2583  000106  0E01               	movlw	1
  2584  000108  EC51  F00C         	call	_nrf24_read_register
  2585  00010C  6E54               	movwf	nrf24_printf_rf_config@i^0,c
  2586  00010E                     
  2587                           ;nrf24_lib.c: 234:  printf("[0x%02X] 0x%02X ENAA: ",0x01,i);
  2588  00010E  0E8E               	movlw	low STR_19
  2589  000110  6E10               	movwf	printf@f^0,c
  2590  000112  0E3E               	movlw	high STR_19
  2591  000114  6E11               	movwf	(printf@f+1)^0,c
  2592  000116  0E00               	movlw	0
  2593  000118  6E13               	movwf	(?_printf+3)^0,c
  2594  00011A  0E01               	movlw	1
  2595  00011C  6E12               	movwf	(?_printf+2)^0,c
  2596  00011E  C054  F014         	movff	nrf24_printf_rf_config@i,?_printf+4
  2597  000122  6A15               	clrf	(?_printf+5)^0,c
  2598  000124  EC35  F005         	call	_printf	;wreg free
  2599  000128                     
  2600                           ;nrf24_lib.c: 235:  for (j = 0; j < 6; j++) {
  2601  000128  0E00               	movlw	0
  2602  00012A  6E52               	movwf	nrf24_printf_rf_config@j^0,c
  2603  00012C                     l4136:
  2604                           
  2605                           ;nrf24_lib.c: 236:   printf("[P%1u%s]%s",j,
  2606  00012C  0E05               	movlw	5
  2607  00012E  1852               	xorwf	nrf24_printf_rf_config@j^0,w,c
  2608  000130  B4D8               	btfsc	status,2,c
  2609  000132  EF9D  F000         	goto	u2551
  2610  000136  EF9F  F000         	goto	u2550
  2611  00013A                     u2551:
  2612  00013A  EFA5  F000         	goto	l4140
  2613  00013E                     u2550:
  2614  00013E  0ED0               	movlw	low (STR_7+3)
  2615  000140  6E3D               	movwf	_nrf24_printf_rf_config$1589^0,c
  2616  000142  0E3F               	movlw	high (STR_7+3)
  2617  000144  6E3E               	movwf	(_nrf24_printf_rf_config$1589+1)^0,c
  2618  000146  EFA9  F000         	goto	l516
  2619  00014A                     l4140:
  2620  00014A  0E3A               	movlw	low (STR_1+17)
  2621  00014C  6E3D               	movwf	_nrf24_printf_rf_config$1589^0,c
  2622  00014E  0E3F               	movlw	high (STR_1+17)
  2623  000150  6E3E               	movwf	(_nrf24_printf_rf_config$1589+1)^0,c
  2624  000152                     l516:
  2625  000152  C052  F032         	movff	nrf24_printf_rf_config@j,??_nrf24_printf_rf_config
  2626  000156  0E01               	movlw	1
  2627  000158  6E33               	movwf	(??_nrf24_printf_rf_config+1)^0,c
  2628  00015A  2A32               	incf	??_nrf24_printf_rf_config^0,f,c
  2629  00015C  EFB2  F000         	goto	u2564
  2630  000160                     u2565:
  2631  000160  90D8               	bcf	status,0,c
  2632  000162  3633               	rlcf	(??_nrf24_printf_rf_config+1)^0,f,c
  2633  000164                     u2564:
  2634  000164  2E32               	decfsz	??_nrf24_printf_rf_config^0,f,c
  2635  000166  EFB0  F000         	goto	u2565
  2636  00016A  5033               	movf	(??_nrf24_printf_rf_config+1)^0,w,c
  2637  00016C  1454               	andwf	nrf24_printf_rf_config@i^0,w,c
  2638  00016E  0900               	iorlw	0
  2639  000170  A4D8               	btfss	status,2,c
  2640  000172  EFBD  F000         	goto	u2571
  2641  000176  EFBF  F000         	goto	u2570
  2642  00017A                     u2571:
  2643  00017A  EFC5  F000         	goto	l4144
  2644  00017E                     u2570:
  2645  00017E  0EFA               	movlw	low STR_22
  2646  000180  6E3F               	movwf	_nrf24_printf_rf_config$1590^0,c
  2647  000182  0E3F               	movlw	high STR_22
  2648  000184  6E40               	movwf	(_nrf24_printf_rf_config$1590+1)^0,c
  2649  000186  EFC9  F000         	goto	l4146
  2650  00018A                     l4144:
  2651  00018A  0EF8               	movlw	low STR_21
  2652  00018C  6E3F               	movwf	_nrf24_printf_rf_config$1590^0,c
  2653  00018E  0E3F               	movlw	high STR_21
  2654  000190  6E40               	movwf	(_nrf24_printf_rf_config$1590+1)^0,c
  2655  000192                     l4146:
  2656  000192  0E85               	movlw	low STR_20
  2657  000194  6E10               	movwf	printf@f^0,c
  2658  000196  0E3F               	movlw	high STR_20
  2659  000198  6E11               	movwf	(printf@f+1)^0,c
  2660  00019A  C052  F012         	movff	nrf24_printf_rf_config@j,?_printf+2
  2661  00019E  6A13               	clrf	(?_printf+3)^0,c
  2662  0001A0  C03F  F014         	movff	_nrf24_printf_rf_config$1590,?_printf+4
  2663  0001A4  C040  F015         	movff	_nrf24_printf_rf_config$1590+1,?_printf+5
  2664  0001A8  C03D  F016         	movff	_nrf24_printf_rf_config$1589,?_printf+6
  2665  0001AC  C03E  F017         	movff	_nrf24_printf_rf_config$1589+1,?_printf+7
  2666  0001B0  EC35  F005         	call	_printf	;wreg free
  2667  0001B4                     
  2668                           ;nrf24_lib.c: 240:  }
  2669  0001B4  2A52               	incf	nrf24_printf_rf_config@j^0,f,c
  2670  0001B6  0E05               	movlw	5
  2671  0001B8  6452               	cpfsgt	nrf24_printf_rf_config@j^0,c
  2672  0001BA  EFE1  F000         	goto	u2581
  2673  0001BE  EFE3  F000         	goto	u2580
  2674  0001C2                     u2581:
  2675  0001C2  EF96  F000         	goto	l4136
  2676  0001C6                     u2580:
  2677  0001C6                     
  2678                           ;nrf24_lib.c: 242:  i = nrf24_read_register(0x02);
  2679  0001C6  0E02               	movlw	2
  2680  0001C8  EC51  F00C         	call	_nrf24_read_register
  2681  0001CC  6E54               	movwf	nrf24_printf_rf_config@i^0,c
  2682  0001CE                     
  2683                           ;nrf24_lib.c: 243:  printf("[0x%02X] 0x%02X EN_RXADDR: ",0x02,i);
  2684  0001CE  0E85               	movlw	low STR_25
  2685  0001D0  6E10               	movwf	printf@f^0,c
  2686  0001D2  0E3D               	movlw	high STR_25
  2687  0001D4  6E11               	movwf	(printf@f+1)^0,c
  2688  0001D6  0E00               	movlw	0
  2689  0001D8  6E13               	movwf	(?_printf+3)^0,c
  2690  0001DA  0E02               	movlw	2
  2691  0001DC  6E12               	movwf	(?_printf+2)^0,c
  2692  0001DE  C054  F014         	movff	nrf24_printf_rf_config@i,?_printf+4
  2693  0001E2  6A15               	clrf	(?_printf+5)^0,c
  2694  0001E4  EC35  F005         	call	_printf	;wreg free
  2695  0001E8                     
  2696                           ;nrf24_lib.c: 244:  for (j = 0; j < 6; j++) {
  2697  0001E8  0E00               	movlw	0
  2698  0001EA  6E52               	movwf	nrf24_printf_rf_config@j^0,c
  2699  0001EC                     l4162:
  2700                           
  2701                           ;nrf24_lib.c: 245:   printf("[P%1u%s]%s",j,
  2702  0001EC  0E05               	movlw	5
  2703  0001EE  1852               	xorwf	nrf24_printf_rf_config@j^0,w,c
  2704  0001F0  B4D8               	btfsc	status,2,c
  2705  0001F2  EFFD  F000         	goto	u2591
  2706  0001F6  EFFF  F000         	goto	u2590
  2707  0001FA                     u2591:
  2708  0001FA  EF05  F001         	goto	l4166
  2709  0001FE                     u2590:
  2710  0001FE  0ED0               	movlw	low (STR_7+3)
  2711  000200  6E41               	movwf	_nrf24_printf_rf_config$1599^0,c
  2712  000202  0E3F               	movlw	high (STR_7+3)
  2713  000204  6E42               	movwf	(_nrf24_printf_rf_config$1599+1)^0,c
  2714  000206  EF09  F001         	goto	l526
  2715  00020A                     l4166:
  2716  00020A  0E3A               	movlw	low (STR_1+17)
  2717  00020C  6E41               	movwf	_nrf24_printf_rf_config$1599^0,c
  2718  00020E  0E3F               	movlw	high (STR_1+17)
  2719  000210  6E42               	movwf	(_nrf24_printf_rf_config$1599+1)^0,c
  2720  000212                     l526:
  2721  000212  C052  F032         	movff	nrf24_printf_rf_config@j,??_nrf24_printf_rf_config
  2722  000216  0E01               	movlw	1
  2723  000218  6E33               	movwf	(??_nrf24_printf_rf_config+1)^0,c
  2724  00021A  2A32               	incf	??_nrf24_printf_rf_config^0,f,c
  2725  00021C  EF12  F001         	goto	u2604
  2726  000220                     u2605:
  2727  000220  90D8               	bcf	status,0,c
  2728  000222  3633               	rlcf	(??_nrf24_printf_rf_config+1)^0,f,c
  2729  000224                     u2604:
  2730  000224  2E32               	decfsz	??_nrf24_printf_rf_config^0,f,c
  2731  000226  EF10  F001         	goto	u2605
  2732  00022A  5033               	movf	(??_nrf24_printf_rf_config+1)^0,w,c
  2733  00022C  1454               	andwf	nrf24_printf_rf_config@i^0,w,c
  2734  00022E  0900               	iorlw	0
  2735  000230  A4D8               	btfss	status,2,c
  2736  000232  EF1D  F001         	goto	u2611
  2737  000236  EF1F  F001         	goto	u2610
  2738  00023A                     u2611:
  2739  00023A  EF25  F001         	goto	l4170
  2740  00023E                     u2610:
  2741  00023E  0EFA               	movlw	low STR_22
  2742  000240  6E43               	movwf	_nrf24_printf_rf_config$1600^0,c
  2743  000242  0E3F               	movlw	high STR_22
  2744  000244  6E44               	movwf	(_nrf24_printf_rf_config$1600+1)^0,c
  2745  000246  EF29  F001         	goto	l4172
  2746  00024A                     l4170:
  2747  00024A  0EF8               	movlw	low STR_21
  2748  00024C  6E43               	movwf	_nrf24_printf_rf_config$1600^0,c
  2749  00024E  0E3F               	movlw	high STR_21
  2750  000250  6E44               	movwf	(_nrf24_printf_rf_config$1600+1)^0,c
  2751  000252                     l4172:
  2752  000252  0E85               	movlw	low STR_20
  2753  000254  6E10               	movwf	printf@f^0,c
  2754  000256  0E3F               	movlw	high STR_20
  2755  000258  6E11               	movwf	(printf@f+1)^0,c
  2756  00025A  C052  F012         	movff	nrf24_printf_rf_config@j,?_printf+2
  2757  00025E  6A13               	clrf	(?_printf+3)^0,c
  2758  000260  C043  F014         	movff	_nrf24_printf_rf_config$1600,?_printf+4
  2759  000264  C044  F015         	movff	_nrf24_printf_rf_config$1600+1,?_printf+5
  2760  000268  C041  F016         	movff	_nrf24_printf_rf_config$1599,?_printf+6
  2761  00026C  C042  F017         	movff	_nrf24_printf_rf_config$1599+1,?_printf+7
  2762  000270  EC35  F005         	call	_printf	;wreg free
  2763  000274                     
  2764                           ;nrf24_lib.c: 249:  }
  2765  000274  2A52               	incf	nrf24_printf_rf_config@j^0,f,c
  2766  000276  0E05               	movlw	5
  2767  000278  6452               	cpfsgt	nrf24_printf_rf_config@j^0,c
  2768  00027A  EF41  F001         	goto	u2621
  2769  00027E  EF43  F001         	goto	u2620
  2770  000282                     u2621:
  2771  000282  EFF6  F000         	goto	l4162
  2772  000286                     u2620:
  2773  000286                     
  2774                           ;nrf24_lib.c: 251:  i = nrf24_read_register(0x03);
  2775  000286  0E03               	movlw	3
  2776  000288  EC51  F00C         	call	_nrf24_read_register
  2777  00028C  6E54               	movwf	nrf24_printf_rf_config@i^0,c
  2778  00028E                     
  2779                           ;nrf24_lib.c: 252:  aw = (i & 0x03) + 2;
  2780  00028E  5054               	movf	nrf24_printf_rf_config@i^0,w,c
  2781  000290  0B03               	andlw	3
  2782  000292  0F02               	addlw	2
  2783  000294  6E53               	movwf	nrf24_printf_rf_config@aw^0,c
  2784  000296                     
  2785                           ;nrf24_lib.c: 254:  printf("[0x%02X] 0x%02X EN_RXADDR=%06b (address width = %u)\r\n",0x0
      +                          3,i,i & 0x03,aw);
  2786  000296  0E33               	movlw	low STR_31
  2787  000298  6E10               	movwf	printf@f^0,c
  2788  00029A  0E3C               	movlw	high STR_31
  2789  00029C  6E11               	movwf	(printf@f+1)^0,c
  2790  00029E  0E00               	movlw	0
  2791  0002A0  6E13               	movwf	(?_printf+3)^0,c
  2792  0002A2  0E03               	movlw	3
  2793  0002A4  6E12               	movwf	(?_printf+2)^0,c
  2794  0002A6  C054  F014         	movff	nrf24_printf_rf_config@i,?_printf+4
  2795  0002AA  6A15               	clrf	(?_printf+5)^0,c
  2796  0002AC  C054  F032         	movff	nrf24_printf_rf_config@i,??_nrf24_printf_rf_config
  2797  0002B0  0E03               	movlw	3
  2798  0002B2  1632               	andwf	??_nrf24_printf_rf_config^0,f,c
  2799  0002B4  5032               	movf	??_nrf24_printf_rf_config^0,w,c
  2800  0002B6  6E16               	movwf	(?_printf+6)^0,c
  2801  0002B8  6A17               	clrf	(?_printf+7)^0,c
  2802  0002BA  C053  F018         	movff	nrf24_printf_rf_config@aw,?_printf+8
  2803  0002BE  6A19               	clrf	(?_printf+9)^0,c
  2804  0002C0  EC35  F005         	call	_printf	;wreg free
  2805  0002C4                     
  2806                           ;nrf24_lib.c: 256:  i = nrf24_read_register(0x04);
  2807  0002C4  0E04               	movlw	4
  2808  0002C6  EC51  F00C         	call	_nrf24_read_register
  2809  0002CA  6E54               	movwf	nrf24_printf_rf_config@i^0,c
  2810  0002CC                     
  2811                           ;nrf24_lib.c: 257:  printf("[0x%02X] 0x%02X ARD=%X ARC=%X (retr.delay=%uus, count=%u)\r\
      +                          n",
  2812  0002CC  0EF7               	movlw	low STR_32
  2813  0002CE  6E10               	movwf	printf@f^0,c
  2814  0002D0  0E3B               	movlw	high STR_32
  2815  0002D2  6E11               	movwf	(printf@f+1)^0,c
  2816  0002D4  0E00               	movlw	0
  2817  0002D6  6E13               	movwf	(?_printf+3)^0,c
  2818  0002D8  0E04               	movlw	4
  2819  0002DA  6E12               	movwf	(?_printf+2)^0,c
  2820  0002DC  C054  F014         	movff	nrf24_printf_rf_config@i,?_printf+4
  2821  0002E0  6A15               	clrf	(?_printf+5)^0,c
  2822  0002E2  C054  F032         	movff	nrf24_printf_rf_config@i,??_nrf24_printf_rf_config
  2823  0002E6  3A32               	swapf	??_nrf24_printf_rf_config^0,f,c
  2824  0002E8  0E0F               	movlw	15
  2825  0002EA  1632               	andwf	??_nrf24_printf_rf_config^0,f,c
  2826  0002EC  5032               	movf	??_nrf24_printf_rf_config^0,w,c
  2827  0002EE  6E16               	movwf	(?_printf+6)^0,c
  2828  0002F0  6A17               	clrf	(?_printf+7)^0,c
  2829  0002F2  C054  F033         	movff	nrf24_printf_rf_config@i,??_nrf24_printf_rf_config+1
  2830  0002F6  0E0F               	movlw	15
  2831  0002F8  1633               	andwf	(??_nrf24_printf_rf_config+1)^0,f,c
  2832  0002FA  5033               	movf	(??_nrf24_printf_rf_config+1)^0,w,c
  2833  0002FC  6E18               	movwf	(?_printf+8)^0,c
  2834  0002FE  6A19               	clrf	(?_printf+9)^0,c
  2835  000300  C054  F034         	movff	nrf24_printf_rf_config@i,??_nrf24_printf_rf_config+2
  2836  000304  3A34               	swapf	(??_nrf24_printf_rf_config+2)^0,f,c
  2837  000306  0E0F               	movlw	15
  2838  000308  1634               	andwf	(??_nrf24_printf_rf_config+2)^0,f,c
  2839  00030A  5034               	movf	(??_nrf24_printf_rf_config+2)^0,w,c
  2840  00030C  0DFA               	mullw	250
  2841  00030E  CFF3 F035          	movff	prodl,??_nrf24_printf_rf_config+3
  2842  000312  CFF4 F036          	movff	prodh,??_nrf24_printf_rf_config+4
  2843  000316  0EFA               	movlw	250
  2844  000318  2435               	addwf	(??_nrf24_printf_rf_config+3)^0,w,c
  2845  00031A  6E1A               	movwf	(?_printf+10)^0,c
  2846  00031C  0E00               	movlw	0
  2847  00031E  2036               	addwfc	(??_nrf24_printf_rf_config+4)^0,w,c
  2848  000320  6E1B               	movwf	(?_printf+11)^0,c
  2849  000322  C054  F037         	movff	nrf24_printf_rf_config@i,??_nrf24_printf_rf_config+5
  2850  000326  0E0F               	movlw	15
  2851  000328  1637               	andwf	(??_nrf24_printf_rf_config+5)^0,f,c
  2852  00032A  5037               	movf	(??_nrf24_printf_rf_config+5)^0,w,c
  2853  00032C  6E1C               	movwf	(?_printf+12)^0,c
  2854  00032E  6A1D               	clrf	(?_printf+13)^0,c
  2855  000330  EC35  F005         	call	_printf	;wreg free
  2856  000334                     
  2857                           ;nrf24_lib.c: 266:  i = nrf24_read_register(0x05);
  2858  000334  0E05               	movlw	5
  2859  000336  EC51  F00C         	call	_nrf24_read_register
  2860  00033A  6E54               	movwf	nrf24_printf_rf_config@i^0,c
  2861  00033C                     
  2862                           ;nrf24_lib.c: 267:  printf("[0x%02X] 0x%02X (%.3uGHz)\r\n",0x05,i,2400 + i);
  2863  00033C  0E69               	movlw	low STR_33
  2864  00033E  6E10               	movwf	printf@f^0,c
  2865  000340  0E3D               	movlw	high STR_33
  2866  000342  6E11               	movwf	(printf@f+1)^0,c
  2867  000344  0E00               	movlw	0
  2868  000346  6E13               	movwf	(?_printf+3)^0,c
  2869  000348  0E05               	movlw	5
  2870  00034A  6E12               	movwf	(?_printf+2)^0,c
  2871  00034C  C054  F014         	movff	nrf24_printf_rf_config@i,?_printf+4
  2872  000350  6A15               	clrf	(?_printf+5)^0,c
  2873  000352  0E60               	movlw	96
  2874  000354  2454               	addwf	nrf24_printf_rf_config@i^0,w,c
  2875  000356  6E16               	movwf	(?_printf+6)^0,c
  2876  000358  6A17               	clrf	(?_printf+7)^0,c
  2877  00035A  0E09               	movlw	9
  2878  00035C  2217               	addwfc	(?_printf+7)^0,f,c
  2879  00035E  EC35  F005         	call	_printf	;wreg free
  2880  000362                     
  2881                           ;nrf24_lib.c: 269:  i = nrf24_read_register(0x06);
  2882  000362  0E06               	movlw	6
  2883  000364  EC51  F00C         	call	_nrf24_read_register
  2884  000368  6E54               	movwf	nrf24_printf_rf_config@i^0,c
  2885  00036A                     
  2886                           ;nrf24_lib.c: 270:  printf("[0x%02X] 0x%02X CONT_WAVE:%s PLL_LOCK:%s DataRate=",
  2887  00036A  BE54               	btfsc	nrf24_printf_rf_config@i^0,7,c
  2888  00036C  EFBA  F001         	goto	u2631
  2889  000370  EFBC  F001         	goto	u2630
  2890  000374                     u2631:
  2891  000374  EFC2  F001         	goto	l4198
  2892  000378                     u2630:
  2893  000378  0EDE               	movlw	low STR_16
  2894  00037A  6E45               	movwf	_nrf24_printf_rf_config$1611^0,c
  2895  00037C  0E3F               	movlw	high STR_16
  2896  00037E  6E46               	movwf	(_nrf24_printf_rf_config$1611+1)^0,c
  2897  000380  EFC6  F001         	goto	l4200
  2898  000384                     l4198:
  2899  000384  0EE9               	movlw	low STR_15
  2900  000386  6E45               	movwf	_nrf24_printf_rf_config$1611^0,c
  2901  000388  0E3F               	movlw	high STR_15
  2902  00038A  6E46               	movwf	(_nrf24_printf_rf_config$1611+1)^0,c
  2903  00038C                     l4200:
  2904  00038C  BE54               	btfsc	nrf24_printf_rf_config@i^0,7,c
  2905  00038E  EFCB  F001         	goto	u2641
  2906  000392  EFCD  F001         	goto	u2640
  2907  000396                     u2641:
  2908  000396  EFD3  F001         	goto	l4204
  2909  00039A                     u2640:
  2910  00039A  0EDE               	movlw	low STR_16
  2911  00039C  6E47               	movwf	_nrf24_printf_rf_config$1612^0,c
  2912  00039E  0E3F               	movlw	high STR_16
  2913  0003A0  6E48               	movwf	(_nrf24_printf_rf_config$1612+1)^0,c
  2914  0003A2  EFD7  F001         	goto	l4206
  2915  0003A6                     l4204:
  2916  0003A6  0EE9               	movlw	low STR_15
  2917  0003A8  6E47               	movwf	_nrf24_printf_rf_config$1612^0,c
  2918  0003AA  0E3F               	movlw	high STR_15
  2919  0003AC  6E48               	movwf	(_nrf24_printf_rf_config$1612+1)^0,c
  2920  0003AE                     l4206:
  2921  0003AE  0E9E               	movlw	low STR_34
  2922  0003B0  6E10               	movwf	printf@f^0,c
  2923  0003B2  0E3C               	movlw	high STR_34
  2924  0003B4  6E11               	movwf	(printf@f+1)^0,c
  2925  0003B6  0E00               	movlw	0
  2926  0003B8  6E13               	movwf	(?_printf+3)^0,c
  2927  0003BA  0E06               	movlw	6
  2928  0003BC  6E12               	movwf	(?_printf+2)^0,c
  2929  0003BE  C054  F014         	movff	nrf24_printf_rf_config@i,?_printf+4
  2930  0003C2  6A15               	clrf	(?_printf+5)^0,c
  2931  0003C4  C047  F016         	movff	_nrf24_printf_rf_config$1612,?_printf+6
  2932  0003C8  C048  F017         	movff	_nrf24_printf_rf_config$1612+1,?_printf+7
  2933  0003CC  C045  F018         	movff	_nrf24_printf_rf_config$1611,?_printf+8
  2934  0003D0  C046  F019         	movff	_nrf24_printf_rf_config$1611+1,?_printf+9
  2935  0003D4  EC35  F005         	call	_printf	;wreg free
  2936                           
  2937                           ;nrf24_lib.c: 276:  switch ((i & 0x28) >> 3) {
  2938  0003D8  EF0E  F002         	goto	l4218
  2939  0003DC                     l4208:
  2940                           
  2941                           ;nrf24_lib.c: 278:    printf("1Mbps ");
  2942  0003DC  0EA8               	movlw	low STR_39
  2943  0003DE  6E10               	movwf	printf@f^0,c
  2944  0003E0  0E3F               	movlw	high STR_39
  2945  0003E2  6E11               	movwf	(printf@f+1)^0,c
  2946  0003E4  EC35  F005         	call	_printf	;wreg free
  2947                           
  2948                           ;nrf24_lib.c: 279:    break;
  2949  0003E8  EF2A  F002         	goto	l4220
  2950  0003EC                     l4210:
  2951                           
  2952                           ;nrf24_lib.c: 281:    printf("2Mbps ");
  2953  0003EC  0EAF               	movlw	low STR_40
  2954  0003EE  6E10               	movwf	printf@f^0,c
  2955  0003F0  0E3F               	movlw	high STR_40
  2956  0003F2  6E11               	movwf	(printf@f+1)^0,c
  2957  0003F4  EC35  F005         	call	_printf	;wreg free
  2958                           
  2959                           ;nrf24_lib.c: 282:    break;
  2960  0003F8  EF2A  F002         	goto	l4220
  2961  0003FC                     l4212:
  2962                           
  2963                           ;nrf24_lib.c: 284:    printf("250kbps ");
  2964  0003FC  0E90               	movlw	low STR_41
  2965  0003FE  6E10               	movwf	printf@f^0,c
  2966  000400  0E3F               	movlw	high STR_41
  2967  000402  6E11               	movwf	(printf@f+1)^0,c
  2968  000404  EC35  F005         	call	_printf	;wreg free
  2969                           
  2970                           ;nrf24_lib.c: 285:    break;
  2971  000408  EF2A  F002         	goto	l4220
  2972  00040C                     l4214:
  2973                           
  2974                           ;nrf24_lib.c: 287:    printf("??? ");
  2975  00040C  0EC8               	movlw	low STR_42
  2976  00040E  6E10               	movwf	printf@f^0,c
  2977  000410  0E3F               	movlw	high STR_42
  2978  000412  6E11               	movwf	(printf@f+1)^0,c
  2979  000414  EC35  F005         	call	_printf	;wreg free
  2980                           
  2981                           ;nrf24_lib.c: 288:    break;
  2982  000418  EF2A  F002         	goto	l4220
  2983  00041C                     l4218:
  2984  00041C  3854               	swapf	nrf24_printf_rf_config@i^0,w,c
  2985  00041E  46E8               	rlncf	wreg,f,c
  2986  000420  0B1F               	andlw	31
  2987  000422  0B05               	andlw	5
  2988  000424  6E32               	movwf	??_nrf24_printf_rf_config^0,c
  2989  000426  6A33               	clrf	(??_nrf24_printf_rf_config+1)^0,c
  2990                           
  2991                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2992                           ; Switch size 1, requested type "simple"
  2993                           ; Number of cases is 1, Range of values is 0 to 0
  2994                           ; switch strategies available:
  2995                           ; Name         Instructions Cycles
  2996                           ; simple_byte            4     3 (average)
  2997                           ;	Chosen strategy is simple_byte
  2998  000428  5033               	movf	(??_nrf24_printf_rf_config+1)^0,w,c
  2999  00042A  0A00               	xorlw	0	; case 0
  3000  00042C  B4D8               	btfsc	status,2,c
  3001  00042E  EF1B  F002         	goto	l4764
  3002  000432  EF06  F002         	goto	l4214
  3003  000436                     l4764:
  3004                           
  3005                           ; Switch size 1, requested type "simple"
  3006                           ; Number of cases is 3, Range of values is 0 to 4
  3007                           ; switch strategies available:
  3008                           ; Name         Instructions Cycles
  3009                           ; simple_byte           10     6 (average)
  3010                           ;	Chosen strategy is simple_byte
  3011  000436  5032               	movf	??_nrf24_printf_rf_config^0,w,c
  3012  000438  0A00               	xorlw	0	; case 0
  3013  00043A  B4D8               	btfsc	status,2,c
  3014  00043C  EFEE  F001         	goto	l4208
  3015  000440  0A01               	xorlw	1	; case 1
  3016  000442  B4D8               	btfsc	status,2,c
  3017  000444  EFF6  F001         	goto	l4210
  3018  000448  0A05               	xorlw	5	; case 4
  3019  00044A  B4D8               	btfsc	status,2,c
  3020  00044C  EFFE  F001         	goto	l4212
  3021  000450  EF06  F002         	goto	l4214
  3022  000454                     l4220:
  3023                           
  3024                           ;nrf24_lib.c: 290:  printf("RF_PWR=");
  3025  000454  0E99               	movlw	low STR_43
  3026  000456  6E10               	movwf	printf@f^0,c
  3027  000458  0E3F               	movlw	high STR_43
  3028  00045A  6E11               	movwf	(printf@f+1)^0,c
  3029  00045C  EC35  F005         	call	_printf	;wreg free
  3030                           
  3031                           ;nrf24_lib.c: 291:  switch ((i & 0x06) >> 1) {
  3032  000460  EF5A  F002         	goto	l4234
  3033  000464                     l4222:
  3034                           
  3035                           ;nrf24_lib.c: 293:    printf("-18");
  3036  000464  0ED6               	movlw	low STR_44
  3037  000466  6E10               	movwf	printf@f^0,c
  3038  000468  0E3F               	movlw	high STR_44
  3039  00046A  6E11               	movwf	(printf@f+1)^0,c
  3040  00046C  EC35  F005         	call	_printf	;wreg free
  3041                           
  3042                           ;nrf24_lib.c: 294:    break;
  3043  000470  EF79  F002         	goto	l4236
  3044  000474                     l4224:
  3045                           
  3046                           ;nrf24_lib.c: 296:    printf("-12");
  3047  000474  0ED2               	movlw	low STR_45
  3048  000476  6E10               	movwf	printf@f^0,c
  3049  000478  0E3F               	movlw	high STR_45
  3050  00047A  6E11               	movwf	(printf@f+1)^0,c
  3051  00047C  EC35  F005         	call	_printf	;wreg free
  3052                           
  3053                           ;nrf24_lib.c: 297:    break;
  3054  000480  EF79  F002         	goto	l4236
  3055  000484                     l4226:
  3056                           
  3057                           ;nrf24_lib.c: 299:    printf("-6");
  3058  000484  0EE6               	movlw	low STR_46
  3059  000486  6E10               	movwf	printf@f^0,c
  3060  000488  0E3F               	movlw	high STR_46
  3061  00048A  6E11               	movwf	(printf@f+1)^0,c
  3062  00048C  EC35  F005         	call	_printf	;wreg free
  3063                           
  3064                           ;nrf24_lib.c: 300:    break;
  3065  000490  EF79  F002         	goto	l4236
  3066  000494                     l4228:
  3067                           
  3068                           ;nrf24_lib.c: 302:    printf("0");
  3069  000494  0EFC               	movlw	low STR_47
  3070  000496  6E10               	movwf	printf@f^0,c
  3071  000498  0E3F               	movlw	high STR_47
  3072  00049A  6E11               	movwf	(printf@f+1)^0,c
  3073  00049C  EC35  F005         	call	_printf	;wreg free
  3074                           
  3075                           ;nrf24_lib.c: 303:    break;
  3076  0004A0  EF79  F002         	goto	l4236
  3077  0004A4                     l4230:
  3078                           
  3079                           ;nrf24_lib.c: 305:    printf("???");
  3080  0004A4  0EDA               	movlw	low STR_48
  3081  0004A6  6E10               	movwf	printf@f^0,c
  3082  0004A8  0E3F               	movlw	high STR_48
  3083  0004AA  6E11               	movwf	(printf@f+1)^0,c
  3084  0004AC  EC35  F005         	call	_printf	;wreg free
  3085                           
  3086                           ;nrf24_lib.c: 306:    break;
  3087  0004B0  EF79  F002         	goto	l4236
  3088  0004B4                     l4234:
  3089  0004B4  90D8               	bcf	status,0,c
  3090  0004B6  3054               	rrcf	nrf24_printf_rf_config@i^0,w,c
  3091  0004B8  0B03               	andlw	3
  3092  0004BA  6E32               	movwf	??_nrf24_printf_rf_config^0,c
  3093  0004BC  6A33               	clrf	(??_nrf24_printf_rf_config+1)^0,c
  3094                           
  3095                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3096                           ; Switch size 1, requested type "simple"
  3097                           ; Number of cases is 1, Range of values is 0 to 0
  3098                           ; switch strategies available:
  3099                           ; Name         Instructions Cycles
  3100                           ; simple_byte            4     3 (average)
  3101                           ;	Chosen strategy is simple_byte
  3102  0004BE  5033               	movf	(??_nrf24_printf_rf_config+1)^0,w,c
  3103  0004C0  0A00               	xorlw	0	; case 0
  3104  0004C2  B4D8               	btfsc	status,2,c
  3105  0004C4  EF66  F002         	goto	l4766
  3106  0004C8  EF52  F002         	goto	l4230
  3107  0004CC                     l4766:
  3108                           
  3109                           ; Switch size 1, requested type "simple"
  3110                           ; Number of cases is 4, Range of values is 0 to 3
  3111                           ; switch strategies available:
  3112                           ; Name         Instructions Cycles
  3113                           ; simple_byte           13     7 (average)
  3114                           ;	Chosen strategy is simple_byte
  3115  0004CC  5032               	movf	??_nrf24_printf_rf_config^0,w,c
  3116  0004CE  0A00               	xorlw	0	; case 0
  3117  0004D0  B4D8               	btfsc	status,2,c
  3118  0004D2  EF32  F002         	goto	l4222
  3119  0004D6  0A01               	xorlw	1	; case 1
  3120  0004D8  B4D8               	btfsc	status,2,c
  3121  0004DA  EF3A  F002         	goto	l4224
  3122  0004DE  0A03               	xorlw	3	; case 2
  3123  0004E0  B4D8               	btfsc	status,2,c
  3124  0004E2  EF42  F002         	goto	l4226
  3125  0004E6  0A01               	xorlw	1	; case 3
  3126  0004E8  B4D8               	btfsc	status,2,c
  3127  0004EA  EF4A  F002         	goto	l4228
  3128  0004EE  EF52  F002         	goto	l4230
  3129  0004F2                     l4236:
  3130                           
  3131                           ;nrf24_lib.c: 308:  printf("dBm\r\n");
  3132  0004F2  0EC2               	movlw	low STR_49
  3133  0004F4  6E10               	movwf	printf@f^0,c
  3134  0004F6  0E3F               	movlw	high STR_49
  3135  0004F8  6E11               	movwf	(printf@f+1)^0,c
  3136  0004FA  EC35  F005         	call	_printf	;wreg free
  3137  0004FE                     
  3138                           ;nrf24_lib.c: 312:  i = nrf24_read_register(0x07);
  3139  0004FE  0E07               	movlw	7
  3140  000500  EC51  F00C         	call	_nrf24_read_register
  3141  000504  6E54               	movwf	nrf24_printf_rf_config@i^0,c
  3142  000506                     
  3143                           ;nrf24_lib.c: 313:  printf("[0x%02X] 0x%02X IRQ:%03X RX_PIPE:%u TX_FULL:%s\r\n",
  3144  000506  B054               	btfsc	nrf24_printf_rf_config@i^0,0,c
  3145  000508  EF88  F002         	goto	u2651
  3146  00050C  EF8A  F002         	goto	u2650
  3147  000510                     u2651:
  3148  000510  EF90  F002         	goto	l4244
  3149  000514                     u2650:
  3150  000514  0EEC               	movlw	low STR_52
  3151  000516  6E49               	movwf	_nrf24_printf_rf_config$1628^0,c
  3152  000518  0E3F               	movlw	high STR_52
  3153  00051A  6E4A               	movwf	(_nrf24_printf_rf_config$1628+1)^0,c
  3154  00051C  EF94  F002         	goto	l4246
  3155  000520                     l4244:
  3156  000520  0EE2               	movlw	low STR_51
  3157  000522  6E49               	movwf	_nrf24_printf_rf_config$1628^0,c
  3158  000524  0E3F               	movlw	high STR_51
  3159  000526  6E4A               	movwf	(_nrf24_printf_rf_config$1628+1)^0,c
  3160  000528                     l4246:
  3161  000528  0ED1               	movlw	low STR_50
  3162  00052A  6E10               	movwf	printf@f^0,c
  3163  00052C  0E3C               	movlw	high STR_50
  3164  00052E  6E11               	movwf	(printf@f+1)^0,c
  3165  000530  0E00               	movlw	0
  3166  000532  6E13               	movwf	(?_printf+3)^0,c
  3167  000534  0E07               	movlw	7
  3168  000536  6E12               	movwf	(?_printf+2)^0,c
  3169  000538  C054  F014         	movff	nrf24_printf_rf_config@i,?_printf+4
  3170  00053C  6A15               	clrf	(?_printf+5)^0,c
  3171  00053E  C054  F032         	movff	nrf24_printf_rf_config@i,??_nrf24_printf_rf_config
  3172  000542  3A32               	swapf	??_nrf24_printf_rf_config^0,f,c
  3173  000544  0E0F               	movlw	15
  3174  000546  1632               	andwf	??_nrf24_printf_rf_config^0,f,c
  3175  000548  0E07               	movlw	7
  3176  00054A  1632               	andwf	??_nrf24_printf_rf_config^0,f,c
  3177  00054C  5032               	movf	??_nrf24_printf_rf_config^0,w,c
  3178  00054E  6E16               	movwf	(?_printf+6)^0,c
  3179  000550  6A17               	clrf	(?_printf+7)^0,c
  3180  000552  C054  F033         	movff	nrf24_printf_rf_config@i,??_nrf24_printf_rf_config+1
  3181  000556  90D8               	bcf	status,0,c
  3182  000558  3233               	rrcf	(??_nrf24_printf_rf_config+1)^0,f,c
  3183  00055A  0E07               	movlw	7
  3184  00055C  1633               	andwf	(??_nrf24_printf_rf_config+1)^0,f,c
  3185  00055E  5033               	movf	(??_nrf24_printf_rf_config+1)^0,w,c
  3186  000560  6E18               	movwf	(?_printf+8)^0,c
  3187  000562  6A19               	clrf	(?_printf+9)^0,c
  3188  000564  C049  F01A         	movff	_nrf24_printf_rf_config$1628,?_printf+10
  3189  000568  C04A  F01B         	movff	_nrf24_printf_rf_config$1628+1,?_printf+11
  3190  00056C  EC35  F005         	call	_printf	;wreg free
  3191  000570                     
  3192                           ;nrf24_lib.c: 321:  i = nrf24_read_register(0x08);
  3193  000570  0E08               	movlw	8
  3194  000572  EC51  F00C         	call	_nrf24_read_register
  3195  000576  6E54               	movwf	nrf24_printf_rf_config@i^0,c
  3196  000578                     
  3197                           ;nrf24_lib.c: 322:  printf("[0x%02X] 0x%02X PLOS_CNT=%u ARC_CNT=%u\r\n",0x08,i,i >> 4,i 
      +                          & 0x0F);
  3198  000578  0E02               	movlw	low STR_53
  3199  00057A  6E10               	movwf	printf@f^0,c
  3200  00057C  0E3D               	movlw	high STR_53
  3201  00057E  6E11               	movwf	(printf@f+1)^0,c
  3202  000580  0E00               	movlw	0
  3203  000582  6E13               	movwf	(?_printf+3)^0,c
  3204  000584  0E08               	movlw	8
  3205  000586  6E12               	movwf	(?_printf+2)^0,c
  3206  000588  C054  F014         	movff	nrf24_printf_rf_config@i,?_printf+4
  3207  00058C  6A15               	clrf	(?_printf+5)^0,c
  3208  00058E  C054  F032         	movff	nrf24_printf_rf_config@i,??_nrf24_printf_rf_config
  3209  000592  3A32               	swapf	??_nrf24_printf_rf_config^0,f,c
  3210  000594  0E0F               	movlw	15
  3211  000596  1632               	andwf	??_nrf24_printf_rf_config^0,f,c
  3212  000598  5032               	movf	??_nrf24_printf_rf_config^0,w,c
  3213  00059A  6E16               	movwf	(?_printf+6)^0,c
  3214  00059C  6A17               	clrf	(?_printf+7)^0,c
  3215  00059E  C054  F033         	movff	nrf24_printf_rf_config@i,??_nrf24_printf_rf_config+1
  3216  0005A2  0E0F               	movlw	15
  3217  0005A4  1633               	andwf	(??_nrf24_printf_rf_config+1)^0,f,c
  3218  0005A6  5033               	movf	(??_nrf24_printf_rf_config+1)^0,w,c
  3219  0005A8  6E18               	movwf	(?_printf+8)^0,c
  3220  0005AA  6A19               	clrf	(?_printf+9)^0,c
  3221  0005AC  EC35  F005         	call	_printf	;wreg free
  3222  0005B0                     
  3223                           ;nrf24_lib.c: 325:  i = nrf24_read_register(0x09);
  3224  0005B0  0E09               	movlw	9
  3225  0005B2  EC51  F00C         	call	_nrf24_read_register
  3226  0005B6  6E54               	movwf	nrf24_printf_rf_config@i^0,c
  3227  0005B8                     
  3228                           ;nrf24_lib.c: 326:  printf("[0x%02X] 0x%02X RPD=%s\r\n",0x09,i,(i & 0x01) ? "YES" : "NO"
      +                          );
  3229  0005B8  B054               	btfsc	nrf24_printf_rf_config@i^0,0,c
  3230  0005BA  EFE1  F002         	goto	u2661
  3231  0005BE  EFE3  F002         	goto	u2660
  3232  0005C2                     u2661:
  3233  0005C2  EFE9  F002         	goto	l4258
  3234  0005C6                     u2660:
  3235  0005C6  0EEC               	movlw	low STR_52
  3236  0005C8  6E4B               	movwf	_nrf24_printf_rf_config$1634^0,c
  3237  0005CA  0E3F               	movlw	high STR_52
  3238  0005CC  6E4C               	movwf	(_nrf24_printf_rf_config$1634+1)^0,c
  3239  0005CE  EFED  F002         	goto	l4260
  3240  0005D2                     l4258:
  3241  0005D2  0EE2               	movlw	low STR_51
  3242  0005D4  6E4B               	movwf	_nrf24_printf_rf_config$1634^0,c
  3243  0005D6  0E3F               	movlw	high STR_51
  3244  0005D8  6E4C               	movwf	(_nrf24_printf_rf_config$1634+1)^0,c
  3245  0005DA                     l4260:
  3246  0005DA  0EBB               	movlw	low STR_54
  3247  0005DC  6E10               	movwf	printf@f^0,c
  3248  0005DE  0E3D               	movlw	high STR_54
  3249  0005E0  6E11               	movwf	(printf@f+1)^0,c
  3250  0005E2  0E00               	movlw	0
  3251  0005E4  6E13               	movwf	(?_printf+3)^0,c
  3252  0005E6  0E09               	movlw	9
  3253  0005E8  6E12               	movwf	(?_printf+2)^0,c
  3254  0005EA  C054  F014         	movff	nrf24_printf_rf_config@i,?_printf+4
  3255  0005EE  6A15               	clrf	(?_printf+5)^0,c
  3256  0005F0  C04B  F016         	movff	_nrf24_printf_rf_config$1634,?_printf+6
  3257  0005F4  C04C  F017         	movff	_nrf24_printf_rf_config$1634+1,?_printf+7
  3258  0005F8  EC35  F005         	call	_printf	;wreg free
  3259  0005FC                     
  3260                           ;nrf24_lib.c: 329:  nrf24_read_buff(0x0A,buf,aw);
  3261  0005FC  0E4D               	movlw	low nrf24_printf_rf_config@buf
  3262  0005FE  6E06               	movwf	nrf24_read_buff@buffer^0,c
  3263  000600  0E00               	movlw	high nrf24_printf_rf_config@buf
  3264  000602  6E07               	movwf	(nrf24_read_buff@buffer+1)^0,c
  3265  000604  C053  F008         	movff	nrf24_printf_rf_config@aw,nrf24_read_buff@bytes
  3266  000608  0E0A               	movlw	10
  3267  00060A  EC0C  F00B         	call	_nrf24_read_buff
  3268  00060E                     
  3269                           ;nrf24_lib.c: 330:  printf("[0x%02X] RX_ADDR_P0 \"",0x0A);
  3270  00060E  0EA5               	movlw	low STR_57
  3271  000610  6E10               	movwf	printf@f^0,c
  3272  000612  0E3E               	movlw	high STR_57
  3273  000614  6E11               	movwf	(printf@f+1)^0,c
  3274  000616  0E00               	movlw	0
  3275  000618  6E13               	movwf	(?_printf+3)^0,c
  3276  00061A  0E0A               	movlw	10
  3277  00061C  6E12               	movwf	(?_printf+2)^0,c
  3278  00061E  EC35  F005         	call	_printf	;wreg free
  3279  000622                     
  3280                           ;nrf24_lib.c: 331:  for (i = 0; i < aw; i++) printf("%x",buf[i]);
  3281  000622  0E00               	movlw	0
  3282  000624  6E54               	movwf	nrf24_printf_rf_config@i^0,c
  3283  000626  EF27  F003         	goto	l4272
  3284  00062A                     l4268:
  3285  00062A  0EF5               	movlw	low STR_58
  3286  00062C  6E10               	movwf	printf@f^0,c
  3287  00062E  0E3F               	movlw	high STR_58
  3288  000630  6E11               	movwf	(printf@f+1)^0,c
  3289  000632  0E4D               	movlw	low nrf24_printf_rf_config@buf
  3290  000634  2454               	addwf	nrf24_printf_rf_config@i^0,w,c
  3291  000636  6ED9               	movwf	fsr2l,c
  3292  000638  6ADA               	clrf	fsr2h,c
  3293  00063A  0E00               	movlw	high nrf24_printf_rf_config@buf
  3294  00063C  22DA               	addwfc	fsr2h,f,c
  3295  00063E  50DF               	movf	indf2,w,c
  3296  000640  6E32               	movwf	??_nrf24_printf_rf_config^0,c
  3297  000642  5032               	movf	??_nrf24_printf_rf_config^0,w,c
  3298  000644  6E12               	movwf	(?_printf+2)^0,c
  3299  000646  6A13               	clrf	(?_printf+3)^0,c
  3300  000648  EC35  F005         	call	_printf	;wreg free
  3301  00064C  2A54               	incf	nrf24_printf_rf_config@i^0,f,c
  3302  00064E                     l4272:
  3303  00064E  5053               	movf	nrf24_printf_rf_config@aw^0,w,c
  3304  000650  5C54               	subwf	nrf24_printf_rf_config@i^0,w,c
  3305  000652  A0D8               	btfss	status,0,c
  3306  000654  EF2E  F003         	goto	u2671
  3307  000658  EF30  F003         	goto	u2670
  3308  00065C                     u2671:
  3309  00065C  EF15  F003         	goto	l4268
  3310  000660                     u2670:
  3311  000660                     
  3312                           ;nrf24_lib.c: 332:  printf("\"\r\n");
  3313  000660  0EB8               	movlw	low (STR_65+2)
  3314  000662  6E10               	movwf	printf@f^0,c
  3315  000664  0E3F               	movlw	high (STR_65+2)
  3316  000666  6E11               	movwf	(printf@f+1)^0,c
  3317  000668  EC35  F005         	call	_printf	;wreg free
  3318  00066C                     
  3319                           ;nrf24_lib.c: 335:  nrf24_read_buff(0x0B,buf,aw);
  3320  00066C  0E4D               	movlw	low nrf24_printf_rf_config@buf
  3321  00066E  6E06               	movwf	nrf24_read_buff@buffer^0,c
  3322  000670  0E00               	movlw	high nrf24_printf_rf_config@buf
  3323  000672  6E07               	movwf	(nrf24_read_buff@buffer+1)^0,c
  3324  000674  C053  F008         	movff	nrf24_printf_rf_config@aw,nrf24_read_buff@bytes
  3325  000678  0E0B               	movlw	11
  3326  00067A  EC0C  F00B         	call	_nrf24_read_buff
  3327  00067E                     
  3328                           ;nrf24_lib.c: 336:  printf("[0x%02X] RX_ADDR_P1 \"",0x0B);
  3329  00067E  0EBB               	movlw	low STR_60
  3330  000680  6E10               	movwf	printf@f^0,c
  3331  000682  0E3E               	movlw	high STR_60
  3332  000684  6E11               	movwf	(printf@f+1)^0,c
  3333  000686  0E00               	movlw	0
  3334  000688  6E13               	movwf	(?_printf+3)^0,c
  3335  00068A  0E0B               	movlw	11
  3336  00068C  6E12               	movwf	(?_printf+2)^0,c
  3337  00068E  EC35  F005         	call	_printf	;wreg free
  3338  000692                     
  3339                           ;nrf24_lib.c: 337:  for (i = 0; i < aw; i++) printf("%x",buf[i]);
  3340  000692  0E00               	movlw	0
  3341  000694  6E54               	movwf	nrf24_printf_rf_config@i^0,c
  3342  000696  EF5F  F003         	goto	l4286
  3343  00069A                     l4282:
  3344  00069A  0EF5               	movlw	low STR_58
  3345  00069C  6E10               	movwf	printf@f^0,c
  3346  00069E  0E3F               	movlw	high STR_58
  3347  0006A0  6E11               	movwf	(printf@f+1)^0,c
  3348  0006A2  0E4D               	movlw	low nrf24_printf_rf_config@buf
  3349  0006A4  2454               	addwf	nrf24_printf_rf_config@i^0,w,c
  3350  0006A6  6ED9               	movwf	fsr2l,c
  3351  0006A8  6ADA               	clrf	fsr2h,c
  3352  0006AA  0E00               	movlw	high nrf24_printf_rf_config@buf
  3353  0006AC  22DA               	addwfc	fsr2h,f,c
  3354  0006AE  50DF               	movf	indf2,w,c
  3355  0006B0  6E32               	movwf	??_nrf24_printf_rf_config^0,c
  3356  0006B2  5032               	movf	??_nrf24_printf_rf_config^0,w,c
  3357  0006B4  6E12               	movwf	(?_printf+2)^0,c
  3358  0006B6  6A13               	clrf	(?_printf+3)^0,c
  3359  0006B8  EC35  F005         	call	_printf	;wreg free
  3360  0006BC  2A54               	incf	nrf24_printf_rf_config@i^0,f,c
  3361  0006BE                     l4286:
  3362  0006BE  5053               	movf	nrf24_printf_rf_config@aw^0,w,c
  3363  0006C0  5C54               	subwf	nrf24_printf_rf_config@i^0,w,c
  3364  0006C2  A0D8               	btfss	status,0,c
  3365  0006C4  EF66  F003         	goto	u2681
  3366  0006C8  EF68  F003         	goto	u2680
  3367  0006CC                     u2681:
  3368  0006CC  EF4D  F003         	goto	l4282
  3369  0006D0                     u2680:
  3370  0006D0                     
  3371                           ;nrf24_lib.c: 338:  printf("\"\r\n");
  3372  0006D0  0EB8               	movlw	low (STR_65+2)
  3373  0006D2  6E10               	movwf	printf@f^0,c
  3374  0006D4  0E3F               	movlw	high (STR_65+2)
  3375  0006D6  6E11               	movwf	(printf@f+1)^0,c
  3376  0006D8  EC35  F005         	call	_printf	;wreg free
  3377                           
  3378                           ;nrf24_lib.c: 341:  printf("[0x%02X] RX_ADDR_P2 \"",0x0C);
  3379  0006DC  0ED1               	movlw	low STR_63
  3380  0006DE  6E10               	movwf	printf@f^0,c
  3381  0006E0  0E3E               	movlw	high STR_63
  3382  0006E2  6E11               	movwf	(printf@f+1)^0,c
  3383  0006E4  0E00               	movlw	0
  3384  0006E6  6E13               	movwf	(?_printf+3)^0,c
  3385  0006E8  0E0C               	movlw	12
  3386  0006EA  6E12               	movwf	(?_printf+2)^0,c
  3387  0006EC  EC35  F005         	call	_printf	;wreg free
  3388  0006F0                     
  3389                           ;nrf24_lib.c: 342:  for (i = 0; i < aw - 1; i++) printf("%x",buf[i]);
  3390  0006F0  0E00               	movlw	0
  3391  0006F2  6E54               	movwf	nrf24_printf_rf_config@i^0,c
  3392  0006F4  EF8E  F003         	goto	l4296
  3393  0006F8                     l4292:
  3394  0006F8  0EF5               	movlw	low STR_58
  3395  0006FA  6E10               	movwf	printf@f^0,c
  3396  0006FC  0E3F               	movlw	high STR_58
  3397  0006FE  6E11               	movwf	(printf@f+1)^0,c
  3398  000700  0E4D               	movlw	low nrf24_printf_rf_config@buf
  3399  000702  2454               	addwf	nrf24_printf_rf_config@i^0,w,c
  3400  000704  6ED9               	movwf	fsr2l,c
  3401  000706  6ADA               	clrf	fsr2h,c
  3402  000708  0E00               	movlw	high nrf24_printf_rf_config@buf
  3403  00070A  22DA               	addwfc	fsr2h,f,c
  3404  00070C  50DF               	movf	indf2,w,c
  3405  00070E  6E32               	movwf	??_nrf24_printf_rf_config^0,c
  3406  000710  5032               	movf	??_nrf24_printf_rf_config^0,w,c
  3407  000712  6E12               	movwf	(?_printf+2)^0,c
  3408  000714  6A13               	clrf	(?_printf+3)^0,c
  3409  000716  EC35  F005         	call	_printf	;wreg free
  3410  00071A  2A54               	incf	nrf24_printf_rf_config@i^0,f,c
  3411  00071C                     l4296:
  3412  00071C  0EFF               	movlw	255
  3413  00071E  6E32               	movwf	??_nrf24_printf_rf_config^0,c
  3414  000720  0EFF               	movlw	255
  3415  000722  6E33               	movwf	(??_nrf24_printf_rf_config+1)^0,c
  3416  000724  5053               	movf	nrf24_printf_rf_config@aw^0,w,c
  3417  000726  6E34               	movwf	(??_nrf24_printf_rf_config+2)^0,c
  3418  000728  6A35               	clrf	(??_nrf24_printf_rf_config+3)^0,c
  3419  00072A  5032               	movf	??_nrf24_printf_rf_config^0,w,c
  3420  00072C  2634               	addwf	(??_nrf24_printf_rf_config+2)^0,f,c
  3421  00072E  5033               	movf	(??_nrf24_printf_rf_config+1)^0,w,c
  3422  000730  2235               	addwfc	(??_nrf24_printf_rf_config+3)^0,f,c
  3423  000732  5054               	movf	nrf24_printf_rf_config@i^0,w,c
  3424  000734  6E36               	movwf	(??_nrf24_printf_rf_config+4)^0,c
  3425  000736  6A37               	clrf	(??_nrf24_printf_rf_config+5)^0,c
  3426  000738  5034               	movf	(??_nrf24_printf_rf_config+2)^0,w,c
  3427  00073A  5C36               	subwf	(??_nrf24_printf_rf_config+4)^0,w,c
  3428  00073C  5037               	movf	(??_nrf24_printf_rf_config+5)^0,w,c
  3429  00073E  0A80               	xorlw	128
  3430  000740  6E38               	movwf	(??_nrf24_printf_rf_config+6)^0,c
  3431  000742  5035               	movf	(??_nrf24_printf_rf_config+3)^0,w,c
  3432  000744  0A80               	xorlw	128
  3433  000746  5838               	subwfb	(??_nrf24_printf_rf_config+6)^0,w,c
  3434  000748  A0D8               	btfss	status,0,c
  3435  00074A  EFA9  F003         	goto	u2691
  3436  00074E  EFAB  F003         	goto	u2690
  3437  000752                     u2691:
  3438  000752  EF7C  F003         	goto	l4292
  3439  000756                     u2690:
  3440  000756                     
  3441                           ;nrf24_lib.c: 343:  i = nrf24_read_register(0x0C);
  3442  000756  0E0C               	movlw	12
  3443  000758  EC51  F00C         	call	_nrf24_read_register
  3444  00075C  6E54               	movwf	nrf24_printf_rf_config@i^0,c
  3445  00075E                     
  3446                           ;nrf24_lib.c: 344:  printf("%h\"\r\n",i);
  3447  00075E  0EB6               	movlw	low STR_65
  3448  000760  6E10               	movwf	printf@f^0,c
  3449  000762  0E3F               	movlw	high STR_65
  3450  000764  6E11               	movwf	(printf@f+1)^0,c
  3451  000766  C054  F012         	movff	nrf24_printf_rf_config@i,?_printf+2
  3452  00076A  6A13               	clrf	(?_printf+3)^0,c
  3453  00076C  EC35  F005         	call	_printf	;wreg free
  3454  000770                     
  3455                           ;nrf24_lib.c: 347:  printf("[0x%02X] RX_ADDR_P3 \"",0x0D);
  3456  000770  0EE7               	movlw	low STR_66
  3457  000772  6E10               	movwf	printf@f^0,c
  3458  000774  0E3E               	movlw	high STR_66
  3459  000776  6E11               	movwf	(printf@f+1)^0,c
  3460  000778  0E00               	movlw	0
  3461  00077A  6E13               	movwf	(?_printf+3)^0,c
  3462  00077C  0E0D               	movlw	13
  3463  00077E  6E12               	movwf	(?_printf+2)^0,c
  3464  000780  EC35  F005         	call	_printf	;wreg free
  3465  000784                     
  3466                           ;nrf24_lib.c: 348:  for (i = 0; i < aw - 1; i++) printf("%x",buf[i]);
  3467  000784  0E00               	movlw	0
  3468  000786  6E54               	movwf	nrf24_printf_rf_config@i^0,c
  3469  000788  EFD8  F003         	goto	l4310
  3470  00078C                     l4306:
  3471  00078C  0EF5               	movlw	low STR_58
  3472  00078E  6E10               	movwf	printf@f^0,c
  3473  000790  0E3F               	movlw	high STR_58
  3474  000792  6E11               	movwf	(printf@f+1)^0,c
  3475  000794  0E4D               	movlw	low nrf24_printf_rf_config@buf
  3476  000796  2454               	addwf	nrf24_printf_rf_config@i^0,w,c
  3477  000798  6ED9               	movwf	fsr2l,c
  3478  00079A  6ADA               	clrf	fsr2h,c
  3479  00079C  0E00               	movlw	high nrf24_printf_rf_config@buf
  3480  00079E  22DA               	addwfc	fsr2h,f,c
  3481  0007A0  50DF               	movf	indf2,w,c
  3482  0007A2  6E32               	movwf	??_nrf24_printf_rf_config^0,c
  3483  0007A4  5032               	movf	??_nrf24_printf_rf_config^0,w,c
  3484  0007A6  6E12               	movwf	(?_printf+2)^0,c
  3485  0007A8  6A13               	clrf	(?_printf+3)^0,c
  3486  0007AA  EC35  F005         	call	_printf	;wreg free
  3487  0007AE  2A54               	incf	nrf24_printf_rf_config@i^0,f,c
  3488  0007B0                     l4310:
  3489  0007B0  0EFF               	movlw	255
  3490  0007B2  6E32               	movwf	??_nrf24_printf_rf_config^0,c
  3491  0007B4  0EFF               	movlw	255
  3492  0007B6  6E33               	movwf	(??_nrf24_printf_rf_config+1)^0,c
  3493  0007B8  5053               	movf	nrf24_printf_rf_config@aw^0,w,c
  3494  0007BA  6E34               	movwf	(??_nrf24_printf_rf_config+2)^0,c
  3495  0007BC  6A35               	clrf	(??_nrf24_printf_rf_config+3)^0,c
  3496  0007BE  5032               	movf	??_nrf24_printf_rf_config^0,w,c
  3497  0007C0  2634               	addwf	(??_nrf24_printf_rf_config+2)^0,f,c
  3498  0007C2  5033               	movf	(??_nrf24_printf_rf_config+1)^0,w,c
  3499  0007C4  2235               	addwfc	(??_nrf24_printf_rf_config+3)^0,f,c
  3500  0007C6  5054               	movf	nrf24_printf_rf_config@i^0,w,c
  3501  0007C8  6E36               	movwf	(??_nrf24_printf_rf_config+4)^0,c
  3502  0007CA  6A37               	clrf	(??_nrf24_printf_rf_config+5)^0,c
  3503  0007CC  5034               	movf	(??_nrf24_printf_rf_config+2)^0,w,c
  3504  0007CE  5C36               	subwf	(??_nrf24_printf_rf_config+4)^0,w,c
  3505  0007D0  5037               	movf	(??_nrf24_printf_rf_config+5)^0,w,c
  3506  0007D2  0A80               	xorlw	128
  3507  0007D4  6E38               	movwf	(??_nrf24_printf_rf_config+6)^0,c
  3508  0007D6  5035               	movf	(??_nrf24_printf_rf_config+3)^0,w,c
  3509  0007D8  0A80               	xorlw	128
  3510  0007DA  5838               	subwfb	(??_nrf24_printf_rf_config+6)^0,w,c
  3511  0007DC  A0D8               	btfss	status,0,c
  3512  0007DE  EFF3  F003         	goto	u2701
  3513  0007E2  EFF5  F003         	goto	u2700
  3514  0007E6                     u2701:
  3515  0007E6  EFC6  F003         	goto	l4306
  3516  0007EA                     u2700:
  3517  0007EA                     
  3518                           ;nrf24_lib.c: 349:  i = nrf24_read_register(0x0D);
  3519  0007EA  0E0D               	movlw	13
  3520  0007EC  EC51  F00C         	call	_nrf24_read_register
  3521  0007F0  6E54               	movwf	nrf24_printf_rf_config@i^0,c
  3522  0007F2                     
  3523                           ;nrf24_lib.c: 350:  printf("%h\"\r\n",i);
  3524  0007F2  0EB6               	movlw	low STR_65
  3525  0007F4  6E10               	movwf	printf@f^0,c
  3526  0007F6  0E3F               	movlw	high STR_65
  3527  0007F8  6E11               	movwf	(printf@f+1)^0,c
  3528  0007FA  C054  F012         	movff	nrf24_printf_rf_config@i,?_printf+2
  3529  0007FE  6A13               	clrf	(?_printf+3)^0,c
  3530  000800  EC35  F005         	call	_printf	;wreg free
  3531  000804                     
  3532                           ;nrf24_lib.c: 353:  printf("[0x%02X] RX_ADDR_P4 \"",0x0E);
  3533  000804  0EFD               	movlw	low STR_69
  3534  000806  6E10               	movwf	printf@f^0,c
  3535  000808  0E3E               	movlw	high STR_69
  3536  00080A  6E11               	movwf	(printf@f+1)^0,c
  3537  00080C  0E00               	movlw	0
  3538  00080E  6E13               	movwf	(?_printf+3)^0,c
  3539  000810  0E0E               	movlw	14
  3540  000812  6E12               	movwf	(?_printf+2)^0,c
  3541  000814  EC35  F005         	call	_printf	;wreg free
  3542  000818                     
  3543                           ;nrf24_lib.c: 354:  for (i = 0; i < aw - 1; i++) printf("%x",buf[i]);
  3544  000818  0E00               	movlw	0
  3545  00081A  6E54               	movwf	nrf24_printf_rf_config@i^0,c
  3546  00081C  EF22  F004         	goto	l4324
  3547  000820                     l4320:
  3548  000820  0EF5               	movlw	low STR_58
  3549  000822  6E10               	movwf	printf@f^0,c
  3550  000824  0E3F               	movlw	high STR_58
  3551  000826  6E11               	movwf	(printf@f+1)^0,c
  3552  000828  0E4D               	movlw	low nrf24_printf_rf_config@buf
  3553  00082A  2454               	addwf	nrf24_printf_rf_config@i^0,w,c
  3554  00082C  6ED9               	movwf	fsr2l,c
  3555  00082E  6ADA               	clrf	fsr2h,c
  3556  000830  0E00               	movlw	high nrf24_printf_rf_config@buf
  3557  000832  22DA               	addwfc	fsr2h,f,c
  3558  000834  50DF               	movf	indf2,w,c
  3559  000836  6E32               	movwf	??_nrf24_printf_rf_config^0,c
  3560  000838  5032               	movf	??_nrf24_printf_rf_config^0,w,c
  3561  00083A  6E12               	movwf	(?_printf+2)^0,c
  3562  00083C  6A13               	clrf	(?_printf+3)^0,c
  3563  00083E  EC35  F005         	call	_printf	;wreg free
  3564  000842  2A54               	incf	nrf24_printf_rf_config@i^0,f,c
  3565  000844                     l4324:
  3566  000844  0EFF               	movlw	255
  3567  000846  6E32               	movwf	??_nrf24_printf_rf_config^0,c
  3568  000848  0EFF               	movlw	255
  3569  00084A  6E33               	movwf	(??_nrf24_printf_rf_config+1)^0,c
  3570  00084C  5053               	movf	nrf24_printf_rf_config@aw^0,w,c
  3571  00084E  6E34               	movwf	(??_nrf24_printf_rf_config+2)^0,c
  3572  000850  6A35               	clrf	(??_nrf24_printf_rf_config+3)^0,c
  3573  000852  5032               	movf	??_nrf24_printf_rf_config^0,w,c
  3574  000854  2634               	addwf	(??_nrf24_printf_rf_config+2)^0,f,c
  3575  000856  5033               	movf	(??_nrf24_printf_rf_config+1)^0,w,c
  3576  000858  2235               	addwfc	(??_nrf24_printf_rf_config+3)^0,f,c
  3577  00085A  5054               	movf	nrf24_printf_rf_config@i^0,w,c
  3578  00085C  6E36               	movwf	(??_nrf24_printf_rf_config+4)^0,c
  3579  00085E  6A37               	clrf	(??_nrf24_printf_rf_config+5)^0,c
  3580  000860  5034               	movf	(??_nrf24_printf_rf_config+2)^0,w,c
  3581  000862  5C36               	subwf	(??_nrf24_printf_rf_config+4)^0,w,c
  3582  000864  5037               	movf	(??_nrf24_printf_rf_config+5)^0,w,c
  3583  000866  0A80               	xorlw	128
  3584  000868  6E38               	movwf	(??_nrf24_printf_rf_config+6)^0,c
  3585  00086A  5035               	movf	(??_nrf24_printf_rf_config+3)^0,w,c
  3586  00086C  0A80               	xorlw	128
  3587  00086E  5838               	subwfb	(??_nrf24_printf_rf_config+6)^0,w,c
  3588  000870  A0D8               	btfss	status,0,c
  3589  000872  EF3D  F004         	goto	u2711
  3590  000876  EF3F  F004         	goto	u2710
  3591  00087A                     u2711:
  3592  00087A  EF10  F004         	goto	l4320
  3593  00087E                     u2710:
  3594  00087E                     
  3595                           ;nrf24_lib.c: 355:  i = nrf24_read_register(0x0E);
  3596  00087E  0E0E               	movlw	14
  3597  000880  EC51  F00C         	call	_nrf24_read_register
  3598  000884  6E54               	movwf	nrf24_printf_rf_config@i^0,c
  3599  000886                     
  3600                           ;nrf24_lib.c: 356:  printf("%x\"\r\n",i);
  3601  000886  0EBC               	movlw	low STR_71
  3602  000888  6E10               	movwf	printf@f^0,c
  3603  00088A  0E3F               	movlw	high STR_71
  3604  00088C  6E11               	movwf	(printf@f+1)^0,c
  3605  00088E  C054  F012         	movff	nrf24_printf_rf_config@i,?_printf+2
  3606  000892  6A13               	clrf	(?_printf+3)^0,c
  3607  000894  EC35  F005         	call	_printf	;wreg free
  3608  000898                     
  3609                           ;nrf24_lib.c: 359:  printf("[0x%02X] RX_ADDR_P5 \"",0x0F);
  3610  000898  0E13               	movlw	low STR_72
  3611  00089A  6E10               	movwf	printf@f^0,c
  3612  00089C  0E3F               	movlw	high STR_72
  3613  00089E  6E11               	movwf	(printf@f+1)^0,c
  3614  0008A0  0E00               	movlw	0
  3615  0008A2  6E13               	movwf	(?_printf+3)^0,c
  3616  0008A4  0E0F               	movlw	15
  3617  0008A6  6E12               	movwf	(?_printf+2)^0,c
  3618  0008A8  EC35  F005         	call	_printf	;wreg free
  3619  0008AC                     
  3620                           ;nrf24_lib.c: 360:  for (i = 0; i < aw - 1; i++) printf("%x",buf[i]);
  3621  0008AC  0E00               	movlw	0
  3622  0008AE  6E54               	movwf	nrf24_printf_rf_config@i^0,c
  3623  0008B0  EF6C  F004         	goto	l4338
  3624  0008B4                     l4334:
  3625  0008B4  0EF5               	movlw	low STR_58
  3626  0008B6  6E10               	movwf	printf@f^0,c
  3627  0008B8  0E3F               	movlw	high STR_58
  3628  0008BA  6E11               	movwf	(printf@f+1)^0,c
  3629  0008BC  0E4D               	movlw	low nrf24_printf_rf_config@buf
  3630  0008BE  2454               	addwf	nrf24_printf_rf_config@i^0,w,c
  3631  0008C0  6ED9               	movwf	fsr2l,c
  3632  0008C2  6ADA               	clrf	fsr2h,c
  3633  0008C4  0E00               	movlw	high nrf24_printf_rf_config@buf
  3634  0008C6  22DA               	addwfc	fsr2h,f,c
  3635  0008C8  50DF               	movf	indf2,w,c
  3636  0008CA  6E32               	movwf	??_nrf24_printf_rf_config^0,c
  3637  0008CC  5032               	movf	??_nrf24_printf_rf_config^0,w,c
  3638  0008CE  6E12               	movwf	(?_printf+2)^0,c
  3639  0008D0  6A13               	clrf	(?_printf+3)^0,c
  3640  0008D2  EC35  F005         	call	_printf	;wreg free
  3641  0008D6  2A54               	incf	nrf24_printf_rf_config@i^0,f,c
  3642  0008D8                     l4338:
  3643  0008D8  0EFF               	movlw	255
  3644  0008DA  6E32               	movwf	??_nrf24_printf_rf_config^0,c
  3645  0008DC  0EFF               	movlw	255
  3646  0008DE  6E33               	movwf	(??_nrf24_printf_rf_config+1)^0,c
  3647  0008E0  5053               	movf	nrf24_printf_rf_config@aw^0,w,c
  3648  0008E2  6E34               	movwf	(??_nrf24_printf_rf_config+2)^0,c
  3649  0008E4  6A35               	clrf	(??_nrf24_printf_rf_config+3)^0,c
  3650  0008E6  5032               	movf	??_nrf24_printf_rf_config^0,w,c
  3651  0008E8  2634               	addwf	(??_nrf24_printf_rf_config+2)^0,f,c
  3652  0008EA  5033               	movf	(??_nrf24_printf_rf_config+1)^0,w,c
  3653  0008EC  2235               	addwfc	(??_nrf24_printf_rf_config+3)^0,f,c
  3654  0008EE  5054               	movf	nrf24_printf_rf_config@i^0,w,c
  3655  0008F0  6E36               	movwf	(??_nrf24_printf_rf_config+4)^0,c
  3656  0008F2  6A37               	clrf	(??_nrf24_printf_rf_config+5)^0,c
  3657  0008F4  5034               	movf	(??_nrf24_printf_rf_config+2)^0,w,c
  3658  0008F6  5C36               	subwf	(??_nrf24_printf_rf_config+4)^0,w,c
  3659  0008F8  5037               	movf	(??_nrf24_printf_rf_config+5)^0,w,c
  3660  0008FA  0A80               	xorlw	128
  3661  0008FC  6E38               	movwf	(??_nrf24_printf_rf_config+6)^0,c
  3662  0008FE  5035               	movf	(??_nrf24_printf_rf_config+3)^0,w,c
  3663  000900  0A80               	xorlw	128
  3664  000902  5838               	subwfb	(??_nrf24_printf_rf_config+6)^0,w,c
  3665  000904  A0D8               	btfss	status,0,c
  3666  000906  EF87  F004         	goto	u2721
  3667  00090A  EF89  F004         	goto	u2720
  3668  00090E                     u2721:
  3669  00090E  EF5A  F004         	goto	l4334
  3670  000912                     u2720:
  3671  000912                     
  3672                           ;nrf24_lib.c: 361:  i = nrf24_read_register(0x0F);
  3673  000912  0E0F               	movlw	15
  3674  000914  EC51  F00C         	call	_nrf24_read_register
  3675  000918  6E54               	movwf	nrf24_printf_rf_config@i^0,c
  3676  00091A                     
  3677                           ;nrf24_lib.c: 362:  printf("%x\"\r\n",i);
  3678  00091A  0EBC               	movlw	low STR_71
  3679  00091C  6E10               	movwf	printf@f^0,c
  3680  00091E  0E3F               	movlw	high STR_71
  3681  000920  6E11               	movwf	(printf@f+1)^0,c
  3682  000922  C054  F012         	movff	nrf24_printf_rf_config@i,?_printf+2
  3683  000926  6A13               	clrf	(?_printf+3)^0,c
  3684  000928  EC35  F005         	call	_printf	;wreg free
  3685  00092C                     
  3686                           ;nrf24_lib.c: 365:  nrf24_read_buff(0x10,buf,aw);
  3687  00092C  0E4D               	movlw	low nrf24_printf_rf_config@buf
  3688  00092E  6E06               	movwf	nrf24_read_buff@buffer^0,c
  3689  000930  0E00               	movlw	high nrf24_printf_rf_config@buf
  3690  000932  6E07               	movwf	(nrf24_read_buff@buffer+1)^0,c
  3691  000934  C053  F008         	movff	nrf24_printf_rf_config@aw,nrf24_read_buff@bytes
  3692  000938  0E10               	movlw	16
  3693  00093A  EC0C  F00B         	call	_nrf24_read_buff
  3694  00093E                     
  3695                           ;nrf24_lib.c: 366:  printf("[0x%02X] TX_ADDR \"",0x10);
  3696  00093E  0E3D               	movlw	low STR_75
  3697  000940  6E10               	movwf	printf@f^0,c
  3698  000942  0E3F               	movlw	high STR_75
  3699  000944  6E11               	movwf	(printf@f+1)^0,c
  3700  000946  0E00               	movlw	0
  3701  000948  6E13               	movwf	(?_printf+3)^0,c
  3702  00094A  0E10               	movlw	16
  3703  00094C  6E12               	movwf	(?_printf+2)^0,c
  3704  00094E  EC35  F005         	call	_printf	;wreg free
  3705  000952                     
  3706                           ;nrf24_lib.c: 367:  for (i = 0; i < aw; i++) {printf("%x",buf[i]); }
  3707  000952  0E00               	movlw	0
  3708  000954  6E54               	movwf	nrf24_printf_rf_config@i^0,c
  3709  000956  EFBF  F004         	goto	l4354
  3710  00095A                     l4350:
  3711  00095A  0EF5               	movlw	low STR_58
  3712  00095C  6E10               	movwf	printf@f^0,c
  3713  00095E  0E3F               	movlw	high STR_58
  3714  000960  6E11               	movwf	(printf@f+1)^0,c
  3715  000962  0E4D               	movlw	low nrf24_printf_rf_config@buf
  3716  000964  2454               	addwf	nrf24_printf_rf_config@i^0,w,c
  3717  000966  6ED9               	movwf	fsr2l,c
  3718  000968  6ADA               	clrf	fsr2h,c
  3719  00096A  0E00               	movlw	high nrf24_printf_rf_config@buf
  3720  00096C  22DA               	addwfc	fsr2h,f,c
  3721  00096E  50DF               	movf	indf2,w,c
  3722  000970  6E32               	movwf	??_nrf24_printf_rf_config^0,c
  3723  000972  5032               	movf	??_nrf24_printf_rf_config^0,w,c
  3724  000974  6E12               	movwf	(?_printf+2)^0,c
  3725  000976  6A13               	clrf	(?_printf+3)^0,c
  3726  000978  EC35  F005         	call	_printf	;wreg free
  3727  00097C  2A54               	incf	nrf24_printf_rf_config@i^0,f,c
  3728  00097E                     l4354:
  3729  00097E  5053               	movf	nrf24_printf_rf_config@aw^0,w,c
  3730  000980  5C54               	subwf	nrf24_printf_rf_config@i^0,w,c
  3731  000982  A0D8               	btfss	status,0,c
  3732  000984  EFC6  F004         	goto	u2731
  3733  000988  EFC8  F004         	goto	u2730
  3734  00098C                     u2731:
  3735  00098C  EFAD  F004         	goto	l4350
  3736  000990                     u2730:
  3737  000990                     
  3738                           ;nrf24_lib.c: 368:  printf("\"\r\n");
  3739  000990  0EB8               	movlw	low (STR_65+2)
  3740  000992  6E10               	movwf	printf@f^0,c
  3741  000994  0E3F               	movlw	high (STR_65+2)
  3742  000996  6E11               	movwf	(printf@f+1)^0,c
  3743  000998  EC35  F005         	call	_printf	;wreg free
  3744  00099C                     
  3745                           ;nrf24_lib.c: 371:  i = nrf24_read_register(0x11);
  3746  00099C  0E11               	movlw	17
  3747  00099E  EC51  F00C         	call	_nrf24_read_register
  3748  0009A2  6E54               	movwf	nrf24_printf_rf_config@i^0,c
  3749  0009A4                     
  3750                           ;nrf24_lib.c: 372:  printf("[0x%02X] RX_PW_P0=%u\r\n",0x11,i);
  3751  0009A4  0E04               	movlw	low STR_78
  3752  0009A6  6E10               	movwf	printf@f^0,c
  3753  0009A8  0E3E               	movlw	high STR_78
  3754  0009AA  6E11               	movwf	(printf@f+1)^0,c
  3755  0009AC  0E00               	movlw	0
  3756  0009AE  6E13               	movwf	(?_printf+3)^0,c
  3757  0009B0  0E11               	movlw	17
  3758  0009B2  6E12               	movwf	(?_printf+2)^0,c
  3759  0009B4  C054  F014         	movff	nrf24_printf_rf_config@i,?_printf+4
  3760  0009B8  6A15               	clrf	(?_printf+5)^0,c
  3761  0009BA  EC35  F005         	call	_printf	;wreg free
  3762                           
  3763                           ;nrf24_lib.c: 375:  i = nrf24_read_register(0x12);
  3764  0009BE  0E12               	movlw	18
  3765  0009C0  EC51  F00C         	call	_nrf24_read_register
  3766  0009C4  6E54               	movwf	nrf24_printf_rf_config@i^0,c
  3767  0009C6                     
  3768                           ;nrf24_lib.c: 376:  printf("[0x%02X] RX_PW_P1=%u\r\n",0x12,i);
  3769  0009C6  0E1B               	movlw	low STR_79
  3770  0009C8  6E10               	movwf	printf@f^0,c
  3771  0009CA  0E3E               	movlw	high STR_79
  3772  0009CC  6E11               	movwf	(printf@f+1)^0,c
  3773  0009CE  0E00               	movlw	0
  3774  0009D0  6E13               	movwf	(?_printf+3)^0,c
  3775  0009D2  0E12               	movlw	18
  3776  0009D4  6E12               	movwf	(?_printf+2)^0,c
  3777  0009D6  C054  F014         	movff	nrf24_printf_rf_config@i,?_printf+4
  3778  0009DA  6A15               	clrf	(?_printf+5)^0,c
  3779  0009DC  EC35  F005         	call	_printf	;wreg free
  3780  0009E0                     
  3781                           ;nrf24_lib.c: 379:  i = nrf24_read_register(0x13);
  3782  0009E0  0E13               	movlw	19
  3783  0009E2  EC51  F00C         	call	_nrf24_read_register
  3784  0009E6  6E54               	movwf	nrf24_printf_rf_config@i^0,c
  3785                           
  3786                           ;nrf24_lib.c: 380:  printf("[0x%02X] RX_PW_P2=%u\r\n",0x13,i);
  3787  0009E8  0E32               	movlw	low STR_80
  3788  0009EA  6E10               	movwf	printf@f^0,c
  3789  0009EC  0E3E               	movlw	high STR_80
  3790  0009EE  6E11               	movwf	(printf@f+1)^0,c
  3791  0009F0  0E00               	movlw	0
  3792  0009F2  6E13               	movwf	(?_printf+3)^0,c
  3793  0009F4  0E13               	movlw	19
  3794  0009F6  6E12               	movwf	(?_printf+2)^0,c
  3795  0009F8  C054  F014         	movff	nrf24_printf_rf_config@i,?_printf+4
  3796  0009FC  6A15               	clrf	(?_printf+5)^0,c
  3797  0009FE  EC35  F005         	call	_printf	;wreg free
  3798  000A02                     
  3799                           ;nrf24_lib.c: 383:  i = nrf24_read_register(0x14);
  3800  000A02  0E14               	movlw	20
  3801  000A04  EC51  F00C         	call	_nrf24_read_register
  3802  000A08  6E54               	movwf	nrf24_printf_rf_config@i^0,c
  3803  000A0A                     
  3804                           ;nrf24_lib.c: 384:  printf("[0x%02X] RX_PW_P3=%u\r\n",0x14,i);
  3805  000A0A  0E49               	movlw	low STR_81
  3806  000A0C  6E10               	movwf	printf@f^0,c
  3807  000A0E  0E3E               	movlw	high STR_81
  3808  000A10  6E11               	movwf	(printf@f+1)^0,c
  3809  000A12  0E00               	movlw	0
  3810  000A14  6E13               	movwf	(?_printf+3)^0,c
  3811  000A16  0E14               	movlw	20
  3812  000A18  6E12               	movwf	(?_printf+2)^0,c
  3813  000A1A  C054  F014         	movff	nrf24_printf_rf_config@i,?_printf+4
  3814  000A1E  6A15               	clrf	(?_printf+5)^0,c
  3815  000A20  EC35  F005         	call	_printf	;wreg free
  3816                           
  3817                           ;nrf24_lib.c: 387:  i = nrf24_read_register(0x15);
  3818  000A24  0E15               	movlw	21
  3819  000A26  EC51  F00C         	call	_nrf24_read_register
  3820  000A2A  6E54               	movwf	nrf24_printf_rf_config@i^0,c
  3821  000A2C                     
  3822                           ;nrf24_lib.c: 388:  printf("[0x%02X] RX_PW_P4=%u\r\n",0x15,i);
  3823  000A2C  0E60               	movlw	low STR_82
  3824  000A2E  6E10               	movwf	printf@f^0,c
  3825  000A30  0E3E               	movlw	high STR_82
  3826  000A32  6E11               	movwf	(printf@f+1)^0,c
  3827  000A34  0E00               	movlw	0
  3828  000A36  6E13               	movwf	(?_printf+3)^0,c
  3829  000A38  0E15               	movlw	21
  3830  000A3A  6E12               	movwf	(?_printf+2)^0,c
  3831  000A3C  C054  F014         	movff	nrf24_printf_rf_config@i,?_printf+4
  3832  000A40  6A15               	clrf	(?_printf+5)^0,c
  3833  000A42  EC35  F005         	call	_printf	;wreg free
  3834  000A46                     
  3835                           ;nrf24_lib.c: 391:  i = nrf24_read_register(0x16);
  3836  000A46  0E16               	movlw	22
  3837  000A48  EC51  F00C         	call	_nrf24_read_register
  3838  000A4C  6E54               	movwf	nrf24_printf_rf_config@i^0,c
  3839                           
  3840                           ;nrf24_lib.c: 392:  printf("[0x%02X] RX_PW_P5=%u\r\n",0x16,i);
  3841  000A4E  0E77               	movlw	low STR_83
  3842  000A50  6E10               	movwf	printf@f^0,c
  3843  000A52  0E3E               	movlw	high STR_83
  3844  000A54  6E11               	movwf	(printf@f+1)^0,c
  3845  000A56  0E00               	movlw	0
  3846  000A58  6E13               	movwf	(?_printf+3)^0,c
  3847  000A5A  0E16               	movlw	22
  3848  000A5C  6E12               	movwf	(?_printf+2)^0,c
  3849  000A5E  C054  F014         	movff	nrf24_printf_rf_config@i,?_printf+4
  3850  000A62  6A15               	clrf	(?_printf+5)^0,c
  3851  000A64  EC35  F005         	call	_printf	;wreg free
  3852  000A68  0012               	return		;funcret
  3853  000A6A                     __end_of_nrf24_printf_rf_config:
  3854                           	callstack 0
  3855                           
  3856 ;; *************** function _printf *****************
  3857 ;; Defined at:
  3858 ;;		line 477 in file "E:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c"
  3859 ;; Parameters:    Size  Location     Type
  3860 ;;  f               2   15[COMRAM] PTR const unsigned char 
  3861 ;;		 -> STR_83(23), STR_82(23), STR_81(23), STR_80(23), 
  3862 ;;		 -> STR_79(23), STR_78(23), STR_77(4), STR_76(3), 
  3863 ;;		 -> STR_75(19), STR_74(6), STR_73(3), STR_72(22), 
  3864 ;;		 -> STR_71(6), STR_70(3), STR_69(22), STR_68(6), 
  3865 ;;		 -> STR_67(3), STR_66(22), STR_65(6), STR_64(3), 
  3866 ;;		 -> STR_63(22), STR_62(4), STR_61(3), STR_60(22), 
  3867 ;;		 -> STR_59(4), STR_58(3), STR_57(22), STR_54(25), 
  3868 ;;		 -> STR_53(41), STR_50(49), STR_49(6), STR_48(4), 
  3869 ;;		 -> STR_47(2), STR_46(3), STR_45(4), STR_44(4), 
  3870 ;;		 -> STR_43(8), STR_42(5), STR_41(9), STR_40(7), 
  3871 ;;		 -> STR_39(7), STR_34(51), STR_33(28), STR_32(60), 
  3872 ;;		 -> STR_31(54), STR_26(11), STR_25(28), STR_20(11), 
  3873 ;;		 -> STR_19(23), STR_14(53), STR_13(23), STR_12(26), 
  3874 ;;		 -> STR_11(66), STR_10(29), STR_9(66), STR_8(2), 
  3875 ;;		 -> STR_7(5), STR_6(25), STR_5(66), STR_4(33), 
  3876 ;;		 -> STR_3(66), STR_2(19), STR_1(20), 
  3877 ;; Auto vars:     Size  Location     Type
  3878 ;;  idx             1   33[COMRAM] unsigned char 
  3879 ;;  tmpval          4    0        struct .
  3880 ;;  width           2   45[COMRAM] int 
  3881 ;;  val             2   42[COMRAM] unsigned int 
  3882 ;;  len             2   40[COMRAM] unsigned int 
  3883 ;;  ap              2   38[COMRAM] PTR void [1]
  3884 ;;		 -> ?_printf(2), 
  3885 ;;  cp              2   36[COMRAM] PTR const unsigned char 
  3886 ;;		 -> STR_84(7), ?_printf(2), STR_56(3), STR_55(4), 
  3887 ;;		 -> STR_52(3), STR_51(4), STR_38(4), STR_37(3), 
  3888 ;;		 -> STR_36(4), STR_35(3), STR_30(2), STR_29(3), 
  3889 ;;		 -> STR_28(2), STR_27(2), STR_24(2), STR_23(3), 
  3890 ;;		 -> STR_22(2), STR_21(2), STR_18(3), STR_17(3), 
  3891 ;;		 -> STR_16(4), STR_15(3), ADDRESS_DATA_TXPIPE0(5), ADDRESS_DATA_RXPIPE0(5), 
  3892 ;;		 -> bufferRX(32), 
  3893 ;;  c               1   48[COMRAM] unsigned char 
  3894 ;;  prec            1   47[COMRAM] char 
  3895 ;;  flag            1   44[COMRAM] unsigned char 
  3896 ;; Return value:  Size  Location     Type
  3897 ;;                  2   15[COMRAM] int 
  3898 ;; Registers used:
  3899 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3900 ;; Tracked objects:
  3901 ;;		On entry : 0/0
  3902 ;;		On exit  : 0/0
  3903 ;;		Unchanged: 0/0
  3904 ;; Data sizes:     COMRAM   BANK0   BANK1
  3905 ;;      Params:        14       0       0
  3906 ;;      Locals:        16       0       0
  3907 ;;      Temps:          4       0       0
  3908 ;;      Totals:        34       0       0
  3909 ;;Total ram usage:       34 bytes
  3910 ;; Hardware stack levels used: 1
  3911 ;; Hardware stack levels required when called: 6
  3912 ;; This function calls:
  3913 ;;		___lwdiv
  3914 ;;		___lwmod
  3915 ;;		___wmul
  3916 ;;		_isdigit
  3917 ;;		_putch
  3918 ;; This function is called by:
  3919 ;;		_main
  3920 ;;		_nrf24_rf_init
  3921 ;;		_nrf24_printf_rf_config
  3922 ;;		_SPI1_ReadByte
  3923 ;; This function uses a non-reentrant model
  3924 ;;
  3925                           
  3926                           	psect	text6
  3927  000A6A                     __ptext6:
  3928                           	callstack 0
  3929  000A6A                     _printf:
  3930                           	callstack 24
  3931  000A6A                     
  3932                           ;E:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 477: printf(const
      +                           char * f, ...);E:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 47
      +                          8: {;E:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 479:  va_list
      +                           ap;;E:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 512:  char c;
      +                          ;E:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 514:  int width;;
      +                          E:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 521:  signed char 
      +                          prec;
  3933  000A6A  0E12               	movlw	low (?_printf+2)
  3934  000A6C  6E27               	movwf	printf@ap^0,c
  3935  000A6E  0E00               	movlw	high (?_printf+2)
  3936  000A70  6E28               	movwf	(printf@ap+1)^0,c
  3937                           
  3938                           ;E:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  3939  000A72  EFBF  F008         	goto	l3966
  3940  000A76                     l3754:
  3941                           
  3942                           ;E:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  3943  000A76  0E25               	movlw	37
  3944  000A78  1831               	xorwf	printf@c^0,w,c
  3945  000A7A  B4D8               	btfsc	status,2,c
  3946  000A7C  EF42  F005         	goto	u2071
  3947  000A80  EF44  F005         	goto	u2070
  3948  000A84                     u2071:
  3949  000A84  EF49  F005         	goto	l3758
  3950  000A88                     u2070:
  3951  000A88                     
  3952                           ;E:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 557:   {;E:\Progr
      +                          am Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 558:    (putch(c) );
  3953  000A88  5031               	movf	printf@c^0,w,c
  3954  000A8A  EC93  F00C         	call	_putch
  3955                           
  3956                           ;E:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 559:    continue;
  3957  000A8E  EFBF  F008         	goto	l3966
  3958  000A92                     l3758:
  3959                           
  3960                           ;E:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 563:   width = 0;
  3961  000A92  0E00               	movlw	0
  3962  000A94  6E2F               	movwf	(printf@width+1)^0,c
  3963  000A96  0E00               	movlw	0
  3964  000A98  6E2E               	movwf	printf@width^0,c
  3965                           
  3966                           ;E:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  3967  000A9A  0E00               	movlw	0
  3968  000A9C  6E2D               	movwf	printf@flag^0,c
  3969  000A9E  EF59  F005         	goto	l3766
  3970  000AA2                     l3760:
  3971                           
  3972                           ;E:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 578:     flag |= 
      +                          0x01;
  3973  000AA2  802D               	bsf	printf@flag^0,0,c
  3974                           
  3975                           ;E:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 579:     f++;
  3976  000AA4  4A10               	infsnz	printf@f^0,f,c
  3977  000AA6  2A11               	incf	(printf@f+1)^0,f,c
  3978                           
  3979                           ;E:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 580:     continue
      +                          ;
  3980  000AA8  EF59  F005         	goto	l3766
  3981  000AAC                     l3762:
  3982                           
  3983                           ;E:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 597:     flag |= 
      +                          0x04;
  3984  000AAC  842D               	bsf	printf@flag^0,2,c
  3985                           
  3986                           ;E:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 598:     f++;
  3987  000AAE  4A10               	infsnz	printf@f^0,f,c
  3988  000AB0  2A11               	incf	(printf@f+1)^0,f,c
  3989  000AB2                     l3766:
  3990  000AB2  C010  FFF6         	movff	printf@f,tblptrl
  3991  000AB6  C011  FFF7         	movff	printf@f+1,tblptrh
  3992  000ABA                     	if	0	;tblptru may be non-zero
  3993  000ABA                     	endif
  3994  000ABA                     	if	0	;tblptru may be non-zero
  3995  000ABA                     	endif
  3996  000ABA  0008               	tblrd		*
  3997  000ABC  50F5               	movf	tablat,w,c
  3998  000ABE  6E1E               	movwf	??_printf^0,c
  3999  000AC0  6A1F               	clrf	(??_printf+1)^0,c
  4000                           
  4001                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4002                           ; Switch size 1, requested type "simple"
  4003                           ; Number of cases is 1, Range of values is 0 to 0
  4004                           ; switch strategies available:
  4005                           ; Name         Instructions Cycles
  4006                           ; simple_byte            4     3 (average)
  4007                           ;	Chosen strategy is simple_byte
  4008  000AC2  501F               	movf	(??_printf+1)^0,w,c
  4009  000AC4  0A00               	xorlw	0	; case 0
  4010  000AC6  B4D8               	btfsc	status,2,c
  4011  000AC8  EF68  F005         	goto	l4768
  4012  000ACC  EF73  F005         	goto	l3768
  4013  000AD0                     l4768:
  4014                           
  4015                           ; Switch size 1, requested type "simple"
  4016                           ; Number of cases is 2, Range of values is 32 to 48
  4017                           ; switch strategies available:
  4018                           ; Name         Instructions Cycles
  4019                           ; simple_byte            7     4 (average)
  4020                           ;	Chosen strategy is simple_byte
  4021  000AD0  501E               	movf	??_printf^0,w,c
  4022  000AD2  0A20               	xorlw	32	; case 32
  4023  000AD4  B4D8               	btfsc	status,2,c
  4024  000AD6  EF51  F005         	goto	l3760
  4025  000ADA  0A10               	xorlw	16	; case 48
  4026  000ADC  B4D8               	btfsc	status,2,c
  4027  000ADE  EF56  F005         	goto	l3762
  4028  000AE2  EF73  F005         	goto	l3768
  4029  000AE6                     l3768:
  4030                           
  4031                           ;E:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 614:   if(isdigit
      +                          ((unsigned)*f)) {
  4032  000AE6  C010  FFF6         	movff	printf@f,tblptrl
  4033  000AEA  C011  FFF7         	movff	printf@f+1,tblptrh
  4034  000AEE                     	if	0	;tblptru may be non-zero
  4035  000AEE                     	endif
  4036  000AEE                     	if	0	;tblptru may be non-zero
  4037  000AEE                     	endif
  4038  000AEE  0008               	tblrd		*
  4039  000AF0  50F5               	movf	tablat,w,c
  4040  000AF2  ECA9  F00B         	call	_isdigit
  4041  000AF6  A0D8               	btfss	status,0,c
  4042  000AF8  EF80  F005         	goto	u2081
  4043  000AFC  EF82  F005         	goto	u2080
  4044  000B00                     u2081:
  4045  000B00  EFB9  F005         	goto	l3780
  4046  000B04                     u2080:
  4047  000B04                     
  4048                           ;E:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 615:    width = 0
      +                          ;
  4049  000B04  0E00               	movlw	0
  4050  000B06  6E2F               	movwf	(printf@width+1)^0,c
  4051  000B08  0E00               	movlw	0
  4052  000B0A  6E2E               	movwf	printf@width^0,c
  4053  000B0C                     l3772:
  4054                           
  4055                           ;E:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 617:     width *=
      +                           10;
  4056  000B0C  C02E  F004         	movff	printf@width,___wmul@multiplier
  4057  000B10  C02F  F005         	movff	printf@width+1,___wmul@multiplier+1
  4058  000B14  0E00               	movlw	0
  4059  000B16  6E07               	movwf	(___wmul@multiplicand+1)^0,c
  4060  000B18  0E0A               	movlw	10
  4061  000B1A  6E06               	movwf	___wmul@multiplicand^0,c
  4062  000B1C  ECDA  F00B         	call	___wmul	;wreg free
  4063  000B20  C004  F02E         	movff	?___wmul,printf@width
  4064  000B24  C005  F02F         	movff	?___wmul+1,printf@width+1
  4065  000B28                     
  4066                           ;E:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 618:        width
      +                           += *f++ - '0';
  4067  000B28  0ED0               	movlw	208
  4068  000B2A  6E1E               	movwf	??_printf^0,c
  4069  000B2C  0EFF               	movlw	255
  4070  000B2E  6E1F               	movwf	(??_printf+1)^0,c
  4071  000B30  C010  FFF6         	movff	printf@f,tblptrl
  4072  000B34  C011  FFF7         	movff	printf@f+1,tblptrh
  4073  000B38                     	if	0	;tblptru may be non-zero
  4074  000B38                     	endif
  4075  000B38                     	if	0	;tblptru may be non-zero
  4076  000B38                     	endif
  4077  000B38  0008               	tblrd		*
  4078  000B3A  50F5               	movf	tablat,w,c
  4079  000B3C  6E20               	movwf	(??_printf+2)^0,c
  4080  000B3E  6A21               	clrf	(??_printf+3)^0,c
  4081  000B40  501E               	movf	??_printf^0,w,c
  4082  000B42  2620               	addwf	(??_printf+2)^0,f,c
  4083  000B44  501F               	movf	(??_printf+1)^0,w,c
  4084  000B46  2221               	addwfc	(??_printf+3)^0,f,c
  4085  000B48  5020               	movf	(??_printf+2)^0,w,c
  4086  000B4A  262E               	addwf	printf@width^0,f,c
  4087  000B4C  5021               	movf	(??_printf+3)^0,w,c
  4088  000B4E  222F               	addwfc	(printf@width+1)^0,f,c
  4089  000B50  4A10               	infsnz	printf@f^0,f,c
  4090  000B52  2A11               	incf	(printf@f+1)^0,f,c
  4091  000B54                     
  4092                           ;E:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 619:    } while(i
      +                          sdigit((unsigned)*f));
  4093  000B54  C010  FFF6         	movff	printf@f,tblptrl
  4094  000B58  C011  FFF7         	movff	printf@f+1,tblptrh
  4095  000B5C                     	if	0	;tblptru may be non-zero
  4096  000B5C                     	endif
  4097  000B5C                     	if	0	;tblptru may be non-zero
  4098  000B5C                     	endif
  4099  000B5C  0008               	tblrd		*
  4100  000B5E  50F5               	movf	tablat,w,c
  4101  000B60  ECA9  F00B         	call	_isdigit
  4102  000B64  B0D8               	btfsc	status,0,c
  4103  000B66  EFB7  F005         	goto	u2091
  4104  000B6A  EFB9  F005         	goto	u2090
  4105  000B6E                     u2091:
  4106  000B6E  EF86  F005         	goto	l3772
  4107  000B72                     u2090:
  4108  000B72                     l3780:
  4109                           
  4110                           ;E:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 628:   if(*f == '
      +                          .') {
  4111  000B72  C010  FFF6         	movff	printf@f,tblptrl
  4112  000B76  C011  FFF7         	movff	printf@f+1,tblptrh
  4113  000B7A                     	if	0	;tblptru may be non-zero
  4114  000B7A                     	endif
  4115  000B7A                     	if	0	;tblptru may be non-zero
  4116  000B7A                     	endif
  4117  000B7A  0008               	tblrd		*
  4118  000B7C  50F5               	movf	tablat,w,c
  4119  000B7E  0A2E               	xorlw	46
  4120  000B80  A4D8               	btfss	status,2,c
  4121  000B82  EFC5  F005         	goto	u2101
  4122  000B86  EFC7  F005         	goto	u2100
  4123  000B8A                     u2101:
  4124  000B8A  EFEC  F005         	goto	l3794
  4125  000B8E                     u2100:
  4126  000B8E                     
  4127                           ;E:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 630:    f++;
  4128  000B8E  4A10               	infsnz	printf@f^0,f,c
  4129  000B90  2A11               	incf	(printf@f+1)^0,f,c
  4130  000B92                     
  4131                           ;E:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 644:    {;E:\Prog
      +                          ram Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 645:     prec = 0;
  4132  000B92  0E00               	movlw	0
  4133  000B94  6E30               	movwf	printf@prec^0,c
  4134                           
  4135                           ;E:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  4136  000B96  EFDB  F005         	goto	l3792
  4137  000B9A                     l3786:
  4138                           
  4139                           ;E:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 647:      prec *=
      +                           10;
  4140  000B9A  0E0A               	movlw	10
  4141  000B9C  0230               	mulwf	printf@prec^0,c
  4142  000B9E  50F3               	movf	prodl,w,c
  4143  000BA0  6E30               	movwf	printf@prec^0,c
  4144  000BA2                     
  4145                           ;E:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 648:         prec
      +                           += *f++ - '0';
  4146  000BA2  C010  FFF6         	movff	printf@f,tblptrl
  4147  000BA6  C011  FFF7         	movff	printf@f+1,tblptrh
  4148  000BAA                     	if	0	;tblptru may be non-zero
  4149  000BAA                     	endif
  4150  000BAA                     	if	0	;tblptru may be non-zero
  4151  000BAA                     	endif
  4152  000BAA  0008               	tblrd		*
  4153  000BAC  50F5               	movf	tablat,w,c
  4154  000BAE  0FD0               	addlw	208
  4155  000BB0  2630               	addwf	printf@prec^0,f,c
  4156  000BB2  4A10               	infsnz	printf@f^0,f,c
  4157  000BB4  2A11               	incf	(printf@f+1)^0,f,c
  4158  000BB6                     l3792:
  4159                           
  4160                           ;E:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  4161  000BB6  C010  FFF6         	movff	printf@f,tblptrl
  4162  000BBA  C011  FFF7         	movff	printf@f+1,tblptrh
  4163  000BBE                     	if	0	;tblptru may be non-zero
  4164  000BBE                     	endif
  4165  000BBE                     	if	0	;tblptru may be non-zero
  4166  000BBE                     	endif
  4167  000BBE  0008               	tblrd		*
  4168  000BC0  50F5               	movf	tablat,w,c
  4169  000BC2  ECA9  F00B         	call	_isdigit
  4170  000BC6  B0D8               	btfsc	status,0,c
  4171  000BC8  EFE8  F005         	goto	u2111
  4172  000BCC  EFEA  F005         	goto	u2110
  4173  000BD0                     u2111:
  4174  000BD0  EFCD  F005         	goto	l3786
  4175  000BD4                     u2110:
  4176  000BD4  EF9E  F006         	goto	l3838
  4177  000BD8                     l3794:
  4178                           
  4179                           ;E:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 652:    prec = 0;
  4180  000BD8  0E00               	movlw	0
  4181  000BDA  6E30               	movwf	printf@prec^0,c
  4182  000BDC  EF9E  F006         	goto	l3838
  4183  000BE0                     l3796:
  4184                           
  4185                           ;E:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 740:    flag |= 0
      +                          x20;
  4186  000BE0  8A2D               	bsf	printf@flag^0,5,c
  4187  000BE2                     l621:
  4188                           
  4189                           ;E:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 747:    flag |= 0
      +                          x80;
  4190  000BE2  8E2D               	bsf	printf@flag^0,7,c
  4191                           
  4192                           ;E:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 749:    break;
  4193  000BE4  EFD0  F006         	goto	l3840
  4194  000BE8                     l3798:
  4195                           
  4196                           ;E:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 760:     cp = (*(
      +                          const char * *)__va_arg((*(const char * **)ap), (const char *)0));
  4197  000BE8  C027  FFD9         	movff	printf@ap,fsr2l
  4198  000BEC  C028  FFDA         	movff	printf@ap+1,fsr2h
  4199  000BF0  CFDE F025          	movff	postinc2,printf@cp
  4200  000BF4  CFDD F026          	movff	postdec2,printf@cp+1
  4201  000BF8  0E02               	movlw	2
  4202  000BFA  2627               	addwf	printf@ap^0,f,c
  4203  000BFC  0E00               	movlw	0
  4204  000BFE  2228               	addwfc	(printf@ap+1)^0,f,c
  4205  000C00                     
  4206                           ;E:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 766:    if(!cp)
  4207  000C00  5025               	movf	printf@cp^0,w,c
  4208  000C02  1026               	iorwf	(printf@cp+1)^0,w,c
  4209  000C04  A4D8               	btfss	status,2,c
  4210  000C06  EF07  F006         	goto	u2121
  4211  000C0A  EF09  F006         	goto	u2120
  4212  000C0E                     u2121:
  4213  000C0E  EF0D  F006         	goto	l3806
  4214  000C12                     u2120:
  4215  000C12                     
  4216                           ;E:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 767:     cp = "(n
      +                          ull)";
  4217  000C12  0EA1               	movlw	low STR_84
  4218  000C14  6E25               	movwf	printf@cp^0,c
  4219  000C16  0E3F               	movlw	high STR_84
  4220  000C18  6E26               	movwf	(printf@cp+1)^0,c
  4221  000C1A                     l3806:
  4222                           
  4223                           ;E:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 771:    len = 0;
  4224  000C1A  0E00               	movlw	0
  4225  000C1C  6E2A               	movwf	(printf@len+1)^0,c
  4226  000C1E  0E00               	movlw	0
  4227  000C20  6E29               	movwf	printf@len^0,c
  4228                           
  4229                           ;E:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 772:    while(cp[
      +                          len])
  4230  000C22  EF15  F006         	goto	l3810
  4231  000C26                     l3808:
  4232                           
  4233                           ;E:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 773:     len++;
  4234  000C26  4A29               	infsnz	printf@len^0,f,c
  4235  000C28  2A2A               	incf	(printf@len+1)^0,f,c
  4236  000C2A                     l3810:
  4237                           
  4238                           ;E:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 772:    while(cp[
      +                          len])
  4239  000C2A  5029               	movf	printf@len^0,w,c
  4240  000C2C  2425               	addwf	printf@cp^0,w,c
  4241  000C2E  6E1E               	movwf	??_printf^0,c
  4242  000C30  502A               	movf	(printf@len+1)^0,w,c
  4243  000C32  2026               	addwfc	(printf@cp+1)^0,w,c
  4244  000C34  6E1F               	movwf	(??_printf+1)^0,c
  4245  000C36  C01E  FFF6         	movff	??_printf,tblptrl
  4246  000C3A  C01F  FFF7         	movff	??_printf+1,tblptrh
  4247  000C3E  6AF8               	clrf	tblptru,c
  4248  000C40  0E01               	movlw	(high __ramtop+-1)
  4249  000C42  64F7               	cpfsgt	tblptrh,c
  4250  000C44  D003               	bra	u2137
  4251  000C46  0008               	tblrd		*
  4252  000C48  50F5               	movf	tablat,w,c
  4253  000C4A  D005               	bra	u2130
  4254  000C4C                     u2137:
  4255  000C4C  CFF6 FFE9          	movff	tblptrl,fsr0l
  4256  000C50  CFF7 FFEA          	movff	tblptrh,fsr0h
  4257  000C54  50EF               	movf	indf0,w,c
  4258  000C56                     u2130:
  4259  000C56  0900               	iorlw	0
  4260  000C58  A4D8               	btfss	status,2,c
  4261  000C5A  EF31  F006         	goto	u2141
  4262  000C5E  EF33  F006         	goto	u2140
  4263  000C62                     u2141:
  4264  000C62  EF13  F006         	goto	l3808
  4265  000C66                     u2140:
  4266  000C66                     
  4267                           ;E:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 779:    if(prec &
      +                          & (prec < ((int)len)))
  4268  000C66  5030               	movf	printf@prec^0,w,c
  4269  000C68  B4D8               	btfsc	status,2,c
  4270  000C6A  EF39  F006         	goto	u2151
  4271  000C6E  EF3B  F006         	goto	u2150
  4272  000C72                     u2151:
  4273  000C72  EF4E  F006         	goto	l3818
  4274  000C76                     u2150:
  4275  000C76  0E80               	movlw	128
  4276  000C78  BE30               	btfsc	printf@prec^0,7,c
  4277  000C7A  0E7F               	movlw	127
  4278  000C7C  6E1E               	movwf	??_printf^0,c
  4279  000C7E  5029               	movf	printf@len^0,w,c
  4280  000C80  5C30               	subwf	printf@prec^0,w,c
  4281  000C82  502A               	movf	(printf@len+1)^0,w,c
  4282  000C84  0A80               	xorlw	128
  4283  000C86  581E               	subwfb	??_printf^0,w,c
  4284  000C88  B0D8               	btfsc	status,0,c
  4285  000C8A  EF49  F006         	goto	u2161
  4286  000C8E  EF4B  F006         	goto	u2160
  4287  000C92                     u2161:
  4288  000C92  EF4E  F006         	goto	l3818
  4289  000C96                     u2160:
  4290  000C96                     
  4291                           ;E:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 780:     len = (u
      +                          nsigned char)prec;
  4292  000C96  C030  F029         	movff	printf@prec,printf@len
  4293  000C9A  6A2A               	clrf	(printf@len+1)^0,c
  4294  000C9C                     l3818:
  4295                           
  4296                           ;E:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 783:    if(((unsi
      +                          gned)width) > len)
  4297  000C9C  502E               	movf	printf@width^0,w,c
  4298  000C9E  5C29               	subwf	printf@len^0,w,c
  4299  000CA0  502F               	movf	(printf@width+1)^0,w,c
  4300  000CA2  582A               	subwfb	(printf@len+1)^0,w,c
  4301  000CA4  B0D8               	btfsc	status,0,c
  4302  000CA6  EF57  F006         	goto	u2171
  4303  000CAA  EF59  F006         	goto	u2170
  4304  000CAE                     u2171:
  4305  000CAE  EF5F  F006         	goto	l3822
  4306  000CB2                     u2170:
  4307  000CB2                     
  4308                           ;E:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 784:     width -=
      +                           len;
  4309  000CB2  5029               	movf	printf@len^0,w,c
  4310  000CB4  5E2E               	subwf	printf@width^0,f,c
  4311  000CB6  502A               	movf	(printf@len+1)^0,w,c
  4312  000CB8  5A2F               	subwfb	(printf@width+1)^0,f,c
  4313  000CBA  EF68  F006         	goto	l3826
  4314  000CBE                     l3822:
  4315                           
  4316                           ;E:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 786:     width = 
      +                          0;
  4317  000CBE  0E00               	movlw	0
  4318  000CC0  6E2F               	movwf	(printf@width+1)^0,c
  4319  000CC2  0E00               	movlw	0
  4320  000CC4  6E2E               	movwf	printf@width^0,c
  4321  000CC6  EF68  F006         	goto	l3826
  4322  000CCA                     l3824:
  4323                           
  4324                           ;E:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 791:      (putch(
      +                          ' ') );
  4325  000CCA  0E20               	movlw	32
  4326  000CCC  EC93  F00C         	call	_putch
  4327  000CD0                     l3826:
  4328                           
  4329                           ;E:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 790:     while(wi
      +                          dth--)
  4330  000CD0  062E               	decf	printf@width^0,f,c
  4331  000CD2  A0D8               	btfss	status,0,c
  4332  000CD4  062F               	decf	(printf@width+1)^0,f,c
  4333  000CD6  282E               	incf	printf@width^0,w,c
  4334  000CD8  E106               	bnz	u2181
  4335  000CDA  282F               	incf	(printf@width+1)^0,w,c
  4336  000CDC  A4D8               	btfss	status,2,c
  4337  000CDE  EF73  F006         	goto	u2181
  4338  000CE2  EF75  F006         	goto	u2180
  4339  000CE6                     u2181:
  4340  000CE6  EF65  F006         	goto	l3824
  4341  000CEA                     u2180:
  4342  000CEA  EF8B  F006         	goto	l3832
  4343  000CEE                     l3828:
  4344                           
  4345                           ;E:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 794:     (putch(*
      +                          cp++) );
  4346  000CEE  C025  FFF6         	movff	printf@cp,tblptrl
  4347  000CF2  C026  FFF7         	movff	printf@cp+1,tblptrh
  4348  000CF6  6AF8               	clrf	tblptru,c
  4349  000CF8  0E01               	movlw	(high __ramtop+-1)
  4350  000CFA  64F7               	cpfsgt	tblptrh,c
  4351  000CFC  D003               	bra	u2197
  4352  000CFE  0008               	tblrd		*
  4353  000D00  50F5               	movf	tablat,w,c
  4354  000D02  D005               	bra	u2190
  4355  000D04                     u2197:
  4356  000D04  CFF6 FFE9          	movff	tblptrl,fsr0l
  4357  000D08  CFF7 FFEA          	movff	tblptrh,fsr0h
  4358  000D0C  50EF               	movf	indf0,w,c
  4359  000D0E                     u2190:
  4360  000D0E  EC93  F00C         	call	_putch
  4361  000D12  4A25               	infsnz	printf@cp^0,f,c
  4362  000D14  2A26               	incf	(printf@cp+1)^0,f,c
  4363  000D16                     l3832:
  4364                           
  4365                           ;E:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 793:    while(len
      +                          --)
  4366  000D16  0629               	decf	printf@len^0,f,c
  4367  000D18  A0D8               	btfss	status,0,c
  4368  000D1A  062A               	decf	(printf@len+1)^0,f,c
  4369  000D1C  2829               	incf	printf@len^0,w,c
  4370  000D1E  E106               	bnz	u2201
  4371  000D20  282A               	incf	(printf@len+1)^0,w,c
  4372  000D22  A4D8               	btfss	status,2,c
  4373  000D24  EF96  F006         	goto	u2201
  4374  000D28  EF98  F006         	goto	u2200
  4375  000D2C                     u2201:
  4376  000D2C  EF77  F006         	goto	l3828
  4377  000D30                     u2200:
  4378  000D30  EFBF  F008         	goto	l3966
  4379  000D34                     l3834:
  4380                           
  4381                           ;E:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 844:    flag |= 0
      +                          xC0;
  4382  000D34  0EC0               	movlw	192
  4383  000D36  122D               	iorwf	printf@flag^0,f,c
  4384                           
  4385                           ;E:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 845:    break;
  4386  000D38  EFD0  F006         	goto	l3840
  4387  000D3C                     l3838:
  4388  000D3C  C010  FFF6         	movff	printf@f,tblptrl
  4389  000D40  C011  FFF7         	movff	printf@f+1,tblptrh
  4390  000D44  4A10               	infsnz	printf@f^0,f,c
  4391  000D46  2A11               	incf	(printf@f+1)^0,f,c
  4392  000D48                     	if	0	;tblptru may be non-zero
  4393  000D48                     	endif
  4394  000D48                     	if	0	;tblptru may be non-zero
  4395  000D48                     	endif
  4396  000D48  0008               	tblrd		*
  4397  000D4A  CFF5 F031          	movff	tablat,printf@c
  4398  000D4E  5031               	movf	printf@c^0,w,c
  4399  000D50  6E1E               	movwf	??_printf^0,c
  4400  000D52  6A1F               	clrf	(??_printf+1)^0,c
  4401                           
  4402                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4403                           ; Switch size 1, requested type "simple"
  4404                           ; Number of cases is 1, Range of values is 0 to 0
  4405                           ; switch strategies available:
  4406                           ; Name         Instructions Cycles
  4407                           ; simple_byte            4     3 (average)
  4408                           ;	Chosen strategy is simple_byte
  4409  000D54  501F               	movf	(??_printf+1)^0,w,c
  4410  000D56  0A00               	xorlw	0	; case 0
  4411  000D58  B4D8               	btfsc	status,2,c
  4412  000D5A  EFB1  F006         	goto	l4770
  4413  000D5E  EFBF  F008         	goto	l3966
  4414  000D62                     l4770:
  4415                           
  4416                           ; Switch size 1, requested type "simple"
  4417                           ; Number of cases is 7, Range of values is 0 to 120
  4418                           ; switch strategies available:
  4419                           ; Name         Instructions Cycles
  4420                           ; simple_byte           22    12 (average)
  4421                           ;	Chosen strategy is simple_byte
  4422  000D62  501E               	movf	??_printf^0,w,c
  4423  000D64  0A00               	xorlw	0	; case 0
  4424  000D66  B4D8               	btfsc	status,2,c
  4425  000D68  EFD0  F008         	goto	l689
  4426  000D6C  0A58               	xorlw	88	; case 88
  4427  000D6E  B4D8               	btfsc	status,2,c
  4428  000D70  EFF0  F005         	goto	l3796
  4429  000D74  0A3C               	xorlw	60	; case 100
  4430  000D76  B4D8               	btfsc	status,2,c
  4431  000D78  EFD0  F006         	goto	l3840
  4432  000D7C  0A0D               	xorlw	13	; case 105
  4433  000D7E  B4D8               	btfsc	status,2,c
  4434  000D80  EFD0  F006         	goto	l3840
  4435  000D84  0A1A               	xorlw	26	; case 115
  4436  000D86  B4D8               	btfsc	status,2,c
  4437  000D88  EFF4  F005         	goto	l3798
  4438  000D8C  0A06               	xorlw	6	; case 117
  4439  000D8E  B4D8               	btfsc	status,2,c
  4440  000D90  EF9A  F006         	goto	l3834
  4441  000D94  0A0D               	xorlw	13	; case 120
  4442  000D96  B4D8               	btfsc	status,2,c
  4443  000D98  EFF1  F005         	goto	l621
  4444  000D9C  EFBF  F008         	goto	l3966
  4445  000DA0                     l3840:
  4446                           
  4447                           ;E:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1277:   if((flag 
      +                          & (0xC0)) == 0x00)
  4448  000DA0  C02D  F01E         	movff	printf@flag,??_printf
  4449  000DA4  0EC0               	movlw	192
  4450  000DA6  161E               	andwf	??_printf^0,f,c
  4451  000DA8  A4D8               	btfss	status,2,c
  4452  000DAA  EFD9  F006         	goto	u2211
  4453  000DAE  EFDB  F006         	goto	u2210
  4454  000DB2                     u2211:
  4455  000DB2  EFF6  F006         	goto	l3852
  4456  000DB6                     u2210:
  4457  000DB6                     
  4458                           ;E:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1279:   {;E:\Prog
      +                          ram Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  4459  000DB6  C027  FFD9         	movff	printf@ap,fsr2l
  4460  000DBA  C028  FFDA         	movff	printf@ap+1,fsr2h
  4461  000DBE  CFDE F02B          	movff	postinc2,printf@val
  4462  000DC2  CFDD F02C          	movff	postdec2,printf@val+1
  4463  000DC6  0E02               	movlw	2
  4464  000DC8  2627               	addwf	printf@ap^0,f,c
  4465  000DCA  0E00               	movlw	0
  4466  000DCC  2228               	addwfc	(printf@ap+1)^0,f,c
  4467  000DCE                     
  4468                           ;E:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  4469  000DCE  BE2C               	btfsc	(printf@val+1)^0,7,c
  4470  000DD0  EFEE  F006         	goto	u2220
  4471  000DD4  EFEC  F006         	goto	u2221
  4472  000DD8                     u2221:
  4473  000DD8  EF02  F007         	goto	l3856
  4474  000DDC                     u2220:
  4475  000DDC                     
  4476                           ;E:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  4477  000DDC  0E03               	movlw	3
  4478  000DDE  122D               	iorwf	printf@flag^0,f,c
  4479  000DE0                     
  4480                           ;E:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  4481  000DE0  6C2B               	negf	printf@val^0,c
  4482  000DE2  1E2C               	comf	(printf@val+1)^0,f,c
  4483  000DE4  B0D8               	btfsc	status,0,c
  4484  000DE6  2A2C               	incf	(printf@val+1)^0,f,c
  4485  000DE8  EF02  F007         	goto	l3856
  4486  000DEC                     l3852:
  4487                           
  4488                           ;E:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1299:   {;E:\Prog
      +                          ram Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1312:     val = (*(unsign
      +                          ed *)__va_arg((*(unsigned **)ap), (unsigned)0));
  4489  000DEC  C027  FFD9         	movff	printf@ap,fsr2l
  4490  000DF0  C028  FFDA         	movff	printf@ap+1,fsr2h
  4491  000DF4  CFDE F02B          	movff	postinc2,printf@val
  4492  000DF8  CFDD F02C          	movff	postdec2,printf@val+1
  4493  000DFC  0E02               	movlw	2
  4494  000DFE  2627               	addwf	printf@ap^0,f,c
  4495  000E00  0E00               	movlw	0
  4496  000E02  2228               	addwfc	(printf@ap+1)^0,f,c
  4497  000E04                     l3856:
  4498                           
  4499                           ;E:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1316:   if(prec =
      +                          = 0 && val == 0)
  4500  000E04  5030               	movf	printf@prec^0,w,c
  4501  000E06  A4D8               	btfss	status,2,c
  4502  000E08  EF08  F007         	goto	u2231
  4503  000E0C  EF0A  F007         	goto	u2230
  4504  000E10                     u2231:
  4505  000E10  EF60  F007         	goto	l3892
  4506  000E14                     u2230:
  4507  000E14  502B               	movf	printf@val^0,w,c
  4508  000E16  102C               	iorwf	(printf@val+1)^0,w,c
  4509  000E18  A4D8               	btfss	status,2,c
  4510  000E1A  EF11  F007         	goto	u2241
  4511  000E1E  EF13  F007         	goto	u2240
  4512  000E22                     u2241:
  4513  000E22  EF60  F007         	goto	l3892
  4514  000E26                     u2240:
  4515  000E26                     
  4516                           ;E:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1317:    prec++;
  4517  000E26  2A30               	incf	printf@prec^0,f,c
  4518  000E28  EF60  F007         	goto	l3892
  4519  000E2C                     l3862:
  4520                           
  4521                           ;E:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1331:    for(c = 
      +                          1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  4522  000E2C  0E01               	movlw	1
  4523  000E2E  6E31               	movwf	printf@c^0,c
  4524  000E30                     l3868:
  4525                           
  4526                           ;E:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  4527  000E30  5031               	movf	printf@c^0,w,c
  4528  000E32  0D02               	mullw	2
  4529  000E34  0EA3               	movlw	low _dpowers
  4530  000E36  24F3               	addwf	243,w,c
  4531  000E38  6EF6               	movwf	tblptrl,c
  4532  000E3A  0E3B               	movlw	high _dpowers
  4533  000E3C  20F4               	addwfc	244,w,c
  4534  000E3E  6EF7               	movwf	tblptrh,c
  4535  000E40                     	if	0	;There are less than 3 active tblptr bytes
  4536  000E40                     	endif
  4537  000E40  0009               	tblrd		*+
  4538  000E42  50F5               	movf	tablat,w,c
  4539  000E44  5C2B               	subwf	printf@val^0,w,c
  4540  000E46  0009               	tblrd		*+
  4541  000E48  50F5               	movf	tablat,w,c
  4542  000E4A  582C               	subwfb	(printf@val+1)^0,w,c
  4543  000E4C  B0D8               	btfsc	status,0,c
  4544  000E4E  EF2B  F007         	goto	u2251
  4545  000E52  EF2D  F007         	goto	u2250
  4546  000E56                     u2251:
  4547  000E56  EF2F  F007         	goto	l3872
  4548  000E5A                     u2250:
  4549  000E5A  EF7A  F007         	goto	l3894
  4550  000E5E                     l3872:
  4551  000E5E  2A31               	incf	printf@c^0,f,c
  4552  000E60  0E05               	movlw	5
  4553  000E62  1831               	xorwf	printf@c^0,w,c
  4554  000E64  A4D8               	btfss	status,2,c
  4555  000E66  EF37  F007         	goto	u2261
  4556  000E6A  EF39  F007         	goto	u2260
  4557  000E6E                     u2261:
  4558  000E6E  EF18  F007         	goto	l3868
  4559  000E72                     u2260:
  4560  000E72  EF7A  F007         	goto	l3894
  4561  000E76                     l3876:
  4562                           
  4563                           ;E:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1342:    for(c = 
      +                          1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
  4564  000E76  0E01               	movlw	1
  4565  000E78  6E31               	movwf	printf@c^0,c
  4566  000E7A                     l3882:
  4567                           
  4568                           ;E:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1343:     if(val 
      +                          < hexpowers[c])
  4569  000E7A  5031               	movf	printf@c^0,w,c
  4570  000E7C  0D02               	mullw	2
  4571  000E7E  0EAD               	movlw	low _hexpowers
  4572  000E80  24F3               	addwf	243,w,c
  4573  000E82  6EF6               	movwf	tblptrl,c
  4574  000E84  0E3B               	movlw	high _hexpowers
  4575  000E86  20F4               	addwfc	244,w,c
  4576  000E88  6EF7               	movwf	tblptrh,c
  4577  000E8A                     	if	0	;There are less than 3 active tblptr bytes
  4578  000E8A                     	endif
  4579  000E8A  0009               	tblrd		*+
  4580  000E8C  50F5               	movf	tablat,w,c
  4581  000E8E  5C2B               	subwf	printf@val^0,w,c
  4582  000E90  0009               	tblrd		*+
  4583  000E92  50F5               	movf	tablat,w,c
  4584  000E94  582C               	subwfb	(printf@val+1)^0,w,c
  4585  000E96  B0D8               	btfsc	status,0,c
  4586  000E98  EF50  F007         	goto	u2271
  4587  000E9C  EF52  F007         	goto	u2270
  4588  000EA0                     u2271:
  4589  000EA0  EF54  F007         	goto	l3886
  4590  000EA4                     u2270:
  4591  000EA4  EF7A  F007         	goto	l3894
  4592  000EA8                     l3886:
  4593  000EA8  2A31               	incf	printf@c^0,f,c
  4594  000EAA  0E04               	movlw	4
  4595  000EAC  1831               	xorwf	printf@c^0,w,c
  4596  000EAE  A4D8               	btfss	status,2,c
  4597  000EB0  EF5C  F007         	goto	u2281
  4598  000EB4  EF5E  F007         	goto	u2280
  4599  000EB8                     u2281:
  4600  000EB8  EF3D  F007         	goto	l3882
  4601  000EBC                     u2280:
  4602  000EBC  EF7A  F007         	goto	l3894
  4603  000EC0                     l3892:
  4604  000EC0  502D               	movf	printf@flag^0,w,c
  4605  000EC2  0BC0               	andlw	192
  4606  000EC4  6E1E               	movwf	??_printf^0,c
  4607  000EC6  6A1F               	clrf	(??_printf+1)^0,c
  4608                           
  4609                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4610                           ; Switch size 1, requested type "simple"
  4611                           ; Number of cases is 1, Range of values is 0 to 0
  4612                           ; switch strategies available:
  4613                           ; Name         Instructions Cycles
  4614                           ; simple_byte            4     3 (average)
  4615                           ;	Chosen strategy is simple_byte
  4616  000EC8  501F               	movf	(??_printf+1)^0,w,c
  4617  000ECA  0A00               	xorlw	0	; case 0
  4618  000ECC  B4D8               	btfsc	status,2,c
  4619  000ECE  EF6B  F007         	goto	l4772
  4620  000ED2  EF7A  F007         	goto	l3894
  4621  000ED6                     l4772:
  4622                           
  4623                           ; Switch size 1, requested type "simple"
  4624                           ; Number of cases is 3, Range of values is 0 to 192
  4625                           ; switch strategies available:
  4626                           ; Name         Instructions Cycles
  4627                           ; simple_byte           10     6 (average)
  4628                           ;	Chosen strategy is simple_byte
  4629  000ED6  501E               	movf	??_printf^0,w,c
  4630  000ED8  0A00               	xorlw	0	; case 0
  4631  000EDA  B4D8               	btfsc	status,2,c
  4632  000EDC  EF16  F007         	goto	l3862
  4633  000EE0  0A80               	xorlw	128	; case 128
  4634  000EE2  B4D8               	btfsc	status,2,c
  4635  000EE4  EF3B  F007         	goto	l3876
  4636  000EE8  0A40               	xorlw	64	; case 192
  4637  000EEA  B4D8               	btfsc	status,2,c
  4638  000EEC  EF16  F007         	goto	l3862
  4639  000EF0  EF7A  F007         	goto	l3894
  4640  000EF4                     l3894:
  4641                           
  4642                           ;E:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1365:   if(c < pr
      +                          ec)
  4643  000EF4  5031               	movf	printf@c^0,w,c
  4644  000EF6  80D8               	bsf	status,0,c
  4645  000EF8  84D8               	bsf	status,2,c
  4646  000EFA  AE30               	btfss	printf@prec^0,7,c
  4647  000EFC  5C30               	subwf	printf@prec^0,w,c
  4648  000EFE  A0D8               	btfss	status,0,c
  4649  000F00  84D8               	bsf	status,2,c
  4650  000F02  B4D8               	btfsc	status,2,c
  4651  000F04  EF86  F007         	goto	u2291
  4652  000F08  EF88  F007         	goto	u2290
  4653  000F0C                     u2291:
  4654  000F0C  EF8C  F007         	goto	l3898
  4655  000F10                     u2290:
  4656  000F10                     
  4657                           ;E:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1366:    c = (cha
      +                          r)prec;
  4658  000F10  C030  F031         	movff	printf@prec,printf@c
  4659  000F14  EF9B  F007         	goto	l3902
  4660  000F18                     l3898:
  4661  000F18  5031               	movf	printf@c^0,w,c
  4662  000F1A  90D8               	bcf	status,0,c
  4663  000F1C  AE30               	btfss	printf@prec^0,7,c
  4664  000F1E  5C30               	subwf	printf@prec^0,w,c
  4665  000F20  B0D8               	btfsc	status,0,c
  4666  000F22  80D8               	bsf	status,0,c
  4667  000F24  B0D8               	btfsc	status,0,c
  4668  000F26  EF97  F007         	goto	u2301
  4669  000F2A  EF99  F007         	goto	u2300
  4670  000F2E                     u2301:
  4671  000F2E  EF9B  F007         	goto	l3902
  4672  000F32                     u2300:
  4673  000F32                     
  4674                           ;E:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1368:    prec = c
      +                          ;
  4675  000F32  C031  F030         	movff	printf@c,printf@prec
  4676  000F36                     l3902:
  4677                           
  4678                           ;E:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1371:   if(width 
      +                          && flag & 0x03)
  4679  000F36  502E               	movf	printf@width^0,w,c
  4680  000F38  102F               	iorwf	(printf@width+1)^0,w,c
  4681  000F3A  B4D8               	btfsc	status,2,c
  4682  000F3C  EFA2  F007         	goto	u2311
  4683  000F40  EFA4  F007         	goto	u2310
  4684  000F44                     u2311:
  4685  000F44  EFB2  F007         	goto	l3914
  4686  000F48                     u2310:
  4687  000F48  C02D  F01E         	movff	printf@flag,??_printf
  4688  000F4C  0E03               	movlw	3
  4689  000F4E  161E               	andwf	??_printf^0,f,c
  4690  000F50  B4D8               	btfsc	status,2,c
  4691  000F52  EFAD  F007         	goto	u2321
  4692  000F56  EFAF  F007         	goto	u2320
  4693  000F5A                     u2321:
  4694  000F5A  EFB2  F007         	goto	l3914
  4695  000F5E                     u2320:
  4696  000F5E                     
  4697                           ;E:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1372:    width--;
  4698  000F5E  062E               	decf	printf@width^0,f,c
  4699  000F60  A0D8               	btfss	status,0,c
  4700  000F62  062F               	decf	(printf@width+1)^0,f,c
  4701  000F64                     l3914:
  4702                           
  4703                           ;E:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1407:   if(width 
      +                          > c)
  4704  000F64  5031               	movf	printf@c^0,w,c
  4705  000F66  6E1E               	movwf	??_printf^0,c
  4706  000F68  6A1F               	clrf	(??_printf+1)^0,c
  4707  000F6A  502E               	movf	printf@width^0,w,c
  4708  000F6C  5C1E               	subwf	??_printf^0,w,c
  4709  000F6E  501F               	movf	(??_printf+1)^0,w,c
  4710  000F70  0A80               	xorlw	128
  4711  000F72  6E20               	movwf	(??_printf+2)^0,c
  4712  000F74  502F               	movf	(printf@width+1)^0,w,c
  4713  000F76  0A80               	xorlw	128
  4714  000F78  5820               	subwfb	(??_printf+2)^0,w,c
  4715  000F7A  B0D8               	btfsc	status,0,c
  4716  000F7C  EFC2  F007         	goto	u2331
  4717  000F80  EFC4  F007         	goto	u2330
  4718  000F84                     u2331:
  4719  000F84  EFCA  F007         	goto	l3918
  4720  000F88                     u2330:
  4721  000F88                     
  4722                           ;E:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1408:    width -=
      +                           c;
  4723  000F88  5031               	movf	printf@c^0,w,c
  4724  000F8A  5E2E               	subwf	printf@width^0,f,c
  4725  000F8C  0E00               	movlw	0
  4726  000F8E  5A2F               	subwfb	(printf@width+1)^0,f,c
  4727  000F90  EFCE  F007         	goto	l3920
  4728  000F94                     l3918:
  4729                           
  4730                           ;E:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1410:    width = 
      +                          0;
  4731  000F94  0E00               	movlw	0
  4732  000F96  6E2F               	movwf	(printf@width+1)^0,c
  4733  000F98  0E00               	movlw	0
  4734  000F9A  6E2E               	movwf	printf@width^0,c
  4735  000F9C                     l3920:
  4736                           
  4737                           ;E:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1413:   if(flag &
      +                           0x04) {
  4738  000F9C  A42D               	btfss	printf@flag^0,2,c
  4739  000F9E  EFD3  F007         	goto	u2341
  4740  000FA2  EFD5  F007         	goto	u2340
  4741  000FA6                     u2341:
  4742  000FA6  EF09  F008         	goto	l3934
  4743  000FAA                     u2340:
  4744  000FAA                     
  4745                           ;E:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1418:    if(flag 
      +                          & 0x03)
  4746  000FAA  C02D  F01E         	movff	printf@flag,??_printf
  4747  000FAE  0E03               	movlw	3
  4748  000FB0  161E               	andwf	??_printf^0,f,c
  4749  000FB2  B4D8               	btfsc	status,2,c
  4750  000FB4  EFDE  F007         	goto	u2351
  4751  000FB8  EFE0  F007         	goto	u2350
  4752  000FBC                     u2351:
  4753  000FBC  EFE5  F007         	goto	l663
  4754  000FC0                     u2350:
  4755  000FC0                     
  4756                           ;E:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1419:     (putch(
      +                          '-') );
  4757  000FC0  0E2D               	movlw	45
  4758  000FC2  EC93  F00C         	call	_putch
  4759  000FC6  EFEF  F007         	goto	l3928
  4760  000FCA                     l663:
  4761                           
  4762                           ;E:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1425:    if(flag 
      +                          & 0x01)
  4763  000FCA  A02D               	btfss	printf@flag^0,0,c
  4764  000FCC  EFEA  F007         	goto	u2361
  4765  000FD0  EFEC  F007         	goto	u2360
  4766  000FD4                     u2361:
  4767  000FD4  EFEF  F007         	goto	l3928
  4768  000FD8                     u2360:
  4769  000FD8                     
  4770                           ;E:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1426:     (putch(
      +                          ' ') );
  4771  000FD8  0E20               	movlw	32
  4772  000FDA  EC93  F00C         	call	_putch
  4773  000FDE                     l3928:
  4774                           
  4775                           ;E:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1441:    if(width
      +                          )
  4776  000FDE  502E               	movf	printf@width^0,w,c
  4777  000FE0  102F               	iorwf	(printf@width+1)^0,w,c
  4778  000FE2  B4D8               	btfsc	status,2,c
  4779  000FE4  EFF6  F007         	goto	u2371
  4780  000FE8  EFF8  F007         	goto	u2370
  4781  000FEC                     u2371:
  4782  000FEC  EFB6  F008         	goto	l3964
  4783  000FF0                     u2370:
  4784  000FF0                     l3930:
  4785                           
  4786                           ;E:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1443:      (putch
      +                          ('0') );
  4787  000FF0  0E30               	movlw	48
  4788  000FF2  EC93  F00C         	call	_putch
  4789  000FF6  062E               	decf	printf@width^0,f,c
  4790  000FF8  A0D8               	btfss	status,0,c
  4791  000FFA  062F               	decf	(printf@width+1)^0,f,c
  4792  000FFC  502E               	movf	printf@width^0,w,c
  4793  000FFE  102F               	iorwf	(printf@width+1)^0,w,c
  4794  001000  A4D8               	btfss	status,2,c
  4795  001002  EF05  F008         	goto	u2381
  4796  001006  EF07  F008         	goto	u2380
  4797  00100A                     u2381:
  4798  00100A  EFF8  F007         	goto	l3930
  4799  00100E                     u2380:
  4800  00100E  EFB6  F008         	goto	l3964
  4801  001012                     l3934:
  4802                           
  4803                           ;E:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1448:   {;E:\Prog
      +                          ram Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1450:    if(width
  4804  001012  502E               	movf	printf@width^0,w,c
  4805  001014  102F               	iorwf	(printf@width+1)^0,w,c
  4806  001016  B4D8               	btfsc	status,2,c
  4807  001018  EF10  F008         	goto	u2391
  4808  00101C  EF12  F008         	goto	u2390
  4809  001020                     u2391:
  4810  001020  EF21  F008         	goto	l3940
  4811  001024                     u2390:
  4812  001024                     l3936:
  4813                           
  4814                           ;E:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1456:      (putch
      +                          (' ') );
  4815  001024  0E20               	movlw	32
  4816  001026  EC93  F00C         	call	_putch
  4817  00102A  062E               	decf	printf@width^0,f,c
  4818  00102C  A0D8               	btfss	status,0,c
  4819  00102E  062F               	decf	(printf@width+1)^0,f,c
  4820  001030  502E               	movf	printf@width^0,w,c
  4821  001032  102F               	iorwf	(printf@width+1)^0,w,c
  4822  001034  A4D8               	btfss	status,2,c
  4823  001036  EF1F  F008         	goto	u2401
  4824  00103A  EF21  F008         	goto	u2400
  4825  00103E                     u2401:
  4826  00103E  EF12  F008         	goto	l3936
  4827  001042                     u2400:
  4828  001042                     l3940:
  4829                           
  4830                           ;E:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1464:    if(flag 
      +                          & 0x03)
  4831  001042  C02D  F01E         	movff	printf@flag,??_printf
  4832  001046  0E03               	movlw	3
  4833  001048  161E               	andwf	??_printf^0,f,c
  4834  00104A  B4D8               	btfsc	status,2,c
  4835  00104C  EF2A  F008         	goto	u2411
  4836  001050  EF2C  F008         	goto	u2410
  4837  001054                     u2411:
  4838  001054  EF31  F008         	goto	l673
  4839  001058                     u2410:
  4840  001058                     
  4841                           ;E:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1465:     (putch(
      +                          '-') );
  4842  001058  0E2D               	movlw	45
  4843  00105A  EC93  F00C         	call	_putch
  4844  00105E  EFB6  F008         	goto	l3964
  4845  001062                     l673:
  4846  001062  A02D               	btfss	printf@flag^0,0,c
  4847  001064  EF36  F008         	goto	u2421
  4848  001068  EF38  F008         	goto	u2420
  4849  00106C                     u2421:
  4850  00106C  EF3D  F008         	goto	l669
  4851  001070                     u2420:
  4852  001070                     
  4853                           ;E:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1470:     (putch(
      +                          ' ') );
  4854  001070  0E20               	movlw	32
  4855  001072  EC93  F00C         	call	_putch
  4856  001076  EFB6  F008         	goto	l3964
  4857  00107A                     l669:
  4858                           
  4859                           ;E:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  4860  00107A  EFB6  F008         	goto	l3964
  4861  00107E                     l3946:
  4862                           
  4863                           ;E:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1515:     c = (va
      +                          l / dpowers[(unsigned char)prec]) % 10 + '0';
  4864  00107E  5030               	movf	printf@prec^0,w,c
  4865  001080  0D02               	mullw	2
  4866  001082  0EA3               	movlw	low _dpowers
  4867  001084  24F3               	addwf	243,w,c
  4868  001086  6EF6               	movwf	tblptrl,c
  4869  001088  0E3B               	movlw	high _dpowers
  4870  00108A  20F4               	addwfc	244,w,c
  4871  00108C  6EF7               	movwf	tblptrh,c
  4872  00108E                     	if	0	;There are less than 3 active tblptr bytes
  4873  00108E                     	endif
  4874  00108E  0009               	tblrd		*+
  4875  001090  CFF5 F006          	movff	tablat,___lwdiv@divisor
  4876  001094  000A               	tblrd		*-
  4877  001096  CFF5 F007          	movff	tablat,___lwdiv@divisor+1
  4878  00109A  C02B  F004         	movff	printf@val,___lwdiv@dividend
  4879  00109E  C02C  F005         	movff	printf@val+1,___lwdiv@dividend+1
  4880  0010A2  EC28  F00A         	call	___lwdiv	;wreg free
  4881  0010A6  C004  F00B         	movff	?___lwdiv,___lwmod@dividend
  4882  0010AA  C005  F00C         	movff	?___lwdiv+1,___lwmod@dividend+1
  4883  0010AE  0E00               	movlw	0
  4884  0010B0  6E0E               	movwf	(___lwmod@divisor+1)^0,c
  4885  0010B2  0E0A               	movlw	10
  4886  0010B4  6E0D               	movwf	___lwmod@divisor^0,c
  4887  0010B6  EC62  F00A         	call	___lwmod	;wreg free
  4888  0010BA  500B               	movf	?___lwmod^0,w,c
  4889  0010BC  0F30               	addlw	48
  4890  0010BE  6E31               	movwf	printf@c^0,c
  4891                           
  4892                           ;E:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1517:     break;
  4893  0010C0  EFB3  F008         	goto	l3962
  4894  0010C4                     l3948:
  4895                           
  4896                           ;E:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1525:    {;E:\Pro
      +                          gram Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1526:     unsigned char 
      +                          idx = (val / hexpowers[(unsigned char)prec]) & 0xF;
  4897  0010C4  C02B  F004         	movff	printf@val,___lwdiv@dividend
  4898  0010C8  C02C  F005         	movff	printf@val+1,___lwdiv@dividend+1
  4899  0010CC  5030               	movf	printf@prec^0,w,c
  4900  0010CE  0D02               	mullw	2
  4901  0010D0  0EAD               	movlw	low _hexpowers
  4902  0010D2  24F3               	addwf	243,w,c
  4903  0010D4  6EF6               	movwf	tblptrl,c
  4904  0010D6  0E3B               	movlw	high _hexpowers
  4905  0010D8  20F4               	addwfc	244,w,c
  4906  0010DA  6EF7               	movwf	tblptrh,c
  4907  0010DC                     	if	0	;There are less than 3 active tblptr bytes
  4908  0010DC                     	endif
  4909  0010DC  0009               	tblrd		*+
  4910  0010DE  CFF5 F006          	movff	tablat,___lwdiv@divisor
  4911  0010E2  000A               	tblrd		*-
  4912  0010E4  CFF5 F007          	movff	tablat,___lwdiv@divisor+1
  4913  0010E8  EC28  F00A         	call	___lwdiv	;wreg free
  4914  0010EC  5004               	movf	?___lwdiv^0,w,c
  4915  0010EE  0B0F               	andlw	15
  4916  0010F0  6E22               	movwf	printf@idx^0,c
  4917  0010F2                     
  4918                           ;E:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1528:     c = (fl
      +                          ag & 0x20 ? "0123456789ABCDEF" : "0123456789abcdef")[idx];
  4919  0010F2  BA2D               	btfsc	printf@flag^0,5,c
  4920  0010F4  EF7E  F008         	goto	u2431
  4921  0010F8  EF80  F008         	goto	u2430
  4922  0010FC                     u2431:
  4923  0010FC  EF86  F008         	goto	l3954
  4924  001100                     u2430:
  4925  001100  0E74               	movlw	low STR_86
  4926  001102  6E23               	movwf	_printf$1703^0,c
  4927  001104  0E3F               	movlw	high STR_86
  4928  001106  6E24               	movwf	(_printf$1703+1)^0,c
  4929  001108  EF8A  F008         	goto	l3956
  4930  00110C                     l3954:
  4931  00110C  0E63               	movlw	low STR_85
  4932  00110E  6E23               	movwf	_printf$1703^0,c
  4933  001110  0E3F               	movlw	high STR_85
  4934  001112  6E24               	movwf	(_printf$1703+1)^0,c
  4935  001114                     l3956:
  4936  001114  5022               	movf	printf@idx^0,w,c
  4937  001116  2423               	addwf	_printf$1703^0,w,c
  4938  001118  6E1E               	movwf	??_printf^0,c
  4939  00111A  0E00               	movlw	0
  4940  00111C  2024               	addwfc	(_printf$1703+1)^0,w,c
  4941  00111E  6E1F               	movwf	(??_printf+1)^0,c
  4942  001120  C01E  FFF6         	movff	??_printf,tblptrl
  4943  001124  C01F  FFF7         	movff	??_printf+1,tblptrh
  4944  001128                     	if	0	;tblptru may be non-zero
  4945  001128                     	endif
  4946  001128                     	if	0	;tblptru may be non-zero
  4947  001128                     	endif
  4948  001128  0008               	tblrd		*
  4949  00112A  CFF5 F031          	movff	tablat,printf@c
  4950                           
  4951                           ;E:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1534:    };E:\Pro
      +                          gram Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1536:     break;
  4952  00112E  EFB3  F008         	goto	l3962
  4953  001132                     l3960:
  4954  001132  502D               	movf	printf@flag^0,w,c
  4955  001134  0BC0               	andlw	192
  4956  001136  6E1E               	movwf	??_printf^0,c
  4957  001138  6A1F               	clrf	(??_printf+1)^0,c
  4958                           
  4959                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4960                           ; Switch size 1, requested type "simple"
  4961                           ; Number of cases is 1, Range of values is 0 to 0
  4962                           ; switch strategies available:
  4963                           ; Name         Instructions Cycles
  4964                           ; simple_byte            4     3 (average)
  4965                           ;	Chosen strategy is simple_byte
  4966  00113A  501F               	movf	(??_printf+1)^0,w,c
  4967  00113C  0A00               	xorlw	0	; case 0
  4968  00113E  B4D8               	btfsc	status,2,c
  4969  001140  EFA4  F008         	goto	l4774
  4970  001144  EFB3  F008         	goto	l3962
  4971  001148                     l4774:
  4972                           
  4973                           ; Switch size 1, requested type "simple"
  4974                           ; Number of cases is 3, Range of values is 0 to 192
  4975                           ; switch strategies available:
  4976                           ; Name         Instructions Cycles
  4977                           ; simple_byte           10     6 (average)
  4978                           ;	Chosen strategy is simple_byte
  4979  001148  501E               	movf	??_printf^0,w,c
  4980  00114A  0A00               	xorlw	0	; case 0
  4981  00114C  B4D8               	btfsc	status,2,c
  4982  00114E  EF3F  F008         	goto	l3946
  4983  001152  0A80               	xorlw	128	; case 128
  4984  001154  B4D8               	btfsc	status,2,c
  4985  001156  EF62  F008         	goto	l3948
  4986  00115A  0A40               	xorlw	64	; case 192
  4987  00115C  B4D8               	btfsc	status,2,c
  4988  00115E  EF3F  F008         	goto	l3946
  4989  001162  EFB3  F008         	goto	l3962
  4990  001166                     l3962:
  4991                           
  4992                           ;E:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1550:    (putch(c
      +                          ) );
  4993  001166  5031               	movf	printf@c^0,w,c
  4994  001168  EC93  F00C         	call	_putch
  4995  00116C                     l3964:
  4996                           
  4997                           ;E:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  4998  00116C  0630               	decf	printf@prec^0,f,c
  4999  00116E  2830               	incf	printf@prec^0,w,c
  5000  001170  A4D8               	btfss	status,2,c
  5001  001172  EFBD  F008         	goto	u2441
  5002  001176  EFBF  F008         	goto	u2440
  5003  00117A                     u2441:
  5004  00117A  EF99  F008         	goto	l3960
  5005  00117E                     u2440:
  5006  00117E                     l3966:
  5007                           
  5008                           ;E:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  5009  00117E  C010  FFF6         	movff	printf@f,tblptrl
  5010  001182  C011  FFF7         	movff	printf@f+1,tblptrh
  5011  001186  4A10               	infsnz	printf@f^0,f,c
  5012  001188  2A11               	incf	(printf@f+1)^0,f,c
  5013  00118A                     	if	0	;tblptru may be non-zero
  5014  00118A                     	endif
  5015  00118A                     	if	0	;tblptru may be non-zero
  5016  00118A                     	endif
  5017  00118A  0008               	tblrd		*
  5018  00118C  CFF5 F031          	movff	tablat,printf@c
  5019  001190  5031               	movf	printf@c^0,w,c
  5020  001192  A4D8               	btfss	status,2,c
  5021  001194  EFCE  F008         	goto	u2451
  5022  001198  EFD0  F008         	goto	u2450
  5023  00119C                     u2451:
  5024  00119C  EF3B  F005         	goto	l3754
  5025  0011A0                     u2450:
  5026  0011A0                     l689:
  5027  0011A0  0012               	return		;funcret
  5028  0011A2                     __end_of_printf:
  5029                           	callstack 0
  5030                           
  5031 ;; *************** function _putch *****************
  5032 ;; Defined at:
  5033 ;;		line 104 in file "mcc_generated_files/eusart1.c"
  5034 ;; Parameters:    Size  Location     Type
  5035 ;;  txData          1    wreg     unsigned char 
  5036 ;; Auto vars:     Size  Location     Type
  5037 ;;  txData          1    4[COMRAM] unsigned char 
  5038 ;; Return value:  Size  Location     Type
  5039 ;;                  1    wreg      void 
  5040 ;; Registers used:
  5041 ;;		wreg, status,2, cstack
  5042 ;; Tracked objects:
  5043 ;;		On entry : 0/0
  5044 ;;		On exit  : 0/0
  5045 ;;		Unchanged: 0/0
  5046 ;; Data sizes:     COMRAM   BANK0   BANK1
  5047 ;;      Params:         0       0       0
  5048 ;;      Locals:         1       0       0
  5049 ;;      Temps:          0       0       0
  5050 ;;      Totals:         1       0       0
  5051 ;;Total ram usage:        1 bytes
  5052 ;; Hardware stack levels used: 1
  5053 ;; Hardware stack levels required when called: 5
  5054 ;; This function calls:
  5055 ;;		_EUSART1_Write
  5056 ;; This function is called by:
  5057 ;;		_printf
  5058 ;; This function uses a non-reentrant model
  5059 ;;
  5060                           
  5061                           	psect	text7
  5062  001926                     __ptext7:
  5063                           	callstack 0
  5064  001926                     _putch:
  5065                           	callstack 24
  5066                           
  5067                           ;incstack = 0
  5068                           ;putch@txData stored from wreg
  5069  001926  6E05               	movwf	putch@txData^0,c
  5070  001928                     
  5071                           ;mcc_generated_files/eusart1.c: 104: void putch(char txData);mcc_generated_files/eusart1
      +                          .c: 105: {;mcc_generated_files/eusart1.c: 106:     EUSART1_Write(txData);
  5072  001928  5005               	movf	putch@txData^0,w,c
  5073  00192A  EC6B  F00C         	call	_EUSART1_Write
  5074  00192E  0012               	return		;funcret
  5075  001930                     __end_of_putch:
  5076                           	callstack 0
  5077                           
  5078 ;; *************** function _EUSART1_Write *****************
  5079 ;; Defined at:
  5080 ;;		line 90 in file "mcc_generated_files/eusart1.c"
  5081 ;; Parameters:    Size  Location     Type
  5082 ;;  txData          1    wreg     unsigned char 
  5083 ;; Auto vars:     Size  Location     Type
  5084 ;;  txData          1    3[COMRAM] unsigned char 
  5085 ;; Return value:  Size  Location     Type
  5086 ;;                  1    wreg      void 
  5087 ;; Registers used:
  5088 ;;		wreg
  5089 ;; Tracked objects:
  5090 ;;		On entry : 0/0
  5091 ;;		On exit  : 0/0
  5092 ;;		Unchanged: 0/0
  5093 ;; Data sizes:     COMRAM   BANK0   BANK1
  5094 ;;      Params:         0       0       0
  5095 ;;      Locals:         1       0       0
  5096 ;;      Temps:          0       0       0
  5097 ;;      Totals:         1       0       0
  5098 ;;Total ram usage:        1 bytes
  5099 ;; Hardware stack levels used: 1
  5100 ;; Hardware stack levels required when called: 4
  5101 ;; This function calls:
  5102 ;;		Nothing
  5103 ;; This function is called by:
  5104 ;;		_putch
  5105 ;; This function uses a non-reentrant model
  5106 ;;
  5107                           
  5108                           	psect	text8
  5109  0018D6                     __ptext8:
  5110                           	callstack 0
  5111  0018D6                     _EUSART1_Write:
  5112                           	callstack 24
  5113                           
  5114                           ;incstack = 0
  5115                           ;EUSART1_Write@txData stored from wreg
  5116  0018D6  6E04               	movwf	EUSART1_Write@txData^0,c
  5117  0018D8                     l139:
  5118                           
  5119                           ;mcc_generated_files/eusart1.c: 92:     while(0 == PIR1bits.TXIF)
  5120  0018D8  A89E               	btfss	158,4,c	;volatile
  5121  0018DA  EF71  F00C         	goto	u1961
  5122  0018DE  EF73  F00C         	goto	u1960
  5123  0018E2                     u1961:
  5124  0018E2  EF6C  F00C         	goto	l139
  5125  0018E6                     u1960:
  5126  0018E6                     
  5127                           ;mcc_generated_files/eusart1.c: 96:     TXREG = txData;
  5128  0018E6  C004  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  5129  0018EA  0012               	return		;funcret
  5130  0018EC                     __end_of_EUSART1_Write:
  5131                           	callstack 0
  5132                           
  5133 ;; *************** function _isdigit *****************
  5134 ;; Defined at:
  5135 ;;		line 8 in file "E:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\isdigit.c"
  5136 ;; Parameters:    Size  Location     Type
  5137 ;;  c               1    wreg     unsigned char 
  5138 ;; Auto vars:     Size  Location     Type
  5139 ;;  c               1    5[COMRAM] unsigned char 
  5140 ;; Return value:  Size  Location     Type
  5141 ;;		None               void
  5142 ;; Registers used:
  5143 ;;		wreg, status,2, status,0
  5144 ;; Tracked objects:
  5145 ;;		On entry : 0/0
  5146 ;;		On exit  : 0/0
  5147 ;;		Unchanged: 0/0
  5148 ;; Data sizes:     COMRAM   BANK0   BANK1
  5149 ;;      Params:         0       0       0
  5150 ;;      Locals:         2       0       0
  5151 ;;      Temps:          1       0       0
  5152 ;;      Totals:         3       0       0
  5153 ;;Total ram usage:        3 bytes
  5154 ;; Hardware stack levels used: 1
  5155 ;; Hardware stack levels required when called: 4
  5156 ;; This function calls:
  5157 ;;		Nothing
  5158 ;; This function is called by:
  5159 ;;		_printf
  5160 ;; This function uses a non-reentrant model
  5161 ;;
  5162                           
  5163                           	psect	text9
  5164  001752                     __ptext9:
  5165                           	callstack 0
  5166  001752                     _isdigit:
  5167                           	callstack 25
  5168                           
  5169                           ;incstack = 0
  5170                           ;isdigit@c stored from wreg
  5171  001752  6E06               	movwf	isdigit@c^0,c
  5172  001754  0E00               	movlw	0
  5173  001756  6E05               	movwf	_isdigit$2143^0,c
  5174  001758  0E3A               	movlw	58
  5175  00175A  6006               	cpfslt	isdigit@c^0,c
  5176  00175C  EFB2  F00B         	goto	u1991
  5177  001760  EFB4  F00B         	goto	u1990
  5178  001764                     u1991:
  5179  001764  EFBE  F00B         	goto	l3698
  5180  001768                     u1990:
  5181  001768  0E2F               	movlw	47
  5182  00176A  6406               	cpfsgt	isdigit@c^0,c
  5183  00176C  EFBA  F00B         	goto	u2001
  5184  001770  EFBC  F00B         	goto	u2000
  5185  001774                     u2001:
  5186  001774  EFBE  F00B         	goto	l3698
  5187  001778                     u2000:
  5188  001778  0E01               	movlw	1
  5189  00177A  6E05               	movwf	_isdigit$2143^0,c
  5190  00177C                     l3698:
  5191  00177C  C005  F004         	movff	_isdigit$2143,??_isdigit
  5192  001780  3004               	rrcf	??_isdigit^0,w,c
  5193  001782  0012               	return		;funcret
  5194  001784                     __end_of_isdigit:
  5195                           	callstack 0
  5196                           
  5197 ;; *************** function ___wmul *****************
  5198 ;; Defined at:
  5199 ;;		line 15 in file "E:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\Umul16.c"
  5200 ;; Parameters:    Size  Location     Type
  5201 ;;  multiplier      2    3[COMRAM] unsigned int 
  5202 ;;  multiplicand    2    5[COMRAM] unsigned int 
  5203 ;; Auto vars:     Size  Location     Type
  5204 ;;  product         2    7[COMRAM] unsigned int 
  5205 ;; Return value:  Size  Location     Type
  5206 ;;                  2    3[COMRAM] unsigned int 
  5207 ;; Registers used:
  5208 ;;		wreg, status,2, status,0, prodl, prodh
  5209 ;; Tracked objects:
  5210 ;;		On entry : 0/0
  5211 ;;		On exit  : 0/0
  5212 ;;		Unchanged: 0/0
  5213 ;; Data sizes:     COMRAM   BANK0   BANK1
  5214 ;;      Params:         4       0       0
  5215 ;;      Locals:         2       0       0
  5216 ;;      Temps:          0       0       0
  5217 ;;      Totals:         6       0       0
  5218 ;;Total ram usage:        6 bytes
  5219 ;; Hardware stack levels used: 1
  5220 ;; Hardware stack levels required when called: 4
  5221 ;; This function calls:
  5222 ;;		Nothing
  5223 ;; This function is called by:
  5224 ;;		_printf
  5225 ;; This function uses a non-reentrant model
  5226 ;;
  5227                           
  5228                           	psect	text10
  5229  0017B4                     __ptext10:
  5230                           	callstack 0
  5231  0017B4                     ___wmul:
  5232                           	callstack 25
  5233  0017B4  5004               	movf	___wmul@multiplier^0,w,c
  5234  0017B6  0206               	mulwf	___wmul@multiplicand^0,c
  5235  0017B8  CFF3 F008          	movff	prodl,___wmul@product
  5236  0017BC  CFF4 F009          	movff	prodh,___wmul@product+1
  5237  0017C0  5004               	movf	___wmul@multiplier^0,w,c
  5238  0017C2  0207               	mulwf	(___wmul@multiplicand+1)^0,c
  5239  0017C4  50F3               	movf	243,w,c
  5240  0017C6  2609               	addwf	(___wmul@product+1)^0,f,c
  5241  0017C8  5005               	movf	(___wmul@multiplier+1)^0,w,c
  5242  0017CA  0206               	mulwf	___wmul@multiplicand^0,c
  5243  0017CC  50F3               	movf	243,w,c
  5244  0017CE  2609               	addwf	(___wmul@product+1)^0,f,c
  5245  0017D0  C008  F004         	movff	___wmul@product,?___wmul
  5246  0017D4  C009  F005         	movff	___wmul@product+1,?___wmul+1
  5247  0017D8  0012               	return		;funcret
  5248  0017DA                     __end_of___wmul:
  5249                           	callstack 0
  5250                           
  5251 ;; *************** function ___lwmod *****************
  5252 ;; Defined at:
  5253 ;;		line 7 in file "E:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\lwmod.c"
  5254 ;; Parameters:    Size  Location     Type
  5255 ;;  dividend        2   10[COMRAM] unsigned int 
  5256 ;;  divisor         2   12[COMRAM] unsigned int 
  5257 ;; Auto vars:     Size  Location     Type
  5258 ;;  counter         1   14[COMRAM] unsigned char 
  5259 ;; Return value:  Size  Location     Type
  5260 ;;                  2   10[COMRAM] unsigned int 
  5261 ;; Registers used:
  5262 ;;		wreg, status,2, status,0
  5263 ;; Tracked objects:
  5264 ;;		On entry : 0/0
  5265 ;;		On exit  : 0/0
  5266 ;;		Unchanged: 0/0
  5267 ;; Data sizes:     COMRAM   BANK0   BANK1
  5268 ;;      Params:         4       0       0
  5269 ;;      Locals:         1       0       0
  5270 ;;      Temps:          0       0       0
  5271 ;;      Totals:         5       0       0
  5272 ;;Total ram usage:        5 bytes
  5273 ;; Hardware stack levels used: 1
  5274 ;; Hardware stack levels required when called: 4
  5275 ;; This function calls:
  5276 ;;		Nothing
  5277 ;; This function is called by:
  5278 ;;		_printf
  5279 ;; This function uses a non-reentrant model
  5280 ;;
  5281                           
  5282                           	psect	text11
  5283  0014C4                     __ptext11:
  5284                           	callstack 0
  5285  0014C4                     ___lwmod:
  5286                           	callstack 25
  5287  0014C4  500D               	movf	___lwmod@divisor^0,w,c
  5288  0014C6  100E               	iorwf	(___lwmod@divisor+1)^0,w,c
  5289  0014C8  B4D8               	btfsc	status,2,c
  5290  0014CA  EF69  F00A         	goto	u2041
  5291  0014CE  EF6B  F00A         	goto	u2040
  5292  0014D2                     u2041:
  5293  0014D2  EF8F  F00A         	goto	l1181
  5294  0014D6                     u2040:
  5295  0014D6  0E01               	movlw	1
  5296  0014D8  6E0F               	movwf	___lwmod@counter^0,c
  5297  0014DA  EF73  F00A         	goto	l3736
  5298  0014DE                     l3734:
  5299  0014DE  90D8               	bcf	status,0,c
  5300  0014E0  360D               	rlcf	___lwmod@divisor^0,f,c
  5301  0014E2  360E               	rlcf	(___lwmod@divisor+1)^0,f,c
  5302  0014E4  2A0F               	incf	___lwmod@counter^0,f,c
  5303  0014E6                     l3736:
  5304  0014E6  AE0E               	btfss	(___lwmod@divisor+1)^0,7,c
  5305  0014E8  EF78  F00A         	goto	u2051
  5306  0014EC  EF7A  F00A         	goto	u2050
  5307  0014F0                     u2051:
  5308  0014F0  EF6F  F00A         	goto	l3734
  5309  0014F4                     u2050:
  5310  0014F4                     l3738:
  5311  0014F4  500D               	movf	___lwmod@divisor^0,w,c
  5312  0014F6  5C0B               	subwf	___lwmod@dividend^0,w,c
  5313  0014F8  500E               	movf	(___lwmod@divisor+1)^0,w,c
  5314  0014FA  580C               	subwfb	(___lwmod@dividend+1)^0,w,c
  5315  0014FC  A0D8               	btfss	status,0,c
  5316  0014FE  EF83  F00A         	goto	u2061
  5317  001502  EF85  F00A         	goto	u2060
  5318  001506                     u2061:
  5319  001506  EF89  F00A         	goto	l3742
  5320  00150A                     u2060:
  5321  00150A  500D               	movf	___lwmod@divisor^0,w,c
  5322  00150C  5E0B               	subwf	___lwmod@dividend^0,f,c
  5323  00150E  500E               	movf	(___lwmod@divisor+1)^0,w,c
  5324  001510  5A0C               	subwfb	(___lwmod@dividend+1)^0,f,c
  5325  001512                     l3742:
  5326  001512  90D8               	bcf	status,0,c
  5327  001514  320E               	rrcf	(___lwmod@divisor+1)^0,f,c
  5328  001516  320D               	rrcf	___lwmod@divisor^0,f,c
  5329  001518  2E0F               	decfsz	___lwmod@counter^0,f,c
  5330  00151A  EF7A  F00A         	goto	l3738
  5331  00151E                     l1181:
  5332  00151E  C00B  F00B         	movff	___lwmod@dividend,?___lwmod
  5333  001522  C00C  F00C         	movff	___lwmod@dividend+1,?___lwmod+1
  5334  001526  0012               	return		;funcret
  5335  001528                     __end_of___lwmod:
  5336                           	callstack 0
  5337                           
  5338 ;; *************** function ___lwdiv *****************
  5339 ;; Defined at:
  5340 ;;		line 7 in file "E:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\lwdiv.c"
  5341 ;; Parameters:    Size  Location     Type
  5342 ;;  dividend        2    3[COMRAM] unsigned int 
  5343 ;;  divisor         2    5[COMRAM] unsigned int 
  5344 ;; Auto vars:     Size  Location     Type
  5345 ;;  quotient        2    8[COMRAM] unsigned int 
  5346 ;;  counter         1    7[COMRAM] unsigned char 
  5347 ;; Return value:  Size  Location     Type
  5348 ;;                  2    3[COMRAM] unsigned int 
  5349 ;; Registers used:
  5350 ;;		wreg, status,2, status,0
  5351 ;; Tracked objects:
  5352 ;;		On entry : 0/0
  5353 ;;		On exit  : 0/0
  5354 ;;		Unchanged: 0/0
  5355 ;; Data sizes:     COMRAM   BANK0   BANK1
  5356 ;;      Params:         4       0       0
  5357 ;;      Locals:         3       0       0
  5358 ;;      Temps:          0       0       0
  5359 ;;      Totals:         7       0       0
  5360 ;;Total ram usage:        7 bytes
  5361 ;; Hardware stack levels used: 1
  5362 ;; Hardware stack levels required when called: 4
  5363 ;; This function calls:
  5364 ;;		Nothing
  5365 ;; This function is called by:
  5366 ;;		_printf
  5367 ;; This function uses a non-reentrant model
  5368 ;;
  5369                           
  5370                           	psect	text12
  5371  001450                     __ptext12:
  5372                           	callstack 0
  5373  001450                     ___lwdiv:
  5374                           	callstack 25
  5375  001450  0E00               	movlw	0
  5376  001452  6E0A               	movwf	(___lwdiv@quotient+1)^0,c
  5377  001454  0E00               	movlw	0
  5378  001456  6E09               	movwf	___lwdiv@quotient^0,c
  5379  001458  5006               	movf	___lwdiv@divisor^0,w,c
  5380  00145A  1007               	iorwf	(___lwdiv@divisor+1)^0,w,c
  5381  00145C  B4D8               	btfsc	status,2,c
  5382  00145E  EF33  F00A         	goto	u2011
  5383  001462  EF35  F00A         	goto	u2010
  5384  001466                     u2011:
  5385  001466  EF5D  F00A         	goto	l1171
  5386  00146A                     u2010:
  5387  00146A  0E01               	movlw	1
  5388  00146C  6E08               	movwf	___lwdiv@counter^0,c
  5389  00146E  EF3D  F00A         	goto	l3716
  5390  001472                     l3714:
  5391  001472  90D8               	bcf	status,0,c
  5392  001474  3606               	rlcf	___lwdiv@divisor^0,f,c
  5393  001476  3607               	rlcf	(___lwdiv@divisor+1)^0,f,c
  5394  001478  2A08               	incf	___lwdiv@counter^0,f,c
  5395  00147A                     l3716:
  5396  00147A  AE07               	btfss	(___lwdiv@divisor+1)^0,7,c
  5397  00147C  EF42  F00A         	goto	u2021
  5398  001480  EF44  F00A         	goto	u2020
  5399  001484                     u2021:
  5400  001484  EF39  F00A         	goto	l3714
  5401  001488                     u2020:
  5402  001488                     l3718:
  5403  001488  90D8               	bcf	status,0,c
  5404  00148A  3609               	rlcf	___lwdiv@quotient^0,f,c
  5405  00148C  360A               	rlcf	(___lwdiv@quotient+1)^0,f,c
  5406  00148E  5006               	movf	___lwdiv@divisor^0,w,c
  5407  001490  5C04               	subwf	___lwdiv@dividend^0,w,c
  5408  001492  5007               	movf	(___lwdiv@divisor+1)^0,w,c
  5409  001494  5805               	subwfb	(___lwdiv@dividend+1)^0,w,c
  5410  001496  A0D8               	btfss	status,0,c
  5411  001498  EF50  F00A         	goto	u2031
  5412  00149C  EF52  F00A         	goto	u2030
  5413  0014A0                     u2031:
  5414  0014A0  EF57  F00A         	goto	l3726
  5415  0014A4                     u2030:
  5416  0014A4  5006               	movf	___lwdiv@divisor^0,w,c
  5417  0014A6  5E04               	subwf	___lwdiv@dividend^0,f,c
  5418  0014A8  5007               	movf	(___lwdiv@divisor+1)^0,w,c
  5419  0014AA  5A05               	subwfb	(___lwdiv@dividend+1)^0,f,c
  5420  0014AC  8009               	bsf	___lwdiv@quotient^0,0,c
  5421  0014AE                     l3726:
  5422  0014AE  90D8               	bcf	status,0,c
  5423  0014B0  3207               	rrcf	(___lwdiv@divisor+1)^0,f,c
  5424  0014B2  3206               	rrcf	___lwdiv@divisor^0,f,c
  5425  0014B4  2E08               	decfsz	___lwdiv@counter^0,f,c
  5426  0014B6  EF44  F00A         	goto	l3718
  5427  0014BA                     l1171:
  5428  0014BA  C009  F004         	movff	___lwdiv@quotient,?___lwdiv
  5429  0014BE  C00A  F005         	movff	___lwdiv@quotient+1,?___lwdiv+1
  5430  0014C2  0012               	return		;funcret
  5431  0014C4                     __end_of___lwdiv:
  5432                           	callstack 0
  5433                           
  5434 ;; *************** function _SPI1_Open *****************
  5435 ;; Defined at:
  5436 ;;		line 45 in file "mcc_generated_files/spi1.c"
  5437 ;; Parameters:    Size  Location     Type
  5438 ;;  spi1UniqueCo    1    wreg     enum E93
  5439 ;; Auto vars:     Size  Location     Type
  5440 ;;  spi1UniqueCo    1    0[COMRAM] enum E93
  5441 ;; Return value:  Size  Location     Type
  5442 ;;                  1    wreg      _Bool 
  5443 ;; Registers used:
  5444 ;;		wreg
  5445 ;; Tracked objects:
  5446 ;;		On entry : 0/0
  5447 ;;		On exit  : 0/0
  5448 ;;		Unchanged: 0/0
  5449 ;; Data sizes:     COMRAM   BANK0   BANK1
  5450 ;;      Params:         0       0       0
  5451 ;;      Locals:         0       0       0
  5452 ;;      Temps:          0       0       0
  5453 ;;      Totals:         0       0       0
  5454 ;;Total ram usage:        0 bytes
  5455 ;; Hardware stack levels used: 1
  5456 ;; Hardware stack levels required when called: 4
  5457 ;; This function calls:
  5458 ;;		Nothing
  5459 ;; This function is called by:
  5460 ;;		_main
  5461 ;;		_nrf24_rf_init
  5462 ;;		_MASTER0_open
  5463 ;; This function uses a non-reentrant model
  5464 ;;
  5465                           
  5466                           	psect	text13
  5467  001884                     __ptext13:
  5468                           	callstack 0
  5469  001884                     _SPI1_Open:
  5470                           	callstack 25
  5471  001884                     
  5472                           ;mcc_generated_files/spi1.c: 45: _Bool SPI1_Open(spi1_modes_t spi1UniqueConfiguration);m
      +                          cc_generated_files/spi1.c: 46: {;mcc_generated_files/spi1.c: 47:     if(!SSPCON1bits.SSP
      +                          EN)
  5473  001884  BAC6               	btfsc	198,5,c	;volatile
  5474  001886  EF47  F00C         	goto	u2521
  5475  00188A  EF49  F00C         	goto	u2520
  5476  00188E                     u2521:
  5477  00188E  EF4F  F00C         	goto	l4042
  5478  001892                     u2520:
  5479  001892                     
  5480                           ;mcc_generated_files/spi1.c: 48:     {;mcc_generated_files/spi1.c: 49:         PIR1bits.
      +                          CCP1IF = 0;
  5481  001892  949E               	bcf	158,2,c	;volatile
  5482                           
  5483                           ;mcc_generated_files/spi1.c: 50:         PIR2bits.BCLIF = 0;
  5484  001894  96A1               	bcf	161,3,c	;volatile
  5485                           
  5486                           ;mcc_generated_files/spi1.c: 51:         SSPCON1bits.SSPEN = 1;
  5487  001896  8AC6               	bsf	198,5,c	;volatile
  5488  001898                     
  5489                           ;mcc_generated_files/spi1.c: 52:         return 1;
  5490  001898  0E01               	movlw	1
  5491  00189A  EF50  F00C         	goto	l197
  5492  00189E                     l4042:
  5493                           
  5494                           ;mcc_generated_files/spi1.c: 54:     return 0;
  5495  00189E  0E00               	movlw	0
  5496  0018A0                     l197:
  5497  0018A0  0012               	return		;funcret
  5498  0018A2                     __end_of_SPI1_Open:
  5499                           	callstack 0
  5500                           
  5501 ;; *************** function _nrf24_read_rf_data *****************
  5502 ;; Defined at:
  5503 ;;		line 177 in file "nrf24_lib.c"
  5504 ;; Parameters:    Size  Location     Type
  5505 ;;  buffer          2   10[COMRAM] PTR unsigned char 
  5506 ;;		 -> bufferRX(32), 
  5507 ;; Auto vars:     Size  Location     Type
  5508 ;;		None
  5509 ;; Return value:  Size  Location     Type
  5510 ;;                  1    wreg      void 
  5511 ;; Registers used:
  5512 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5513 ;; Tracked objects:
  5514 ;;		On entry : 0/0
  5515 ;;		On exit  : 0/0
  5516 ;;		Unchanged: 0/0
  5517 ;; Data sizes:     COMRAM   BANK0   BANK1
  5518 ;;      Params:         2       0       0
  5519 ;;      Locals:         0       0       0
  5520 ;;      Temps:          0       0       0
  5521 ;;      Totals:         2       0       0
  5522 ;;Total ram usage:        2 bytes
  5523 ;; Hardware stack levels used: 1
  5524 ;; Hardware stack levels required when called: 7
  5525 ;; This function calls:
  5526 ;;		_nrf24_flush_tx_rx
  5527 ;;		_nrf24_read_buff
  5528 ;;		_nrf24_write_register
  5529 ;; This function is called by:
  5530 ;;		_main
  5531 ;; This function uses a non-reentrant model
  5532 ;;
  5533                           
  5534                           	psect	text14
  5535  001822                     __ptext14:
  5536                           	callstack 0
  5537  001822                     _nrf24_read_rf_data:
  5538                           	callstack 23
  5539  001822                     
  5540                           ;nrf24_lib.c: 178:     nrf24_read_buff(0x61, buffer, 32);
  5541  001822  C00B  F006         	movff	nrf24_read_rf_data@buffer,nrf24_read_buff@buffer
  5542  001826  C00C  F007         	movff	nrf24_read_rf_data@buffer+1,nrf24_read_buff@buffer+1
  5543  00182A  0E20               	movlw	32
  5544  00182C  6E08               	movwf	nrf24_read_buff@bytes^0,c
  5545  00182E  0E61               	movlw	97
  5546  001830  EC0C  F00B         	call	_nrf24_read_buff
  5547  001834                     
  5548                           ;nrf24_lib.c: 179:     nrf24_write_register(0x07, 0x70);
  5549  001834  0E70               	movlw	112
  5550  001836  6E06               	movwf	nrf24_write_register@value^0,c
  5551  001838  0E07               	movlw	7
  5552  00183A  ECE5  F009         	call	_nrf24_write_register
  5553  00183E                     
  5554                           ;nrf24_lib.c: 180:     nrf24_flush_tx_rx();
  5555  00183E  ECE5  F00A         	call	_nrf24_flush_tx_rx	;wreg free
  5556  001842  0012               	return		;funcret
  5557  001844                     __end_of_nrf24_read_rf_data:
  5558                           	callstack 0
  5559                           
  5560 ;; *************** function _nrf24_read_buff *****************
  5561 ;; Defined at:
  5562 ;;		line 50 in file "nrf24_lib.c"
  5563 ;; Parameters:    Size  Location     Type
  5564 ;;  mnemonic_add    1    wreg     unsigned char 
  5565 ;;  buffer          2    5[COMRAM] PTR unsigned char 
  5566 ;;		 -> nrf24_printf_rf_config@buf(5), bufferRX(32), 
  5567 ;;  bytes           1    7[COMRAM] unsigned char 
  5568 ;; Auto vars:     Size  Location     Type
  5569 ;;  mnemonic_add    1    8[COMRAM] unsigned char 
  5570 ;;  i               1    9[COMRAM] unsigned char 
  5571 ;; Return value:  Size  Location     Type
  5572 ;;                  1    wreg      void 
  5573 ;; Registers used:
  5574 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5575 ;; Tracked objects:
  5576 ;;		On entry : 0/0
  5577 ;;		On exit  : 0/0
  5578 ;;		Unchanged: 0/0
  5579 ;; Data sizes:     COMRAM   BANK0   BANK1
  5580 ;;      Params:         3       0       0
  5581 ;;      Locals:         2       0       0
  5582 ;;      Temps:          0       0       0
  5583 ;;      Totals:         5       0       0
  5584 ;;Total ram usage:        5 bytes
  5585 ;; Hardware stack levels used: 1
  5586 ;; Hardware stack levels required when called: 5
  5587 ;; This function calls:
  5588 ;;		_SPI1_ExchangeByte
  5589 ;; This function is called by:
  5590 ;;		_nrf24_read_rf_data
  5591 ;;		_nrf24_printf_rf_config
  5592 ;; This function uses a non-reentrant model
  5593 ;;
  5594                           
  5595                           	psect	text15
  5596  001618                     __ptext15:
  5597                           	callstack 0
  5598  001618                     _nrf24_read_buff:
  5599                           	callstack 23
  5600                           
  5601                           ;incstack = 0
  5602                           ;nrf24_read_buff@mnemonic_addr stored from wreg
  5603  001618  6E09               	movwf	nrf24_read_buff@mnemonic_addr^0,c
  5604  00161A  988B               	bcf	139,4,c	;volatile
  5605  00161C                     
  5606                           ;nrf24_lib.c: 53:     SPI1_ExchangeByte(0x00 | mnemonic_addr);
  5607  00161C  5009               	movf	nrf24_read_buff@mnemonic_addr^0,w,c
  5608  00161E  EC72  F00B         	call	_SPI1_ExchangeByte
  5609  001622                     
  5610                           ;nrf24_lib.c: 54:     for (i = 0; i < bytes; i++) {
  5611  001622  0E00               	movlw	0
  5612  001624  6E0A               	movwf	nrf24_read_buff@i^0,c
  5613  001626  EF20  F00B         	goto	l4028
  5614  00162A                     l4022:
  5615                           
  5616                           ;nrf24_lib.c: 55:         *buffer = SPI1_ExchangeByte(0xFF);
  5617  00162A  0EFF               	movlw	255
  5618  00162C  EC72  F00B         	call	_SPI1_ExchangeByte
  5619  001630  C006  FFD9         	movff	nrf24_read_buff@buffer,fsr2l
  5620  001634  C007  FFDA         	movff	nrf24_read_buff@buffer+1,fsr2h
  5621  001638  6EDF               	movwf	indf2,c
  5622  00163A                     
  5623                           ;nrf24_lib.c: 56:         buffer++;
  5624  00163A  4A06               	infsnz	nrf24_read_buff@buffer^0,f,c
  5625  00163C  2A07               	incf	(nrf24_read_buff@buffer+1)^0,f,c
  5626  00163E                     
  5627                           ;nrf24_lib.c: 57:     }
  5628  00163E  2A0A               	incf	nrf24_read_buff@i^0,f,c
  5629  001640                     l4028:
  5630  001640  5008               	movf	nrf24_read_buff@bytes^0,w,c
  5631  001642  5C0A               	subwf	nrf24_read_buff@i^0,w,c
  5632  001644  A0D8               	btfss	status,0,c
  5633  001646  EF27  F00B         	goto	u2511
  5634  00164A  EF29  F00B         	goto	u2510
  5635  00164E                     u2511:
  5636  00164E  EF15  F00B         	goto	l4022
  5637  001652                     u2510:
  5638  001652                     
  5639                           ;nrf24_lib.c: 58:     *buffer = (unsigned char )(0);
  5640  001652  C006  FFD9         	movff	nrf24_read_buff@buffer,fsr2l
  5641  001656  C007  FFDA         	movff	nrf24_read_buff@buffer+1,fsr2h
  5642  00165A  0E00               	movlw	0
  5643  00165C  6EDF               	movwf	indf2,c
  5644  00165E  888B               	bsf	139,4,c	;volatile
  5645  001660  0012               	return		;funcret
  5646  001662                     __end_of_nrf24_read_buff:
  5647                           	callstack 0
  5648                           
  5649 ;; *************** function _nrf24_flush_tx_rx *****************
  5650 ;; Defined at:
  5651 ;;		line 196 in file "nrf24_lib.c"
  5652 ;; Parameters:    Size  Location     Type
  5653 ;;		None
  5654 ;; Auto vars:     Size  Location     Type
  5655 ;;		None
  5656 ;; Return value:  Size  Location     Type
  5657 ;;                  1    wreg      void 
  5658 ;; Registers used:
  5659 ;;		wreg, status,2, status,0, cstack
  5660 ;; Tracked objects:
  5661 ;;		On entry : 0/0
  5662 ;;		On exit  : 0/0
  5663 ;;		Unchanged: 0/0
  5664 ;; Data sizes:     COMRAM   BANK0   BANK1
  5665 ;;      Params:         0       0       0
  5666 ;;      Locals:         0       0       0
  5667 ;;      Temps:          1       0       0
  5668 ;;      Totals:         1       0       0
  5669 ;;Total ram usage:        1 bytes
  5670 ;; Hardware stack levels used: 1
  5671 ;; Hardware stack levels required when called: 6
  5672 ;; This function calls:
  5673 ;;		_SPI1_ExchangeByte
  5674 ;;		_nrf24_write_register
  5675 ;; This function is called by:
  5676 ;;		_nrf24_read_rf_data
  5677 ;; This function uses a non-reentrant model
  5678 ;;
  5679                           
  5680                           	psect	text16
  5681  0015CA                     __ptext16:
  5682                           	callstack 0
  5683  0015CA                     _nrf24_flush_tx_rx:
  5684                           	callstack 23
  5685  0015CA  988B               	bcf	139,4,c	;volatile
  5686  0015CC                     
  5687                           ;nrf24_lib.c: 198:     nrf24_write_register(0x07, 0x70);
  5688  0015CC  0E70               	movlw	112
  5689  0015CE  6E06               	movwf	nrf24_write_register@value^0,c
  5690  0015D0  0E07               	movlw	7
  5691  0015D2  ECE5  F009         	call	_nrf24_write_register
  5692  0015D6                     
  5693                           ;nrf24_lib.c: 199:     _delay((unsigned long)((10)*(16000000/4000.0)));
  5694  0015D6  0E34               	movlw	52
  5695  0015D8  6E08               	movwf	??_nrf24_flush_tx_rx^0,c
  5696  0015DA  0EF2               	movlw	242
  5697  0015DC                     u2897:
  5698  0015DC  2EE8               	decfsz	wreg,f,c
  5699  0015DE  D7FE               	bra	u2897
  5700  0015E0  2E08               	decfsz	??_nrf24_flush_tx_rx^0,f,c
  5701  0015E2  D7FC               	bra	u2897
  5702  0015E4  888B               	bsf	139,4,c	;volatile
  5703  0015E6  988B               	bcf	139,4,c	;volatile
  5704  0015E8                     
  5705                           ;nrf24_lib.c: 203:     SPI1_ExchangeByte(0xE1);
  5706  0015E8  0EE1               	movlw	225
  5707  0015EA  EC72  F00B         	call	_SPI1_ExchangeByte
  5708  0015EE                     
  5709                           ;nrf24_lib.c: 204:     _delay((unsigned long)((10)*(16000000/4000.0)));
  5710  0015EE  0E34               	movlw	52
  5711  0015F0  6E08               	movwf	??_nrf24_flush_tx_rx^0,c
  5712  0015F2  0EF2               	movlw	242
  5713  0015F4                     u2907:
  5714  0015F4  2EE8               	decfsz	wreg,f,c
  5715  0015F6  D7FE               	bra	u2907
  5716  0015F8  2E08               	decfsz	??_nrf24_flush_tx_rx^0,f,c
  5717  0015FA  D7FC               	bra	u2907
  5718  0015FC  888B               	bsf	139,4,c	;volatile
  5719  0015FE  988B               	bcf	139,4,c	;volatile
  5720  001600                     
  5721                           ;nrf24_lib.c: 208:     SPI1_ExchangeByte(0xE2);
  5722  001600  0EE2               	movlw	226
  5723  001602  EC72  F00B         	call	_SPI1_ExchangeByte
  5724  001606                     
  5725                           ;nrf24_lib.c: 209:     _delay((unsigned long)((10)*(16000000/4000.0)));
  5726  001606  0E34               	movlw	52
  5727  001608  6E08               	movwf	??_nrf24_flush_tx_rx^0,c
  5728  00160A  0EF2               	movlw	242
  5729  00160C                     u2917:
  5730  00160C  2EE8               	decfsz	wreg,f,c
  5731  00160E  D7FE               	bra	u2917
  5732  001610  2E08               	decfsz	??_nrf24_flush_tx_rx^0,f,c
  5733  001612  D7FC               	bra	u2917
  5734  001614  888B               	bsf	139,4,c	;volatile
  5735  001616  0012               	return		;funcret
  5736  001618                     __end_of_nrf24_flush_tx_rx:
  5737                           	callstack 0
  5738                           
  5739 ;; *************** function _nrf24_write_register *****************
  5740 ;; Defined at:
  5741 ;;		line 8 in file "nrf24_lib.c"
  5742 ;; Parameters:    Size  Location     Type
  5743 ;;  mnemonic_add    1    wreg     unsigned char 
  5744 ;;  value           1    5[COMRAM] unsigned char 
  5745 ;; Auto vars:     Size  Location     Type
  5746 ;;  mnemonic_add    1    6[COMRAM] unsigned char 
  5747 ;; Return value:  Size  Location     Type
  5748 ;;                  1    wreg      void 
  5749 ;; Registers used:
  5750 ;;		wreg, status,2, status,0, cstack
  5751 ;; Tracked objects:
  5752 ;;		On entry : 0/0
  5753 ;;		On exit  : 0/0
  5754 ;;		Unchanged: 0/0
  5755 ;; Data sizes:     COMRAM   BANK0   BANK1
  5756 ;;      Params:         1       0       0
  5757 ;;      Locals:         1       0       0
  5758 ;;      Temps:          0       0       0
  5759 ;;      Totals:         2       0       0
  5760 ;;Total ram usage:        2 bytes
  5761 ;; Hardware stack levels used: 1
  5762 ;; Hardware stack levels required when called: 5
  5763 ;; This function calls:
  5764 ;;		_SPI1_ExchangeByte
  5765 ;; This function is called by:
  5766 ;;		_nrf24_rf_init
  5767 ;;		_nrf24_set_rf_mode
  5768 ;;		_nrf24_read_rf_data
  5769 ;;		_nrf24_set_channel_frq
  5770 ;;		_nrf24_flush_tx_rx
  5771 ;;		_nrf24_standby_I
  5772 ;; This function uses a non-reentrant model
  5773 ;;
  5774                           
  5775                           	psect	text17
  5776  0013CA                     __ptext17:
  5777                           	callstack 0
  5778  0013CA                     _nrf24_write_register:
  5779                           	callstack 24
  5780                           
  5781                           ;incstack = 0
  5782                           ;nrf24_write_register@mnemonic_addr stored from wreg
  5783  0013CA  6E07               	movwf	nrf24_write_register@mnemonic_addr^0,c
  5784  0013CC  988B               	bcf	139,4,c	;volatile
  5785  0013CE                     
  5786                           ;nrf24_lib.c: 10:     if (mnemonic_addr < 0x20) {
  5787  0013CE  0E20               	movlw	32
  5788  0013D0  6007               	cpfslt	nrf24_write_register@mnemonic_addr^0,c
  5789  0013D2  EFED  F009         	goto	u2461
  5790  0013D6  EFEF  F009         	goto	u2460
  5791  0013DA                     u2461:
  5792  0013DA  EFF9  F009         	goto	l3992
  5793  0013DE                     u2460:
  5794  0013DE                     
  5795                           ;nrf24_lib.c: 12:   SPI1_ExchangeByte(0x20 | (mnemonic_addr & 0x1F));
  5796  0013DE  5007               	movf	nrf24_write_register@mnemonic_addr^0,w,c
  5797  0013E0  0B1F               	andlw	31
  5798  0013E2  0920               	iorlw	32
  5799  0013E4  EC72  F00B         	call	_SPI1_ExchangeByte
  5800  0013E8                     
  5801                           ;nrf24_lib.c: 13:   SPI1_ExchangeByte(value);
  5802  0013E8  5006               	movf	nrf24_write_register@value^0,w,c
  5803  0013EA  EC72  F00B         	call	_SPI1_ExchangeByte
  5804                           
  5805                           ;nrf24_lib.c: 14:  } else {
  5806  0013EE  EF22  F00A         	goto	l4004
  5807  0013F2                     l3992:
  5808                           
  5809                           ;nrf24_lib.c: 16:   SPI1_ExchangeByte(mnemonic_addr);
  5810  0013F2  5007               	movf	nrf24_write_register@mnemonic_addr^0,w,c
  5811  0013F4  EC72  F00B         	call	_SPI1_ExchangeByte
  5812  0013F8                     
  5813                           ;nrf24_lib.c: 17:   if ((mnemonic_addr != 0xE1) && (mnemonic_addr != 0xE2) && (mnemonic_
      +                          addr != 0xE3) && (mnemonic_addr != 0xFF)) {
  5814  0013F8  0EE1               	movlw	225
  5815  0013FA  1807               	xorwf	nrf24_write_register@mnemonic_addr^0,w,c
  5816  0013FC  B4D8               	btfsc	status,2,c
  5817  0013FE  EF03  F00A         	goto	u2471
  5818  001402  EF05  F00A         	goto	u2470
  5819  001406                     u2471:
  5820  001406  EF22  F00A         	goto	l4004
  5821  00140A                     u2470:
  5822  00140A  0EE2               	movlw	226
  5823  00140C  1807               	xorwf	nrf24_write_register@mnemonic_addr^0,w,c
  5824  00140E  B4D8               	btfsc	status,2,c
  5825  001410  EF0C  F00A         	goto	u2481
  5826  001414  EF0E  F00A         	goto	u2480
  5827  001418                     u2481:
  5828  001418  EF22  F00A         	goto	l4004
  5829  00141C                     u2480:
  5830  00141C  0EE3               	movlw	227
  5831  00141E  1807               	xorwf	nrf24_write_register@mnemonic_addr^0,w,c
  5832  001420  B4D8               	btfsc	status,2,c
  5833  001422  EF15  F00A         	goto	u2491
  5834  001426  EF17  F00A         	goto	u2490
  5835  00142A                     u2491:
  5836  00142A  EF22  F00A         	goto	l4004
  5837  00142E                     u2490:
  5838  00142E  2807               	incf	nrf24_write_register@mnemonic_addr^0,w,c
  5839  001430  B4D8               	btfsc	status,2,c
  5840  001432  EF1D  F00A         	goto	u2501
  5841  001436  EF1F  F00A         	goto	u2500
  5842  00143A                     u2501:
  5843  00143A  EF22  F00A         	goto	l4004
  5844  00143E                     u2500:
  5845  00143E                     
  5846                           ;nrf24_lib.c: 18: ;nrf24_lib.c: 20:    SPI1_ExchangeByte(value);
  5847  00143E  5006               	movf	nrf24_write_register@value^0,w,c
  5848  001440  EC72  F00B         	call	_SPI1_ExchangeByte
  5849  001444                     l4004:
  5850  001444  888B               	bsf	139,4,c	;volatile
  5851  001446                     
  5852                           ;nrf24_lib.c: 24:     _delay((unsigned long)((10)*(16000000/4000000.0)));
  5853  001446  0E0D               	movlw	13
  5854  001448                     u2927:
  5855  001448  2EE8               	decfsz	wreg,f,c
  5856  00144A  D7FE               	bra	u2927
  5857  00144C  F000               	nop	
  5858  00144E  0012               	return		;funcret
  5859  001450                     __end_of_nrf24_write_register:
  5860                           	callstack 0
  5861                           
  5862 ;; *************** function _nrf24_is_rf_data_available *****************
  5863 ;; Defined at:
  5864 ;;		line 170 in file "nrf24_lib.c"
  5865 ;; Parameters:    Size  Location     Type
  5866 ;;		None
  5867 ;; Auto vars:     Size  Location     Type
  5868 ;;		None
  5869 ;; Return value:  Size  Location     Type
  5870 ;;                  1    wreg      unsigned char 
  5871 ;; Registers used:
  5872 ;;		wreg, status,2, status,0, cstack
  5873 ;; Tracked objects:
  5874 ;;		On entry : 0/0
  5875 ;;		On exit  : 0/0
  5876 ;;		Unchanged: 0/0
  5877 ;; Data sizes:     COMRAM   BANK0   BANK1
  5878 ;;      Params:         0       0       0
  5879 ;;      Locals:         0       0       0
  5880 ;;      Temps:          1       0       0
  5881 ;;      Totals:         1       0       0
  5882 ;;Total ram usage:        1 bytes
  5883 ;; Hardware stack levels used: 1
  5884 ;; Hardware stack levels required when called: 6
  5885 ;; This function calls:
  5886 ;;		_nrf24_read_register
  5887 ;; This function is called by:
  5888 ;;		_main
  5889 ;; This function uses a non-reentrant model
  5890 ;;
  5891                           
  5892                           	psect	text18
  5893  001844                     __ptext18:
  5894                           	callstack 0
  5895  001844                     _nrf24_is_rf_data_available:
  5896                           	callstack 24
  5897  001844                     
  5898                           ;nrf24_lib.c: 171:     if ((nrf24_read_register(0x07) & 0x40) == 0x40) {
  5899  001844  0E07               	movlw	7
  5900  001846  EC51  F00C         	call	_nrf24_read_register
  5901  00184A  6E08               	movwf	??_nrf24_is_rf_data_available^0,c
  5902  00184C  AC08               	btfss	??_nrf24_is_rf_data_available^0,6,c
  5903  00184E  EF2B  F00C         	goto	u2761
  5904  001852  EF2D  F00C         	goto	u2760
  5905  001856                     u2761:
  5906  001856  EF30  F00C         	goto	l4516
  5907  00185A                     u2760:
  5908  00185A                     
  5909                           ;nrf24_lib.c: 172:         return 0;
  5910  00185A  0E00               	movlw	0
  5911  00185C  EF31  F00C         	goto	l473
  5912  001860                     l4516:
  5913                           
  5914                           ;nrf24_lib.c: 174:     return 1;
  5915  001860  0E01               	movlw	1
  5916  001862                     l473:
  5917  001862  0012               	return		;funcret
  5918  001864                     __end_of_nrf24_is_rf_data_available:
  5919                           	callstack 0
  5920                           
  5921 ;; *************** function _nrf24_read_register *****************
  5922 ;; Defined at:
  5923 ;;		line 27 in file "nrf24_lib.c"
  5924 ;; Parameters:    Size  Location     Type
  5925 ;;  mnemonic_add    1    wreg     unsigned char 
  5926 ;; Auto vars:     Size  Location     Type
  5927 ;;  mnemonic_add    1    5[COMRAM] unsigned char 
  5928 ;;  byte0           1    6[COMRAM] unsigned char 
  5929 ;; Return value:  Size  Location     Type
  5930 ;;                  1    wreg      unsigned char 
  5931 ;; Registers used:
  5932 ;;		wreg, status,2, status,0, cstack
  5933 ;; Tracked objects:
  5934 ;;		On entry : 0/0
  5935 ;;		On exit  : 0/0
  5936 ;;		Unchanged: 0/0
  5937 ;; Data sizes:     COMRAM   BANK0   BANK1
  5938 ;;      Params:         0       0       0
  5939 ;;      Locals:         2       0       0
  5940 ;;      Temps:          0       0       0
  5941 ;;      Totals:         2       0       0
  5942 ;;Total ram usage:        2 bytes
  5943 ;; Hardware stack levels used: 1
  5944 ;; Hardware stack levels required when called: 5
  5945 ;; This function calls:
  5946 ;;		_SPI1_ExchangeByte
  5947 ;; This function is called by:
  5948 ;;		_nrf24_rf_init
  5949 ;;		_nrf24_is_rf_data_available
  5950 ;;		_nrf24_printf_rf_config
  5951 ;;		_nrf24_get_channel_frq
  5952 ;; This function uses a non-reentrant model
  5953 ;;
  5954                           
  5955                           	psect	text19
  5956  0018A2                     __ptext19:
  5957                           	callstack 0
  5958  0018A2                     _nrf24_read_register:
  5959                           	callstack 24
  5960                           
  5961                           ;incstack = 0
  5962                           ;nrf24_read_register@mnemonic_addr stored from wreg
  5963  0018A2  6E06               	movwf	nrf24_read_register@mnemonic_addr^0,c
  5964  0018A4  988B               	bcf	139,4,c	;volatile
  5965  0018A6                     
  5966                           ;nrf24_lib.c: 30:     SPI1_ExchangeByte(0x00 | (mnemonic_addr & 0x1F));
  5967  0018A6  5006               	movf	nrf24_read_register@mnemonic_addr^0,w,c
  5968  0018A8  0B1F               	andlw	31
  5969  0018AA  EC72  F00B         	call	_SPI1_ExchangeByte
  5970  0018AE                     
  5971                           ;nrf24_lib.c: 31:     byte0 = SPI1_ExchangeByte(0xFF);
  5972  0018AE  0EFF               	movlw	255
  5973  0018B0  EC72  F00B         	call	_SPI1_ExchangeByte
  5974  0018B4  6E07               	movwf	nrf24_read_register@byte0^0,c
  5975  0018B6  888B               	bsf	139,4,c	;volatile
  5976  0018B8                     
  5977                           ;nrf24_lib.c: 33:     return byte0;
  5978  0018B8  5007               	movf	nrf24_read_register@byte0^0,w,c
  5979  0018BA  0012               	return		;funcret
  5980  0018BC                     __end_of_nrf24_read_register:
  5981                           	callstack 0
  5982                           
  5983 ;; *************** function _SPI1_ExchangeByte *****************
  5984 ;; Defined at:
  5985 ;;		line 62 in file "mcc_generated_files/spi1.c"
  5986 ;; Parameters:    Size  Location     Type
  5987 ;;  data            1    wreg     unsigned char 
  5988 ;; Auto vars:     Size  Location     Type
  5989 ;;  data            1    3[COMRAM] unsigned char 
  5990 ;;  ret             1    4[COMRAM] unsigned char 
  5991 ;; Return value:  Size  Location     Type
  5992 ;;                  1    wreg      unsigned char 
  5993 ;; Registers used:
  5994 ;;		wreg, status,2
  5995 ;; Tracked objects:
  5996 ;;		On entry : 0/0
  5997 ;;		On exit  : 0/0
  5998 ;;		Unchanged: 0/0
  5999 ;; Data sizes:     COMRAM   BANK0   BANK1
  6000 ;;      Params:         0       0       0
  6001 ;;      Locals:         2       0       0
  6002 ;;      Temps:          0       0       0
  6003 ;;      Totals:         2       0       0
  6004 ;;Total ram usage:        2 bytes
  6005 ;; Hardware stack levels used: 1
  6006 ;; Hardware stack levels required when called: 4
  6007 ;; This function calls:
  6008 ;;		Nothing
  6009 ;; This function is called by:
  6010 ;;		_nrf24_write_register
  6011 ;;		_nrf24_read_register
  6012 ;;		_nrf24_write_buff
  6013 ;;		_nrf24_read_buff
  6014 ;;		_nrf24_flush_tx_rx
  6015 ;;		_SPI1_WriteBlock
  6016 ;;		_SPI1_ReadBlock
  6017 ;; This function uses a non-reentrant model
  6018 ;;
  6019                           
  6020                           	psect	text20
  6021  0016E4                     __ptext20:
  6022                           	callstack 0
  6023  0016E4                     _SPI1_ExchangeByte:
  6024                           	callstack 24
  6025                           
  6026                           ;incstack = 0
  6027                           ;SPI1_ExchangeByte@data stored from wreg
  6028  0016E4  6E04               	movwf	SPI1_ExchangeByte@data^0,c
  6029  0016E6                     
  6030                           ;mcc_generated_files/spi1.c: 62: uint8_t SPI1_ExchangeByte(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 63: {;mcc_generated_files/spi1.c: 64:     SSPBUF = data;
  6031  0016E6  C004  FFC9         	movff	SPI1_ExchangeByte@data,4041	;volatile
  6032                           
  6033                           ;mcc_generated_files/spi1.c: 65:     while((!spi_rx_data_ready) && (PIR1bits.SSPIF == 0)
      +                          ) {
  6034  0016EA  EF78  F00B         	goto	l3678
  6035  0016EE                     l204:
  6036  0016EE  F000               	nop		;# 
  6037  0016F0                     l3678:
  6038                           
  6039                           ;mcc_generated_files/spi1.c: 65:     while((!spi_rx_data_ready) && (PIR1bits.SSPIF == 0)
      +                          ) {
  6040  0016F0  505B               	movf	_spi_rx_data_ready^0,w,c	;volatile
  6041  0016F2  A4D8               	btfss	status,2,c
  6042  0016F4  EF7E  F00B         	goto	u1971
  6043  0016F8  EF80  F00B         	goto	u1970
  6044  0016FC                     u1971:
  6045  0016FC  EF87  F00B         	goto	l3682
  6046  001700                     u1970:
  6047  001700  A69E               	btfss	158,3,c	;volatile
  6048  001702  EF85  F00B         	goto	u1981
  6049  001706  EF87  F00B         	goto	u1980
  6050  00170A                     u1981:
  6051  00170A  EF77  F00B         	goto	l204
  6052  00170E                     u1980:
  6053  00170E                     l3682:
  6054                           
  6055                           ;mcc_generated_files/spi1.c: 69:     spi_rx_data_ready = 0;
  6056  00170E  0E00               	movlw	0
  6057  001710  6E5B               	movwf	_spi_rx_data_ready^0,c	;volatile
  6058  001712                     
  6059                           ;mcc_generated_files/spi1.c: 70:     PIR1bits.SSPIF = 0;
  6060  001712  969E               	bcf	158,3,c	;volatile
  6061  001714                     
  6062                           ;mcc_generated_files/spi1.c: 71:     uint8_t ret = SSPBUF;
  6063  001714  CFC9 F005          	movff	4041,SPI1_ExchangeByte@ret	;volatile
  6064                           
  6065                           ;mcc_generated_files/spi1.c: 73:     return ret;
  6066  001718  5005               	movf	SPI1_ExchangeByte@ret^0,w,c
  6067  00171A  0012               	return		;funcret
  6068  00171C                     __end_of_SPI1_ExchangeByte:
  6069                           	callstack 0
  6070                           
  6071 ;; *************** function _SYSTEM_Initialize *****************
  6072 ;; Defined at:
  6073 ;;		line 5 in file "mcc_generated_files/mcc.c"
  6074 ;; Parameters:    Size  Location     Type
  6075 ;;		None
  6076 ;; Auto vars:     Size  Location     Type
  6077 ;;		None
  6078 ;; Return value:  Size  Location     Type
  6079 ;;                  1    wreg      void 
  6080 ;; Registers used:
  6081 ;;		wreg, status,2, status,0, cstack
  6082 ;; Tracked objects:
  6083 ;;		On entry : 0/0
  6084 ;;		On exit  : 0/0
  6085 ;;		Unchanged: 0/0
  6086 ;; Data sizes:     COMRAM   BANK0   BANK1
  6087 ;;      Params:         0       0       0
  6088 ;;      Locals:         0       0       0
  6089 ;;      Temps:          0       0       0
  6090 ;;      Totals:         0       0       0
  6091 ;;Total ram usage:        0 bytes
  6092 ;; Hardware stack levels used: 1
  6093 ;; Hardware stack levels required when called: 6
  6094 ;; This function calls:
  6095 ;;		_EUSART1_Initialize
  6096 ;;		_INTERRUPT_Initialize
  6097 ;;		_OSCILLATOR_Initialize
  6098 ;;		_PIN_MANAGER_Initialize
  6099 ;;		_SPI1_Initialize
  6100 ;;		_TMR0_Initialize
  6101 ;; This function is called by:
  6102 ;;		_main
  6103 ;; This function uses a non-reentrant model
  6104 ;;
  6105                           
  6106                           	psect	text21
  6107  0018BC                     __ptext21:
  6108                           	callstack 0
  6109  0018BC                     _SYSTEM_Initialize:
  6110                           	callstack 24
  6111  0018BC                     
  6112                           ;mcc_generated_files/mcc.c: 7:     OSCILLATOR_Initialize();
  6113  0018BC  EC8D  F00C         	call	_OSCILLATOR_Initialize	;wreg free
  6114                           
  6115                           ;mcc_generated_files/mcc.c: 8:     PIN_MANAGER_Initialize();
  6116  0018C0  EC32  F00C         	call	_PIN_MANAGER_Initialize	;wreg free
  6117  0018C4                     
  6118                           ;mcc_generated_files/mcc.c: 9:     TMR0_Initialize();
  6119  0018C4  EC8E  F00B         	call	_TMR0_Initialize	;wreg free
  6120  0018C8                     
  6121                           ;mcc_generated_files/mcc.c: 10:     INTERRUPT_Initialize();
  6122  0018C8  ECAC  F00C         	call	_INTERRUPT_Initialize	;wreg free
  6123  0018CC                     
  6124                           ;mcc_generated_files/mcc.c: 11:     EUSART1_Initialize();
  6125  0018CC  ECBD  F00A         	call	_EUSART1_Initialize	;wreg free
  6126  0018D0                     
  6127                           ;mcc_generated_files/mcc.c: 12:     SPI1_Initialize();
  6128  0018D0  ECED  F00B         	call	_SPI1_Initialize	;wreg free
  6129  0018D4  0012               	return		;funcret
  6130  0018D6                     __end_of_SYSTEM_Initialize:
  6131                           	callstack 0
  6132                           
  6133 ;; *************** function _TMR0_Initialize *****************
  6134 ;; Defined at:
  6135 ;;		line 22 in file "mcc_generated_files/tmr0.c"
  6136 ;; Parameters:    Size  Location     Type
  6137 ;;		None
  6138 ;; Auto vars:     Size  Location     Type
  6139 ;;		None
  6140 ;; Return value:  Size  Location     Type
  6141 ;;                  1    wreg      void 
  6142 ;; Registers used:
  6143 ;;		wreg, status,2, status,0, cstack
  6144 ;; Tracked objects:
  6145 ;;		On entry : 0/0
  6146 ;;		On exit  : 0/0
  6147 ;;		Unchanged: 0/0
  6148 ;; Data sizes:     COMRAM   BANK0   BANK1
  6149 ;;      Params:         0       0       0
  6150 ;;      Locals:         0       0       0
  6151 ;;      Temps:          2       0       0
  6152 ;;      Totals:         2       0       0
  6153 ;;Total ram usage:        2 bytes
  6154 ;; Hardware stack levels used: 1
  6155 ;; Hardware stack levels required when called: 5
  6156 ;; This function calls:
  6157 ;;		_TMR0_SetInterruptHandler
  6158 ;; This function is called by:
  6159 ;;		_SYSTEM_Initialize
  6160 ;; This function uses a non-reentrant model
  6161 ;;
  6162                           
  6163                           	psect	text22
  6164  00171C                     __ptext22:
  6165                           	callstack 0
  6166  00171C                     _TMR0_Initialize:
  6167                           	callstack 24
  6168  00171C                     
  6169                           ;mcc_generated_files/tmr0.c: 27:     T0CONbits.T08BIT = 0;
  6170  00171C  9CD5               	bcf	213,6,c	;volatile
  6171  00171E                     
  6172                           ;mcc_generated_files/tmr0.c: 30:     TMR0H = 0xEC;
  6173  00171E  0EEC               	movlw	236
  6174  001720  6ED7               	movwf	215,c	;volatile
  6175                           
  6176                           ;mcc_generated_files/tmr0.c: 33:     TMR0L = 0xEC;
  6177  001722  0EEC               	movlw	236
  6178  001724  6ED6               	movwf	214,c	;volatile
  6179  001726                     
  6180                           ;mcc_generated_files/tmr0.c: 37:     timer0ReloadVal = (uint16_t)((TMR0H << 8) | TMR0L);
  6181  001726  50D6               	movf	214,w,c	;volatile
  6182  001728  CFD7 F006          	movff	4055,??_TMR0_Initialize	;volatile
  6183  00172C  6A07               	clrf	(??_TMR0_Initialize+1)^0,c
  6184  00172E  C006  F007         	movff	??_TMR0_Initialize,??_TMR0_Initialize+1
  6185  001732  6A06               	clrf	??_TMR0_Initialize^0,c
  6186  001734  1006               	iorwf	??_TMR0_Initialize^0,w,c
  6187  001736  6E59               	movwf	_timer0ReloadVal^0,c	;volatile
  6188  001738  5007               	movf	(??_TMR0_Initialize+1)^0,w,c
  6189  00173A  6E5A               	movwf	(_timer0ReloadVal+1)^0,c	;volatile
  6190  00173C                     
  6191                           ;mcc_generated_files/tmr0.c: 40:     INTCONbits.TMR0IF = 0;
  6192  00173C  94F2               	bcf	242,2,c	;volatile
  6193  00173E                     
  6194                           ;mcc_generated_files/tmr0.c: 43:     INTCONbits.TMR0IE = 1;
  6195  00173E  8AF2               	bsf	242,5,c	;volatile
  6196  001740                     
  6197                           ;mcc_generated_files/tmr0.c: 46:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  6198  001740  0E5C               	movlw	low _TMR0_DefaultInterruptHandler
  6199  001742  6E04               	movwf	TMR0_SetInterruptHandler@InterruptHandler^0,c
  6200  001744  0E19               	movlw	high _TMR0_DefaultInterruptHandler
  6201  001746  6E05               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^0,c
  6202  001748  EC98  F00C         	call	_TMR0_SetInterruptHandler	;wreg free
  6203  00174C                     
  6204                           ;mcc_generated_files/tmr0.c: 49:     T0CON = 0x97;
  6205  00174C  0E97               	movlw	151
  6206  00174E  6ED5               	movwf	213,c	;volatile
  6207  001750  0012               	return		;funcret
  6208  001752                     __end_of_TMR0_Initialize:
  6209                           	callstack 0
  6210                           
  6211 ;; *************** function _TMR0_SetInterruptHandler *****************
  6212 ;; Defined at:
  6213 ;;		line 119 in file "mcc_generated_files/tmr0.c"
  6214 ;; Parameters:    Size  Location     Type
  6215 ;;  InterruptHan    2    3[COMRAM] PTR FTN()void 
  6216 ;;		 -> blink_led(1), TMR0_DefaultInterruptHandler(1), 
  6217 ;; Auto vars:     Size  Location     Type
  6218 ;;		None
  6219 ;; Return value:  Size  Location     Type
  6220 ;;                  1    wreg      void 
  6221 ;; Registers used:
  6222 ;;		wreg, status,2, status,0
  6223 ;; Tracked objects:
  6224 ;;		On entry : 0/0
  6225 ;;		On exit  : 0/0
  6226 ;;		Unchanged: 0/0
  6227 ;; Data sizes:     COMRAM   BANK0   BANK1
  6228 ;;      Params:         2       0       0
  6229 ;;      Locals:         0       0       0
  6230 ;;      Temps:          0       0       0
  6231 ;;      Totals:         2       0       0
  6232 ;;Total ram usage:        2 bytes
  6233 ;; Hardware stack levels used: 1
  6234 ;; Hardware stack levels required when called: 4
  6235 ;; This function calls:
  6236 ;;		Nothing
  6237 ;; This function is called by:
  6238 ;;		_TMR0_Initialize
  6239 ;;		_main
  6240 ;; This function uses a non-reentrant model
  6241 ;;
  6242                           
  6243                           	psect	text23
  6244  001930                     __ptext23:
  6245                           	callstack 0
  6246  001930                     _TMR0_SetInterruptHandler:
  6247                           	callstack 26
  6248  001930                     
  6249                           ;mcc_generated_files/tmr0.c: 120:     TMR0_InterruptHandler = InterruptHandler;
  6250  001930  C004  F0C6         	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
  6251  001934  C005  F0C7         	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
  6252  001938  0012               	return		;funcret
  6253  00193A                     __end_of_TMR0_SetInterruptHandler:
  6254                           	callstack 0
  6255                           
  6256 ;; *************** function _SPI1_Initialize *****************
  6257 ;; Defined at:
  6258 ;;		line 17 in file "mcc_generated_files/spi1.c"
  6259 ;; Parameters:    Size  Location     Type
  6260 ;;		None
  6261 ;; Auto vars:     Size  Location     Type
  6262 ;;		None
  6263 ;; Return value:  Size  Location     Type
  6264 ;;                  1    wreg      void 
  6265 ;; Registers used:
  6266 ;;		wreg, status,2
  6267 ;; Tracked objects:
  6268 ;;		On entry : 0/0
  6269 ;;		On exit  : 0/0
  6270 ;;		Unchanged: 0/0
  6271 ;; Data sizes:     COMRAM   BANK0   BANK1
  6272 ;;      Params:         0       0       0
  6273 ;;      Locals:         0       0       0
  6274 ;;      Temps:          0       0       0
  6275 ;;      Totals:         0       0       0
  6276 ;;Total ram usage:        0 bytes
  6277 ;; Hardware stack levels used: 1
  6278 ;; Hardware stack levels required when called: 4
  6279 ;; This function calls:
  6280 ;;		Nothing
  6281 ;; This function is called by:
  6282 ;;		_SYSTEM_Initialize
  6283 ;; This function uses a non-reentrant model
  6284 ;;
  6285                           
  6286                           	psect	text24
  6287  0017DA                     __ptext24:
  6288                           	callstack 0
  6289  0017DA                     _SPI1_Initialize:
  6290                           	callstack 25
  6291  0017DA                     
  6292                           ;mcc_generated_files/spi1.c: 20:     SSPCON1bits.SSPEN = 0;
  6293  0017DA  9AC6               	bcf	198,5,c	;volatile
  6294                           
  6295                           ;mcc_generated_files/spi1.c: 22:     TRISCbits.TRISC7 = 0;
  6296  0017DC  9E94               	bcf	148,7,c	;volatile
  6297                           
  6298                           ;mcc_generated_files/spi1.c: 23:     TRISBbits.TRISB4 = 1;
  6299  0017DE  8893               	bsf	147,4,c	;volatile
  6300                           
  6301                           ;mcc_generated_files/spi1.c: 24:     TRISBbits.TRISB6 = 0;
  6302  0017E0  9C93               	bcf	147,6,c	;volatile
  6303                           
  6304                           ;mcc_generated_files/spi1.c: 25:     TRISCbits.TRISC4 = 0;
  6305  0017E2  9894               	bcf	148,4,c	;volatile
  6306                           
  6307                           ;mcc_generated_files/spi1.c: 27:     LATCbits.LATC4 = 1;
  6308  0017E4  888B               	bsf	139,4,c	;volatile
  6309                           
  6310                           ;mcc_generated_files/spi1.c: 29:     SSPSTATbits.SMP = 0;
  6311  0017E6  9EC7               	bcf	199,7,c	;volatile
  6312                           
  6313                           ;mcc_generated_files/spi1.c: 30:     SSPSTATbits.CKE = 0;
  6314  0017E8  9CC7               	bcf	199,6,c	;volatile
  6315                           
  6316                           ;mcc_generated_files/spi1.c: 32:     SSPCON1bits.CKP = 0;
  6317  0017EA  98C6               	bcf	198,4,c	;volatile
  6318  0017EC                     
  6319                           ;mcc_generated_files/spi1.c: 33:     SSPCON1bits.SSPM = 0b0001;
  6320  0017EC  50C6               	movf	198,w,c	;volatile
  6321  0017EE  0BF0               	andlw	-16
  6322  0017F0  0901               	iorlw	1
  6323  0017F2  6EC6               	movwf	198,c	;volatile
  6324  0017F4                     
  6325                           ;mcc_generated_files/spi1.c: 35:     PIE2bits.BCLIE = 1;
  6326  0017F4  86A0               	bsf	160,3,c	;volatile
  6327  0017F6                     
  6328                           ;mcc_generated_files/spi1.c: 38:     PIE1bits.SSPIE = 1;
  6329  0017F6  869D               	bsf	157,3,c	;volatile
  6330  0017F8                     
  6331                           ;mcc_generated_files/spi1.c: 41:     TRISCbits.TRISC3 = 0;
  6332  0017F8  9694               	bcf	148,3,c	;volatile
  6333  0017FA                     
  6334                           ;mcc_generated_files/spi1.c: 42:     SSPCON1bits.SSPEN = 0;
  6335  0017FA  9AC6               	bcf	198,5,c	;volatile
  6336  0017FC  0012               	return		;funcret
  6337  0017FE                     __end_of_SPI1_Initialize:
  6338                           	callstack 0
  6339                           
  6340 ;; *************** function _PIN_MANAGER_Initialize *****************
  6341 ;; Defined at:
  6342 ;;		line 8 in file "mcc_generated_files/pin_manager.c"
  6343 ;; Parameters:    Size  Location     Type
  6344 ;;		None
  6345 ;; Auto vars:     Size  Location     Type
  6346 ;;		None
  6347 ;; Return value:  Size  Location     Type
  6348 ;;                  1    wreg      void 
  6349 ;; Registers used:
  6350 ;;		wreg, status,2
  6351 ;; Tracked objects:
  6352 ;;		On entry : 0/0
  6353 ;;		On exit  : 0/0
  6354 ;;		Unchanged: 0/0
  6355 ;; Data sizes:     COMRAM   BANK0   BANK1
  6356 ;;      Params:         0       0       0
  6357 ;;      Locals:         0       0       0
  6358 ;;      Temps:          0       0       0
  6359 ;;      Totals:         0       0       0
  6360 ;;Total ram usage:        0 bytes
  6361 ;; Hardware stack levels used: 1
  6362 ;; Hardware stack levels required when called: 4
  6363 ;; This function calls:
  6364 ;;		Nothing
  6365 ;; This function is called by:
  6366 ;;		_SYSTEM_Initialize
  6367 ;; This function uses a non-reentrant model
  6368 ;;
  6369                           
  6370                           	psect	text25
  6371  001864                     __ptext25:
  6372                           	callstack 0
  6373  001864                     _PIN_MANAGER_Initialize:
  6374                           	callstack 25
  6375  001864                     
  6376                           ;mcc_generated_files/pin_manager.c: 15:     LATA = 0x00;
  6377  001864  0E00               	movlw	0
  6378  001866  6E89               	movwf	137,c	;volatile
  6379                           
  6380                           ;mcc_generated_files/pin_manager.c: 16:     LATB = 0x00;
  6381  001868  0E00               	movlw	0
  6382  00186A  6E8A               	movwf	138,c	;volatile
  6383                           
  6384                           ;mcc_generated_files/pin_manager.c: 17:     LATC = 0x00;
  6385  00186C  0E00               	movlw	0
  6386  00186E  6E8B               	movwf	139,c	;volatile
  6387  001870                     
  6388                           ;mcc_generated_files/pin_manager.c: 23:     TRISA = 0b11111111;
  6389  001870  6892               	setf	146,c	;volatile
  6390                           
  6391                           ;mcc_generated_files/pin_manager.c: 24:     TRISB = 0b00111111;
  6392  001872  0E3F               	movlw	63
  6393  001874  6E93               	movwf	147,c	;volatile
  6394                           
  6395                           ;mcc_generated_files/pin_manager.c: 25:     TRISC = 0b00011111;
  6396  001876  0E1F               	movlw	31
  6397  001878  6E94               	movwf	148,c	;volatile
  6398                           
  6399                           ;mcc_generated_files/pin_manager.c: 31:     ANSELH = 0x0;
  6400  00187A  0E00               	movlw	0
  6401  00187C  6E7F               	movwf	127,c	;volatile
  6402                           
  6403                           ;mcc_generated_files/pin_manager.c: 32:     ANSEL = 0x0;
  6404  00187E  0E00               	movlw	0
  6405  001880  6E7E               	movwf	126,c	;volatile
  6406  001882  0012               	return		;funcret
  6407  001884                     __end_of_PIN_MANAGER_Initialize:
  6408                           	callstack 0
  6409                           
  6410 ;; *************** function _OSCILLATOR_Initialize *****************
  6411 ;; Defined at:
  6412 ;;		line 15 in file "mcc_generated_files/mcc.c"
  6413 ;; Parameters:    Size  Location     Type
  6414 ;;		None
  6415 ;; Auto vars:     Size  Location     Type
  6416 ;;		None
  6417 ;; Return value:  Size  Location     Type
  6418 ;;                  1    wreg      void 
  6419 ;; Registers used:
  6420 ;;		wreg, status,2
  6421 ;; Tracked objects:
  6422 ;;		On entry : 0/0
  6423 ;;		On exit  : 0/0
  6424 ;;		Unchanged: 0/0
  6425 ;; Data sizes:     COMRAM   BANK0   BANK1
  6426 ;;      Params:         0       0       0
  6427 ;;      Locals:         0       0       0
  6428 ;;      Temps:          0       0       0
  6429 ;;      Totals:         0       0       0
  6430 ;;Total ram usage:        0 bytes
  6431 ;; Hardware stack levels used: 1
  6432 ;; Hardware stack levels required when called: 4
  6433 ;; This function calls:
  6434 ;;		Nothing
  6435 ;; This function is called by:
  6436 ;;		_SYSTEM_Initialize
  6437 ;; This function uses a non-reentrant model
  6438 ;;
  6439                           
  6440                           	psect	text26
  6441  00191A                     __ptext26:
  6442                           	callstack 0
  6443  00191A                     _OSCILLATOR_Initialize:
  6444                           	callstack 25
  6445  00191A                     
  6446                           ;mcc_generated_files/mcc.c: 17:     OSCCONbits.IDLEN = 0;
  6447  00191A  9ED3               	bcf	211,7,c	;volatile
  6448  00191C                     
  6449                           ;mcc_generated_files/mcc.c: 18:     OSCCONbits.IRCF = 0x07;
  6450  00191C  0E70               	movlw	112
  6451  00191E  12D3               	iorwf	211,f,c	;volatile
  6452                           
  6453                           ;mcc_generated_files/mcc.c: 19:     OSCCONbits.SCS = 0x03;
  6454  001920  0E03               	movlw	3
  6455  001922  12D3               	iorwf	211,f,c	;volatile
  6456  001924  0012               	return		;funcret
  6457  001926                     __end_of_OSCILLATOR_Initialize:
  6458                           	callstack 0
  6459                           
  6460 ;; *************** function _INTERRUPT_Initialize *****************
  6461 ;; Defined at:
  6462 ;;		line 5 in file "mcc_generated_files/interrupt_manager.c"
  6463 ;; Parameters:    Size  Location     Type
  6464 ;;		None
  6465 ;; Auto vars:     Size  Location     Type
  6466 ;;		None
  6467 ;; Return value:  Size  Location     Type
  6468 ;;                  1    wreg      void 
  6469 ;; Registers used:
  6470 ;;		None
  6471 ;; Tracked objects:
  6472 ;;		On entry : 0/0
  6473 ;;		On exit  : 0/0
  6474 ;;		Unchanged: 0/0
  6475 ;; Data sizes:     COMRAM   BANK0   BANK1
  6476 ;;      Params:         0       0       0
  6477 ;;      Locals:         0       0       0
  6478 ;;      Temps:          0       0       0
  6479 ;;      Totals:         0       0       0
  6480 ;;Total ram usage:        0 bytes
  6481 ;; Hardware stack levels used: 1
  6482 ;; Hardware stack levels required when called: 4
  6483 ;; This function calls:
  6484 ;;		Nothing
  6485 ;; This function is called by:
  6486 ;;		_SYSTEM_Initialize
  6487 ;; This function uses a non-reentrant model
  6488 ;;
  6489                           
  6490                           	psect	text27
  6491  001958                     __ptext27:
  6492                           	callstack 0
  6493  001958                     _INTERRUPT_Initialize:
  6494                           	callstack 25
  6495  001958                     
  6496                           ;mcc_generated_files/interrupt_manager.c: 8:     RCONbits.IPEN = 0;
  6497  001958  9ED0               	bcf	208,7,c	;volatile
  6498  00195A  0012               	return		;funcret
  6499  00195C                     __end_of_INTERRUPT_Initialize:
  6500                           	callstack 0
  6501                           
  6502 ;; *************** function _EUSART1_Initialize *****************
  6503 ;; Defined at:
  6504 ;;		line 21 in file "mcc_generated_files/eusart1.c"
  6505 ;; Parameters:    Size  Location     Type
  6506 ;;		None
  6507 ;; Auto vars:     Size  Location     Type
  6508 ;;  gen_reg         2    0        unsigned int 
  6509 ;;  brg16           1    7[COMRAM] unsigned char 
  6510 ;;  brgh            1    6[COMRAM] unsigned char 
  6511 ;;  sync            1    5[COMRAM] unsigned char 
  6512 ;; Return value:  Size  Location     Type
  6513 ;;                  1    wreg      void 
  6514 ;; Registers used:
  6515 ;;		wreg, status,2, status,0, cstack
  6516 ;; Tracked objects:
  6517 ;;		On entry : 0/0
  6518 ;;		On exit  : 0/0
  6519 ;;		Unchanged: 0/0
  6520 ;; Data sizes:     COMRAM   BANK0   BANK1
  6521 ;;      Params:         0       0       0
  6522 ;;      Locals:         3       0       0
  6523 ;;      Temps:          0       0       0
  6524 ;;      Totals:         3       0       0
  6525 ;;Total ram usage:        3 bytes
  6526 ;; Hardware stack levels used: 1
  6527 ;; Hardware stack levels required when called: 5
  6528 ;; This function calls:
  6529 ;;		_EUSART1_SetErrorHandler
  6530 ;;		_EUSART1_SetFramingErrorHandler
  6531 ;;		_EUSART1_SetOverrunErrorHandler
  6532 ;; This function is called by:
  6533 ;;		_SYSTEM_Initialize
  6534 ;; This function uses a non-reentrant model
  6535 ;;
  6536                           
  6537                           	psect	text28
  6538  00157A                     __ptext28:
  6539                           	callstack 0
  6540  00157A                     _EUSART1_Initialize:
  6541                           	callstack 24
  6542  00157A                     
  6543                           ;mcc_generated_files/eusart1.c: 24:     uint8_t sync = 0;
  6544  00157A  0E00               	movlw	0
  6545  00157C  6E06               	movwf	EUSART1_Initialize@sync^0,c
  6546                           
  6547                           ;mcc_generated_files/eusart1.c: 25:     uint8_t brgh = 1;
  6548  00157E  0E01               	movlw	1
  6549  001580  6E07               	movwf	EUSART1_Initialize@brgh^0,c
  6550                           
  6551                           ;mcc_generated_files/eusart1.c: 26:     uint8_t brg16 = 0;
  6552  001582  0E00               	movlw	0
  6553  001584  6E08               	movwf	EUSART1_Initialize@brg16^0,c
  6554  001586                     
  6555                           ;mcc_generated_files/eusart1.c: 28:     TRISCbits.RC7=1;
  6556  001586  8E94               	bsf	148,7,c	;volatile
  6557  001588                     
  6558                           ;mcc_generated_files/eusart1.c: 29:     TRISCbits.RC6=1;
  6559  001588  8C94               	bsf	148,6,c	;volatile
  6560                           
  6561                           ;mcc_generated_files/eusart1.c: 31:     SPBRGH = (gen_reg & 0xFF00) >> 8;
  6562  00158A  0E00               	movlw	0
  6563  00158C  6EB0               	movwf	176,c	;volatile
  6564  00158E                     
  6565                           ;mcc_generated_files/eusart1.c: 32:     SPBRG = gen_reg & 0x00FF;
  6566  00158E  0E33               	movlw	51
  6567  001590  6EAF               	movwf	175,c	;volatile
  6568  001592                     
  6569                           ;mcc_generated_files/eusart1.c: 34:     RCSTAbits.CREN = 1;
  6570  001592  88AB               	bsf	171,4,c	;volatile
  6571  001594                     
  6572                           ;mcc_generated_files/eusart1.c: 35:     RCSTAbits.SPEN = 1;
  6573  001594  8EAB               	bsf	171,7,c	;volatile
  6574  001596                     
  6575                           ;mcc_generated_files/eusart1.c: 36:     BAUDCONbits.BRG16 = brg16;
  6576  001596  96B8               	bcf	184,3,c	;volatile
  6577  001598                     
  6578                           ;mcc_generated_files/eusart1.c: 38:     TXSTAbits.SYNC = sync;
  6579  001598  98AC               	bcf	172,4,c	;volatile
  6580  00159A                     
  6581                           ;mcc_generated_files/eusart1.c: 39:     TXSTAbits.BRGH = brgh;
  6582  00159A  84AC               	bsf	172,2,c	;volatile
  6583  00159C                     
  6584                           ;mcc_generated_files/eusart1.c: 40:     TXSTAbits.TXEN = 1;
  6585  00159C  8AAC               	bsf	172,5,c	;volatile
  6586  00159E                     
  6587                           ;mcc_generated_files/eusart1.c: 44:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultFr
      +                          amingErrorHandler);
  6588  00159E  0E00               	movlw	0
  6589  0015A0  6E04               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler^0,c
  6590  0015A2  0E00               	movlw	0
  6591  0015A4  6E05               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)^0,c
  6592  0015A6  ECA2  F00C         	call	_EUSART1_SetFramingErrorHandler	;wreg free
  6593  0015AA                     
  6594                           ;mcc_generated_files/eusart1.c: 45:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultOv
      +                          errunErrorHandler);
  6595  0015AA  0E00               	movlw	0
  6596  0015AC  6E04               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler^0,c
  6597  0015AE  0E00               	movlw	0
  6598  0015B0  6E05               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
  6599  0015B2  EC9D  F00C         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
  6600  0015B6                     
  6601                           ;mcc_generated_files/eusart1.c: 46:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHand
      +                          ler);
  6602  0015B6  0E00               	movlw	0
  6603  0015B8  6E04               	movwf	EUSART1_SetErrorHandler@interruptHandler^0,c
  6604  0015BA  0E00               	movlw	0
  6605  0015BC  6E05               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)^0,c
  6606  0015BE  ECA7  F00C         	call	_EUSART1_SetErrorHandler	;wreg free
  6607  0015C2                     
  6608                           ;mcc_generated_files/eusart1.c: 48:     eusart1RxLastError.status = 0;
  6609  0015C2  0E00               	movlw	0
  6610  0015C4  0100               	movlb	0	; () banked
  6611  0015C6  6F96               	movwf	_eusart1RxLastError& (0+255),b	;volatile
  6612  0015C8                     
  6613                           ; BSR set to: 0
  6614  0015C8  0012               	return		;funcret
  6615  0015CA                     __end_of_EUSART1_Initialize:
  6616                           	callstack 0
  6617                           
  6618 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  6619 ;; Defined at:
  6620 ;;		line 128 in file "mcc_generated_files/eusart1.c"
  6621 ;; Parameters:    Size  Location     Type
  6622 ;;  interruptHan    2    3[COMRAM] PTR FTN()void 
  6623 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  6624 ;; Auto vars:     Size  Location     Type
  6625 ;;		None
  6626 ;; Return value:  Size  Location     Type
  6627 ;;                  1    wreg      void 
  6628 ;; Registers used:
  6629 ;;		wreg, status,2, status,0
  6630 ;; Tracked objects:
  6631 ;;		On entry : 0/0
  6632 ;;		On exit  : 0/0
  6633 ;;		Unchanged: 0/0
  6634 ;; Data sizes:     COMRAM   BANK0   BANK1
  6635 ;;      Params:         2       0       0
  6636 ;;      Locals:         0       0       0
  6637 ;;      Temps:          0       0       0
  6638 ;;      Totals:         2       0       0
  6639 ;;Total ram usage:        2 bytes
  6640 ;; Hardware stack levels used: 1
  6641 ;; Hardware stack levels required when called: 4
  6642 ;; This function calls:
  6643 ;;		Nothing
  6644 ;; This function is called by:
  6645 ;;		_EUSART1_Initialize
  6646 ;; This function uses a non-reentrant model
  6647 ;;
  6648                           
  6649                           	psect	text29
  6650  00193A                     __ptext29:
  6651                           	callstack 0
  6652  00193A                     _EUSART1_SetOverrunErrorHandler:
  6653                           	callstack 24
  6654  00193A                     
  6655                           ;mcc_generated_files/eusart1.c: 129:     EUSART1_OverrunErrorHandler = interruptHandler;
  6656  00193A  C004  F0CA         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
  6657  00193E  C005  F0CB         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
  6658  001942  0012               	return		;funcret
  6659  001944                     __end_of_EUSART1_SetOverrunErrorHandler:
  6660                           	callstack 0
  6661                           
  6662 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  6663 ;; Defined at:
  6664 ;;		line 124 in file "mcc_generated_files/eusart1.c"
  6665 ;; Parameters:    Size  Location     Type
  6666 ;;  interruptHan    2    3[COMRAM] PTR FTN()void 
  6667 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  6668 ;; Auto vars:     Size  Location     Type
  6669 ;;		None
  6670 ;; Return value:  Size  Location     Type
  6671 ;;                  1    wreg      void 
  6672 ;; Registers used:
  6673 ;;		wreg, status,2, status,0
  6674 ;; Tracked objects:
  6675 ;;		On entry : 0/0
  6676 ;;		On exit  : 0/0
  6677 ;;		Unchanged: 0/0
  6678 ;; Data sizes:     COMRAM   BANK0   BANK1
  6679 ;;      Params:         2       0       0
  6680 ;;      Locals:         0       0       0
  6681 ;;      Temps:          0       0       0
  6682 ;;      Totals:         2       0       0
  6683 ;;Total ram usage:        2 bytes
  6684 ;; Hardware stack levels used: 1
  6685 ;; Hardware stack levels required when called: 4
  6686 ;; This function calls:
  6687 ;;		Nothing
  6688 ;; This function is called by:
  6689 ;;		_EUSART1_Initialize
  6690 ;; This function uses a non-reentrant model
  6691 ;;
  6692                           
  6693                           	psect	text30
  6694  001944                     __ptext30:
  6695                           	callstack 0
  6696  001944                     _EUSART1_SetFramingErrorHandler:
  6697                           	callstack 24
  6698  001944                     
  6699                           ;mcc_generated_files/eusart1.c: 125:     EUSART1_FramingErrorHandler = interruptHandler;
  6700  001944  C004  F0CC         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
  6701  001948  C005  F0CD         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
  6702  00194C  0012               	return		;funcret
  6703  00194E                     __end_of_EUSART1_SetFramingErrorHandler:
  6704                           	callstack 0
  6705                           
  6706 ;; *************** function _EUSART1_SetErrorHandler *****************
  6707 ;; Defined at:
  6708 ;;		line 132 in file "mcc_generated_files/eusart1.c"
  6709 ;; Parameters:    Size  Location     Type
  6710 ;;  interruptHan    2    3[COMRAM] PTR FTN()void 
  6711 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  6712 ;; Auto vars:     Size  Location     Type
  6713 ;;		None
  6714 ;; Return value:  Size  Location     Type
  6715 ;;                  1    wreg      void 
  6716 ;; Registers used:
  6717 ;;		wreg, status,2, status,0
  6718 ;; Tracked objects:
  6719 ;;		On entry : 0/0
  6720 ;;		On exit  : 0/0
  6721 ;;		Unchanged: 0/0
  6722 ;; Data sizes:     COMRAM   BANK0   BANK1
  6723 ;;      Params:         2       0       0
  6724 ;;      Locals:         0       0       0
  6725 ;;      Temps:          0       0       0
  6726 ;;      Totals:         2       0       0
  6727 ;;Total ram usage:        2 bytes
  6728 ;; Hardware stack levels used: 1
  6729 ;; Hardware stack levels required when called: 4
  6730 ;; This function calls:
  6731 ;;		Nothing
  6732 ;; This function is called by:
  6733 ;;		_EUSART1_Initialize
  6734 ;; This function uses a non-reentrant model
  6735 ;;
  6736                           
  6737                           	psect	text31
  6738  00194E                     __ptext31:
  6739                           	callstack 0
  6740  00194E                     _EUSART1_SetErrorHandler:
  6741                           	callstack 24
  6742  00194E                     
  6743                           ;mcc_generated_files/eusart1.c: 133:     EUSART1_ErrorHandler = interruptHandler;
  6744  00194E  C004  F0C8         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
  6745  001952  C005  F0C9         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
  6746  001956  0012               	return		;funcret
  6747  001958                     __end_of_EUSART1_SetErrorHandler:
  6748                           	callstack 0
  6749                           
  6750 ;; *************** function _INTERRUPT_InterruptManager *****************
  6751 ;; Defined at:
  6752 ;;		line 11 in file "mcc_generated_files/interrupt_manager.c"
  6753 ;; Parameters:    Size  Location     Type
  6754 ;;		None
  6755 ;; Auto vars:     Size  Location     Type
  6756 ;;		None
  6757 ;; Return value:  Size  Location     Type
  6758 ;;                  1    wreg      void 
  6759 ;; Registers used:
  6760 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  6761 ;; Tracked objects:
  6762 ;;		On entry : 0/0
  6763 ;;		On exit  : 0/0
  6764 ;;		Unchanged: 0/0
  6765 ;; Data sizes:     COMRAM   BANK0   BANK1
  6766 ;;      Params:         0       0       0
  6767 ;;      Locals:         0       0       0
  6768 ;;      Temps:          2       0       0
  6769 ;;      Totals:         2       0       0
  6770 ;;Total ram usage:        2 bytes
  6771 ;; Hardware stack levels used: 1
  6772 ;; Hardware stack levels required when called: 3
  6773 ;; This function calls:
  6774 ;;		_TMR0_ISR
  6775 ;; This function is called by:
  6776 ;;		Interrupt level 2
  6777 ;; This function uses a non-reentrant model
  6778 ;;
  6779                           
  6780                           	psect	intcode
  6781  000008                     __pintcode:
  6782                           	callstack 0
  6783  000008                     _INTERRUPT_InterruptManager:
  6784                           	callstack 22
  6785                           
  6786                           ;incstack = 0
  6787  000008  825C               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  6788  00000A  CFFA F002          	movff	pclath,??_INTERRUPT_InterruptManager
  6789  00000E  CFFB F003          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  6790  000012                     
  6791                           ;mcc_generated_files/interrupt_manager.c: 14:     if(INTCONbits.TMR0IE == 1 && INTCONbit
      +                          s.TMR0IF == 1){
  6792  000012  AAF2               	btfss	242,5,c	;volatile
  6793  000014  EF0E  F000         	goto	i2u189_41
  6794  000018  EF10  F000         	goto	i2u189_40
  6795  00001C                     i2u189_41:
  6796  00001C  EF19  F000         	goto	i2l3458
  6797  000020                     i2u189_40:
  6798  000020  A4F2               	btfss	242,2,c	;volatile
  6799  000022  EF15  F000         	goto	i2u190_41
  6800  000026  EF17  F000         	goto	i2u190_40
  6801  00002A                     i2u190_41:
  6802  00002A  EF19  F000         	goto	i2l3458
  6803  00002E                     i2u190_40:
  6804  00002E                     
  6805                           ;mcc_generated_files/interrupt_manager.c: 15:         TMR0_ISR();
  6806  00002E  EC76  F00C         	call	_TMR0_ISR	;wreg free
  6807  000032                     i2l3458:
  6808                           
  6809                           ;mcc_generated_files/interrupt_manager.c: 17:     if(PIR2bits.BCLIF == 1)
  6810  000032  A6A1               	btfss	161,3,c	;volatile
  6811  000034  EF1E  F000         	goto	i2u191_41
  6812  000038  EF20  F000         	goto	i2u191_40
  6813  00003C                     i2u191_41:
  6814  00003C  EF23  F000         	goto	i2l3464
  6815  000040                     i2u191_40:
  6816  000040                     
  6817                           ;mcc_generated_files/interrupt_manager.c: 18:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 19:         SSPCON1 &= 0x3F;
  6818  000040  0E3F               	movlw	63
  6819  000042  16C6               	andwf	198,f,c	;volatile
  6820  000044                     
  6821                           ;mcc_generated_files/interrupt_manager.c: 20:         PIR2bits.BCLIF = 0;
  6822  000044  96A1               	bcf	161,3,c	;volatile
  6823  000046                     i2l3464:
  6824                           
  6825                           ;mcc_generated_files/interrupt_manager.c: 22:     if(PIR1bits.SSPIF){
  6826  000046  A69E               	btfss	158,3,c	;volatile
  6827  000048  EF28  F000         	goto	i2u192_41
  6828  00004C  EF2A  F000         	goto	i2u192_40
  6829  000050                     i2u192_41:
  6830  000050  EF2D  F000         	goto	i2l313
  6831  000054                     i2u192_40:
  6832  000054                     
  6833                           ;mcc_generated_files/interrupt_manager.c: 23:         spi_rx_data_ready = 1;
  6834  000054  0E01               	movlw	1
  6835  000056  6E5B               	movwf	_spi_rx_data_ready^0,c	;volatile
  6836  000058                     
  6837                           ;mcc_generated_files/interrupt_manager.c: 24:         PIR1bits.SSPIF = 0;
  6838  000058  969E               	bcf	158,3,c	;volatile
  6839  00005A                     i2l313:
  6840  00005A  C003  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  6841  00005E  C002  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  6842  000062  925C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  6843  000064  0011               	retfie		f
  6844  000066                     __end_of_INTERRUPT_InterruptManager:
  6845                           	callstack 0
  6846                           
  6847 ;; *************** function _TMR0_ISR *****************
  6848 ;; Defined at:
  6849 ;;		line 91 in file "mcc_generated_files/tmr0.c"
  6850 ;; Parameters:    Size  Location     Type
  6851 ;;		None
  6852 ;; Auto vars:     Size  Location     Type
  6853 ;;		None
  6854 ;; Return value:  Size  Location     Type
  6855 ;;                  1    wreg      void 
  6856 ;; Registers used:
  6857 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  6858 ;; Tracked objects:
  6859 ;;		On entry : 0/0
  6860 ;;		On exit  : 0/0
  6861 ;;		Unchanged: 0/0
  6862 ;; Data sizes:     COMRAM   BANK0   BANK1
  6863 ;;      Params:         0       0       0
  6864 ;;      Locals:         0       0       0
  6865 ;;      Temps:          0       0       0
  6866 ;;      Totals:         0       0       0
  6867 ;;Total ram usage:        0 bytes
  6868 ;; Hardware stack levels used: 1
  6869 ;; Hardware stack levels required when called: 2
  6870 ;; This function calls:
  6871 ;;		_TMR0_CallBack
  6872 ;; This function is called by:
  6873 ;;		_INTERRUPT_InterruptManager
  6874 ;; This function uses a non-reentrant model
  6875 ;;
  6876                           
  6877                           	psect	text33
  6878  0018EC                     __ptext33:
  6879                           	callstack 0
  6880  0018EC                     _TMR0_ISR:
  6881                           	callstack 22
  6882  0018EC                     
  6883                           ;mcc_generated_files/tmr0.c: 95:     INTCONbits.TMR0IF = 0;
  6884  0018EC  94F2               	bcf	242,2,c	;volatile
  6885  0018EE                     
  6886                           ;mcc_generated_files/tmr0.c: 99:     TMR0H = timer0ReloadVal >> 8;
  6887  0018EE  505A               	movf	(_timer0ReloadVal+1)^0,w,c	;volatile
  6888  0018F0  6ED7               	movwf	215,c	;volatile
  6889  0018F2                     
  6890                           ;mcc_generated_files/tmr0.c: 100:     TMR0L = (uint8_t) timer0ReloadVal;
  6891  0018F2  C059  FFD6         	movff	_timer0ReloadVal,4054	;volatile
  6892  0018F6                     
  6893                           ;mcc_generated_files/tmr0.c: 104:     TMR0_CallBack();
  6894  0018F6  ECC2  F00B         	call	_TMR0_CallBack	;wreg free
  6895  0018FA  0012               	return		;funcret
  6896  0018FC                     __end_of_TMR0_ISR:
  6897                           	callstack 0
  6898                           
  6899 ;; *************** function _TMR0_CallBack *****************
  6900 ;; Defined at:
  6901 ;;		line 109 in file "mcc_generated_files/tmr0.c"
  6902 ;; Parameters:    Size  Location     Type
  6903 ;;		None
  6904 ;; Auto vars:     Size  Location     Type
  6905 ;;		None
  6906 ;; Return value:  Size  Location     Type
  6907 ;;                  1    wreg      void 
  6908 ;; Registers used:
  6909 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  6910 ;; Tracked objects:
  6911 ;;		On entry : 0/0
  6912 ;;		On exit  : 0/0
  6913 ;;		Unchanged: 0/0
  6914 ;; Data sizes:     COMRAM   BANK0   BANK1
  6915 ;;      Params:         0       0       0
  6916 ;;      Locals:         0       0       0
  6917 ;;      Temps:          0       0       0
  6918 ;;      Totals:         0       0       0
  6919 ;;Total ram usage:        0 bytes
  6920 ;; Hardware stack levels used: 1
  6921 ;; Hardware stack levels required when called: 1
  6922 ;; This function calls:
  6923 ;;		Absolute function
  6924 ;;		_TMR0_DefaultInterruptHandler
  6925 ;;		_blink_led
  6926 ;; This function is called by:
  6927 ;;		_TMR0_ISR
  6928 ;; This function uses a non-reentrant model
  6929 ;;
  6930                           
  6931                           	psect	text34
  6932  001784                     __ptext34:
  6933                           	callstack 0
  6934  001784                     _TMR0_CallBack:
  6935                           	callstack 22
  6936  001784                     
  6937                           ;mcc_generated_files/tmr0.c: 113:     if(TMR0_InterruptHandler)
  6938  001784  0100               	movlb	0	; () banked
  6939  001786  51C6               	movf	_TMR0_InterruptHandler& (0+255),w,b
  6940  001788  11C7               	iorwf	(_TMR0_InterruptHandler+1)& (0+255),w,b
  6941  00178A  B4D8               	btfsc	status,2,c
  6942  00178C  EFCA  F00B         	goto	i2u159_41
  6943  001790  EFCC  F00B         	goto	i2u159_40
  6944  001794                     i2u159_41:
  6945  001794  EFD9  F00B         	goto	i2l282
  6946  001798                     i2u159_40:
  6947  001798                     
  6948                           ; BSR set to: 0
  6949                           ;mcc_generated_files/tmr0.c: 114:     {;mcc_generated_files/tmr0.c: 115:         TMR0_In
      +                          terruptHandler();
  6950  001798  D802               	call	i2u160_48
  6951  00179A  EFD9  F00B         	goto	i2u160_49
  6952  00179E                     i2u160_48:
  6953  00179E  0005               	push	
  6954  0017A0  6EFA               	movwf	pclath,c
  6955  0017A2  51C6               	movf	_TMR0_InterruptHandler& (0+255),w,b
  6956  0017A4  6EFD               	movwf	tosl,c
  6957  0017A6  51C7               	movf	(_TMR0_InterruptHandler+1)& (0+255),w,b
  6958  0017A8  6EFE               	movwf	tosh,c
  6959  0017AA  50F8               	movf	tblptru,w,c
  6960  0017AC  6EFF               	movwf	tosu,c
  6961  0017AE  50FA               	movf	pclath,w,c
  6962  0017B0  0012               	return		;indir
  6963  0017B2                     i2u160_49:
  6964  0017B2                     i2l282:
  6965  0017B2  0012               	return		;funcret
  6966  0017B4                     __end_of_TMR0_CallBack:
  6967                           	callstack 0
  6968                           
  6969 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  6970 ;; Defined at:
  6971 ;;		line 123 in file "mcc_generated_files/tmr0.c"
  6972 ;; Parameters:    Size  Location     Type
  6973 ;;		None
  6974 ;; Auto vars:     Size  Location     Type
  6975 ;;		None
  6976 ;; Return value:  Size  Location     Type
  6977 ;;                  1    wreg      void 
  6978 ;; Registers used:
  6979 ;;		None
  6980 ;; Tracked objects:
  6981 ;;		On entry : 0/0
  6982 ;;		On exit  : 0/0
  6983 ;;		Unchanged: 0/0
  6984 ;; Data sizes:     COMRAM   BANK0   BANK1
  6985 ;;      Params:         0       0       0
  6986 ;;      Locals:         0       0       0
  6987 ;;      Temps:          0       0       0
  6988 ;;      Totals:         0       0       0
  6989 ;;Total ram usage:        0 bytes
  6990 ;; Hardware stack levels used: 1
  6991 ;; This function calls:
  6992 ;;		Nothing
  6993 ;; This function is called by:
  6994 ;;		_TMR0_Initialize
  6995 ;;		_TMR0_CallBack
  6996 ;; This function uses a non-reentrant model
  6997 ;;
  6998                           
  6999                           	psect	text35
  7000  00195C                     __ptext35:
  7001                           	callstack 0
  7002  00195C                     _TMR0_DefaultInterruptHandler:
  7003                           	callstack 22
  7004  00195C  0012               	return		;funcret
  7005  00195E                     __end_of_TMR0_DefaultInterruptHandler:
  7006                           	callstack 0
  7007                           
  7008 ;; *************** function _blink_led *****************
  7009 ;; Defined at:
  7010 ;;		line 18 in file "main.c"
  7011 ;; Parameters:    Size  Location     Type
  7012 ;;		None
  7013 ;; Auto vars:     Size  Location     Type
  7014 ;;		None
  7015 ;; Return value:  Size  Location     Type
  7016 ;;                  1    wreg      void 
  7017 ;; Registers used:
  7018 ;;		wreg, status,2, status,0
  7019 ;; Tracked objects:
  7020 ;;		On entry : 0/0
  7021 ;;		On exit  : 0/0
  7022 ;;		Unchanged: 0/0
  7023 ;; Data sizes:     COMRAM   BANK0   BANK1
  7024 ;;      Params:         0       0       0
  7025 ;;      Locals:         0       0       0
  7026 ;;      Temps:          1       0       0
  7027 ;;      Totals:         1       0       0
  7028 ;;Total ram usage:        1 bytes
  7029 ;; Hardware stack levels used: 1
  7030 ;; This function calls:
  7031 ;;		Nothing
  7032 ;; This function is called by:
  7033 ;;		_main
  7034 ;;		_TMR0_CallBack
  7035 ;; This function uses a non-reentrant model
  7036 ;;
  7037                           
  7038                           	psect	text36
  7039  0017FE                     __ptext36:
  7040                           	callstack 0
  7041  0017FE                     _blink_led:
  7042                           	callstack 22
  7043  0017FE  B289               	btfsc	137,1,c	;volatile
  7044  001800  EF04  F00C         	goto	i2u151_41
  7045  001804  EF07  F00C         	goto	i2u151_40
  7046  001808                     i2u151_41:
  7047  001808  0E01               	movlw	1
  7048  00180A  EF08  F00C         	goto	i2u151_46
  7049  00180E                     i2u151_40:
  7050  00180E  0E00               	movlw	0
  7051  001810                     i2u151_46:
  7052  001810  0AFF               	xorlw	255
  7053  001812  6E01               	movwf	??_blink_led^0,c
  7054  001814  4601               	rlncf	??_blink_led^0,f,c
  7055  001816  5089               	movf	137,w,c	;volatile
  7056  001818  1801               	xorwf	??_blink_led^0,w,c
  7057  00181A  0BFD               	andlw	-3
  7058  00181C  1801               	xorwf	??_blink_led^0,w,c
  7059  00181E  6E89               	movwf	137,c	;volatile
  7060  001820  0012               	return		;funcret
  7061  001822                     __end_of_blink_led:
  7062                           	callstack 0
  7063                           
  7064                           	psect	text37
  7065  000000                     __ptext37:
  7066                           	callstack 0
  7067  000000                     
  7068                           	psect	rparam
  7069  0000                     
  7070                           	psect	temp
  7071  00005C                     btemp:
  7072                           	callstack 0
  7073  00005C                     	ds	1
  7074  0000                     int$flags	set	btemp
  7075  0000                     wtemp8	set	btemp+1
  7076  0000                     ttemp5	set	btemp+1
  7077  0000                     ttemp6	set	btemp+4
  7078  0000                     ttemp7	set	btemp+8
  7079                           
  7080                           	psect	idloc
  7081                           
  7082                           ;Config register IDLOC0 @ 0x200000
  7083                           ;	unspecified, using default values
  7084  200000                     	org	2097152
  7085  200000  FF                 	db	255
  7086                           
  7087                           ;Config register IDLOC1 @ 0x200001
  7088                           ;	unspecified, using default values
  7089  200001                     	org	2097153
  7090  200001  FF                 	db	255
  7091                           
  7092                           ;Config register IDLOC2 @ 0x200002
  7093                           ;	unspecified, using default values
  7094  200002                     	org	2097154
  7095  200002  FF                 	db	255
  7096                           
  7097                           ;Config register IDLOC3 @ 0x200003
  7098                           ;	unspecified, using default values
  7099  200003                     	org	2097155
  7100  200003  FF                 	db	255
  7101                           
  7102                           ;Config register IDLOC4 @ 0x200004
  7103                           ;	unspecified, using default values
  7104  200004                     	org	2097156
  7105  200004  FF                 	db	255
  7106                           
  7107                           ;Config register IDLOC5 @ 0x200005
  7108                           ;	unspecified, using default values
  7109  200005                     	org	2097157
  7110  200005  FF                 	db	255
  7111                           
  7112                           ;Config register IDLOC6 @ 0x200006
  7113                           ;	unspecified, using default values
  7114  200006                     	org	2097158
  7115  200006  FF                 	db	255
  7116                           
  7117                           ;Config register IDLOC7 @ 0x200007
  7118                           ;	unspecified, using default values
  7119  200007                     	org	2097159
  7120  200007  FF                 	db	255
  7121                           
  7122                           	psect	config
  7123                           
  7124                           ; Padding undefined space
  7125  300000                     	org	3145728
  7126  300000  FF                 	db	255
  7127                           
  7128                           ;Config register CONFIG1H @ 0x300001
  7129                           ;	Oscillator Selection bits
  7130                           ;	FOSC = IRC, Internal RC oscillator
  7131                           ;	4 X PLL Enable bit
  7132                           ;	PLLEN = OFF, PLL is under software control
  7133                           ;	Primary Clock Enable bit
  7134                           ;	PCLKEN = OFF, Primary clock is under software control
  7135                           ;	Fail-Safe Clock Monitor Enable
  7136                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  7137                           ;	Internal/External Oscillator Switchover bit
  7138                           ;	IESO = OFF, Oscillator Switchover mode disabled
  7139  300001                     	org	3145729
  7140  300001  08                 	db	8
  7141                           
  7142                           ;Config register CONFIG2L @ 0x300002
  7143                           ;	Power-up Timer Enable bit
  7144                           ;	PWRTEN = OFF, PWRT disabled
  7145                           ;	Brown-out Reset Enable bits
  7146                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  7147                           ;	Brown Out Reset Voltage bits
  7148                           ;	BORV = 19, VBOR set to 1.9 V nominal
  7149  300002                     	org	3145730
  7150  300002  1F                 	db	31
  7151                           
  7152                           ;Config register CONFIG2H @ 0x300003
  7153                           ;	Watchdog Timer Enable bit
  7154                           ;	WDTEN = OFF, WDT is controlled by SWDTEN bit of the WDTCON register
  7155                           ;	Watchdog Timer Postscale Select bits
  7156                           ;	WDTPS = 32768, 1:32768
  7157  300003                     	org	3145731
  7158  300003  1E                 	db	30
  7159                           
  7160                           ; Padding undefined space
  7161  300004                     	org	3145732
  7162  300004  FF                 	db	255
  7163                           
  7164                           ;Config register CONFIG3H @ 0x300005
  7165                           ;	HFINTOSC Fast Start-up bit
  7166                           ;	HFOFST = OFF, The system clock is held off until the HFINTOSC is stable.
  7167                           ;	MCLR Pin Enable bit
  7168                           ;	MCLRE = OFF, RA3 input pin enabled; MCLR disabled
  7169  300005                     	org	3145733
  7170  300005  00                 	db	0
  7171                           
  7172                           ;Config register CONFIG4L @ 0x300006
  7173                           ;	Stack Full/Underflow Reset Enable bit
  7174                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
  7175                           ;	Single-Supply ICSP Enable bit
  7176                           ;	LVP = OFF, Single-Supply ICSP disabled
  7177                           ;	Boot Block Size Select bit
  7178                           ;	BBSIZ = OFF, 1kW boot block size
  7179                           ;	Extended Instruction Set Enable bit
  7180                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  7181                           ;	Background Debugger Enable bit
  7182                           ;	DEBUG = 0x1, unprogrammed default
  7183  300006                     	org	3145734
  7184  300006  80                 	db	128
  7185                           
  7186                           ; Padding undefined space
  7187  300007                     	org	3145735
  7188  300007  FF                 	db	255
  7189                           
  7190                           ;Config register CONFIG5L @ 0x300008
  7191                           ;	Code Protection bit
  7192                           ;	CP0 = OFF, Block 0 not code-protected
  7193                           ;	Code Protection bit
  7194                           ;	CP1 = OFF, Block 1 not code-protected
  7195  300008                     	org	3145736
  7196  300008  03                 	db	3
  7197                           
  7198                           ;Config register CONFIG5H @ 0x300009
  7199                           ;	Boot Block Code Protection bit
  7200                           ;	CPB = OFF, Boot block not code-protected
  7201                           ;	Data EEPROM Code Protection bit
  7202                           ;	CPD = OFF, Data EEPROM not code-protected
  7203  300009                     	org	3145737
  7204  300009  C0                 	db	192
  7205                           
  7206                           ;Config register CONFIG6L @ 0x30000A
  7207                           ;	Write Protection bit
  7208                           ;	WRT0 = OFF, Block 0 not write-protected
  7209                           ;	Write Protection bit
  7210                           ;	WRT1 = OFF, Block 1 not write-protected
  7211  30000A                     	org	3145738
  7212  30000A  03                 	db	3
  7213                           
  7214                           ;Config register CONFIG6H @ 0x30000B
  7215                           ;	Configuration Register Write Protection bit
  7216                           ;	WRTC = OFF, Configuration registers not write-protected
  7217                           ;	Boot Block Write Protection bit
  7218                           ;	WRTB = OFF, Boot block not write-protected
  7219                           ;	Data EEPROM Write Protection bit
  7220                           ;	WRTD = OFF, Data EEPROM not write-protected
  7221  30000B                     	org	3145739
  7222  30000B  E0                 	db	224
  7223                           
  7224                           ;Config register CONFIG7L @ 0x30000C
  7225                           ;	Table Read Protection bit
  7226                           ;	EBTR0 = OFF, Block 0 not protected from table reads executed in other blocks
  7227                           ;	Table Read Protection bit
  7228                           ;	EBTR1 = OFF, Block 1 not protected from table reads executed in other blocks
  7229  30000C                     	org	3145740
  7230  30000C  03                 	db	3
  7231                           
  7232                           ;Config register CONFIG7H @ 0x30000D
  7233                           ;	Boot Block Table Read Protection bit
  7234                           ;	EBTRB = OFF, Boot block not protected from table reads executed in other blocks
  7235  30000D                     	org	3145741
  7236  30000D  40                 	db	64
  7237                           tosu	equ	0xFFF
  7238                           tosh	equ	0xFFE
  7239                           tosl	equ	0xFFD
  7240                           stkptr	equ	0xFFC
  7241                           pclatu	equ	0xFFB
  7242                           pclath	equ	0xFFA
  7243                           pcl	equ	0xFF9
  7244                           tblptru	equ	0xFF8
  7245                           tblptrh	equ	0xFF7
  7246                           tblptrl	equ	0xFF6
  7247                           tablat	equ	0xFF5
  7248                           prodh	equ	0xFF4
  7249                           prodl	equ	0xFF3
  7250                           indf0	equ	0xFEF
  7251                           postinc0	equ	0xFEE
  7252                           postdec0	equ	0xFED
  7253                           preinc0	equ	0xFEC
  7254                           plusw0	equ	0xFEB
  7255                           fsr0h	equ	0xFEA
  7256                           fsr0l	equ	0xFE9
  7257                           wreg	equ	0xFE8
  7258                           indf1	equ	0xFE7
  7259                           postinc1	equ	0xFE6
  7260                           postdec1	equ	0xFE5
  7261                           preinc1	equ	0xFE4
  7262                           plusw1	equ	0xFE3
  7263                           fsr1h	equ	0xFE2
  7264                           fsr1l	equ	0xFE1
  7265                           bsr	equ	0xFE0
  7266                           indf2	equ	0xFDF
  7267                           postinc2	equ	0xFDE
  7268                           postdec2	equ	0xFDD
  7269                           preinc2	equ	0xFDC
  7270                           plusw2	equ	0xFDB
  7271                           fsr2h	equ	0xFDA
  7272                           fsr2l	equ	0xFD9
  7273                           status	equ	0xFD8

Data Sizes:
    Strings     1097
    Constant    38
    Data        15
    BSS         88
    Persistent  10
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     88      91
    BANK0           160      3     113
    BANK1           256      0       0

Pointer List with Targets:

    S35$3$0	PTR void  size(2) Largest target is 0

    S35$4$0	PTR void  size(2) Largest target is 0

    S35$5$0	PTR void  size(2) Largest target is 0

    Absolute function$0	PTR FTN()void  size(2) Largest target is 0

    printf$1703	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_86(CODE[17]), STR_85(CODE[17]), 

    printf@cp	PTR const unsigned char  size(2) Largest target is 32
		 -> STR_84(CODE[7]), ?_printf(COMRAM[2]), STR_56(CODE[3]), STR_55(CODE[4]), 
		 -> STR_52(CODE[3]), STR_51(CODE[4]), STR_38(CODE[4]), STR_37(CODE[3]), 
		 -> STR_36(CODE[4]), STR_35(CODE[3]), STR_30(CODE[2]), STR_29(CODE[3]), 
		 -> STR_28(CODE[2]), STR_27(CODE[2]), STR_24(CODE[2]), STR_23(CODE[3]), 
		 -> STR_22(CODE[2]), STR_21(CODE[2]), STR_18(CODE[3]), STR_17(CODE[3]), 
		 -> STR_16(CODE[4]), STR_15(CODE[3]), ADDRESS_DATA_TXPIPE0(BANK0[5]), ADDRESS_DATA_RXPIPE0(BANK0[5]), 
		 -> bufferRX(BANK0[32]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 66
		 -> STR_83(CODE[23]), STR_82(CODE[23]), STR_81(CODE[23]), STR_80(CODE[23]), 
		 -> STR_79(CODE[23]), STR_78(CODE[23]), STR_77(CODE[4]), STR_76(CODE[3]), 
		 -> STR_75(CODE[19]), STR_74(CODE[6]), STR_73(CODE[3]), STR_72(CODE[22]), 
		 -> STR_71(CODE[6]), STR_70(CODE[3]), STR_69(CODE[22]), STR_68(CODE[6]), 
		 -> STR_67(CODE[3]), STR_66(CODE[22]), STR_65(CODE[6]), STR_64(CODE[3]), 
		 -> STR_63(CODE[22]), STR_62(CODE[4]), STR_61(CODE[3]), STR_60(CODE[22]), 
		 -> STR_59(CODE[4]), STR_58(CODE[3]), STR_57(CODE[22]), STR_54(CODE[25]), 
		 -> STR_53(CODE[41]), STR_50(CODE[49]), STR_49(CODE[6]), STR_48(CODE[4]), 
		 -> STR_47(CODE[2]), STR_46(CODE[3]), STR_45(CODE[4]), STR_44(CODE[4]), 
		 -> STR_43(CODE[8]), STR_42(CODE[5]), STR_41(CODE[9]), STR_40(CODE[7]), 
		 -> STR_39(CODE[7]), STR_34(CODE[51]), STR_33(CODE[28]), STR_32(CODE[60]), 
		 -> STR_31(CODE[54]), STR_26(CODE[11]), STR_25(CODE[28]), STR_20(CODE[11]), 
		 -> STR_19(CODE[23]), STR_14(CODE[53]), STR_13(CODE[23]), STR_12(CODE[26]), 
		 -> STR_11(CODE[66]), STR_10(CODE[29]), STR_9(CODE[66]), STR_8(CODE[2]), 
		 -> STR_7(CODE[5]), STR_6(CODE[25]), STR_5(CODE[66]), STR_4(CODE[33]), 
		 -> STR_3(CODE[66]), STR_2(CODE[19]), STR_1(CODE[20]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 

    nrf24_printf_rf_config$1634	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_56(CODE[3]), STR_55(CODE[4]), 

    nrf24_printf_rf_config$1628	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_52(CODE[3]), STR_51(CODE[4]), 

    nrf24_printf_rf_config$1612	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_36(CODE[4]), STR_35(CODE[3]), 

    nrf24_printf_rf_config$1611	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_38(CODE[4]), STR_37(CODE[3]), 

    nrf24_printf_rf_config$1600	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_28(CODE[2]), STR_27(CODE[2]), 

    nrf24_printf_rf_config$1599	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_30(CODE[2]), STR_29(CODE[3]), 

    nrf24_printf_rf_config$1590	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_22(CODE[2]), STR_21(CODE[2]), 

    nrf24_printf_rf_config$1589	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_24(CODE[2]), STR_23(CODE[3]), 

    nrf24_printf_rf_config$1580	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_16(CODE[4]), STR_15(CODE[3]), 

    nrf24_printf_rf_config$1579	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_18(CODE[3]), STR_17(CODE[3]), 

    nrf24_read_rf_data@buffer	PTR unsigned char  size(2) Largest target is 32
		 -> bufferRX(BANK0[32]), 

    nrf24_read_buff@buffer	PTR unsigned char  size(2) Largest target is 32
		 -> nrf24_printf_rf_config@buf(COMRAM[5]), bufferRX(BANK0[32]), 

    nrf24_write_buff@buffer	PTR unsigned char  size(2) Largest target is 5
		 -> ADDRESS_DATA_TXPIPE0(BANK0[5]), ADDRESS_DATA_RXPIPE0(BANK0[5]), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> blink_led(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> blink_led(), TMR0_DefaultInterruptHandler(), Absolute function(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), Absolute function(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), Absolute function(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), Absolute function(), 

    S35$spiISR	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    spiMaster.spiISR	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S35$setSpiISR	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    spiMaster.setSpiISR	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    S35$readByte	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SPI1_ReadByte(), 

    spiMaster.readByte	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SPI1_ReadByte(), 

    S35$writeByte	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> SPI1_WriteByte(), 

    spiMaster.writeByte	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> SPI1_WriteByte(), 

    S35$readBlock	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_ReadBlock(), 

    spiMaster.readBlock	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_ReadBlock(), 

    S35$writeBlock	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_WriteBlock(), 

    spiMaster.writeBlock	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_WriteBlock(), 

    S35$exchangeBlock	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_ExchangeBlock(), 

    spiMaster.exchangeBlock	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_ExchangeBlock(), 

    S35$exchangeByte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SPI1_ExchangeByte(), 

    spiMaster.exchangeByte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SPI1_ExchangeByte(), 

    S35$spiOpen	PTR FTN()_Bool  size(2) Largest target is 1
		 -> MASTER0_open(), 

    spiMaster.spiOpen	PTR FTN()_Bool  size(2) Largest target is 1
		 -> MASTER0_open(), 

    S35$spiClose	PTR FTN()void  size(2) Largest target is 1
		 -> SPI1_Close(), 

    spiMaster.spiClose	PTR FTN()void  size(2) Largest target is 1
		 -> SPI1_Close(), 


Critical Paths under _main in COMRAM

    _main->_nrf24_rf_init
    _nrf24_rf_init->_nrf24_printf_rf_config
    _nrf24_write_buff->_SPI1_ExchangeByte
    _nrf24_set_rf_mode->_nrf24_write_register
    _nrf24_set_channel_frq->_nrf24_write_register
    _nrf24_printf_rf_config->_printf
    _printf->___lwmod
    _putch->_EUSART1_Write
    ___lwmod->___lwdiv
    _nrf24_read_rf_data->_nrf24_read_buff
    _nrf24_read_buff->_SPI1_ExchangeByte
    _nrf24_flush_tx_rx->_nrf24_write_register
    _nrf24_write_register->_SPI1_ExchangeByte
    _nrf24_is_rf_data_available->_nrf24_read_register
    _nrf24_read_register->_SPI1_ExchangeByte
    _SYSTEM_Initialize->_EUSART1_Initialize
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _TMR0_CallBack->_blink_led

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   58631
                                              0 BANK0      3     3      0
                          _SPI1_Open
                  _SYSTEM_Initialize
           _TMR0_SetInterruptHandler
         _nrf24_is_rf_data_available
             _nrf24_printf_rf_config
                 _nrf24_read_rf_data
                      _nrf24_rf_init
                             _printf
 ---------------------------------------------------------------------------------
 (1) _nrf24_rf_init                                        4     3      1   29474
                                             84 COMRAM     4     3      1
                          _SPI1_Open
             _nrf24_printf_rf_config
                _nrf24_read_register
              _nrf24_set_channel_frq
                  _nrf24_set_rf_mode
                   _nrf24_write_buff
               _nrf24_write_register
                             _printf
 ---------------------------------------------------------------------------------
 (2) _nrf24_write_buff                                     5     2      3     738
                                              5 COMRAM     5     2      3
                  _SPI1_ExchangeByte
 ---------------------------------------------------------------------------------
 (2) _nrf24_set_rf_mode                                    3     3      0    1545
                                              7 COMRAM     3     3      0
               _nrf24_write_register
 ---------------------------------------------------------------------------------
 (2) _nrf24_set_channel_frq                                1     1      0    1545
                                              7 COMRAM     1     1      0
               _nrf24_write_register
 ---------------------------------------------------------------------------------
 (2) _nrf24_printf_rf_config                              35    35      0   14070
                                             49 COMRAM    35    35      0
                    _nrf24_read_buff
                _nrf24_read_register
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              38    24     14    9743
                                             15 COMRAM    34    20     14
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      62
                                              4 COMRAM     1     1      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (3) _EUSART1_Write                                        1     1      0      31
                                              3 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              3     3      0      99
                                              3 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     412
                                              3 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     412
                                             10 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     601
                                              3 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _SPI1_Open                                            1     1      0       0
 ---------------------------------------------------------------------------------
 (1) _nrf24_read_rf_data                                   2     0      2    4163
                                             10 COMRAM     2     0      2
                  _nrf24_flush_tx_rx
                    _nrf24_read_buff
               _nrf24_write_register
 ---------------------------------------------------------------------------------
 (3) _nrf24_read_buff                                      5     2      3     949
                                              5 COMRAM     5     2      3
                  _SPI1_ExchangeByte
 ---------------------------------------------------------------------------------
 (2) _nrf24_flush_tx_rx                                    1     1      0    1579
                                              7 COMRAM     1     1      0
                  _SPI1_ExchangeByte
               _nrf24_write_register
 ---------------------------------------------------------------------------------
 (2) _nrf24_write_register                                 2     1      1    1514
                                              5 COMRAM     2     1      1
                  _SPI1_ExchangeByte
 ---------------------------------------------------------------------------------
 (1) _nrf24_is_rf_data_available                           1     1      0     130
                                              7 COMRAM     1     1      0
                _nrf24_read_register
 ---------------------------------------------------------------------------------
 (2) _nrf24_read_register                                  2     2      0     130
                                              5 COMRAM     2     2      0
                  _SPI1_ExchangeByte
 ---------------------------------------------------------------------------------
 (3) _SPI1_ExchangeByte                                    2     2      0      65
                                              3 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     741
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _SPI1_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      2     2      0     211
                                              5 COMRAM     2     2      0
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR0_SetInterruptHandler                             2     0      2     211
                                              3 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   5     5      0     530
                                              5 COMRAM     3     3      0
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2     121
                                              3 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2     121
                                              3 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2     121
                                              3 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _INTERRUPT_InterruptManager                           2     2      0       0
                                              1 COMRAM     2     2      0
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (7) _TMR0_ISR                                             0     0      0       0
                      _TMR0_CallBack
 ---------------------------------------------------------------------------------
 (8) _TMR0_CallBack                                        0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
                          _blink_led *
 ---------------------------------------------------------------------------------
 (9) _blink_led                                            1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (9) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (9) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SPI1_Open
   _SYSTEM_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _SPI1_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
   _TMR0_SetInterruptHandler
   _nrf24_is_rf_data_available
     _nrf24_read_register
       _SPI1_ExchangeByte
   _nrf24_printf_rf_config
     _nrf24_read_buff
       _SPI1_ExchangeByte
     _nrf24_read_register
     _printf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _isdigit
       _putch
         _EUSART1_Write
   _nrf24_read_rf_data
     _nrf24_flush_tx_rx
       _SPI1_ExchangeByte
       _nrf24_write_register
         _SPI1_ExchangeByte
     _nrf24_read_buff
     _nrf24_write_register
   _nrf24_rf_init
     _SPI1_Open
     _nrf24_printf_rf_config
     _nrf24_read_register
     _nrf24_set_channel_frq
       _nrf24_write_register
     _nrf24_set_rf_mode
       _nrf24_write_register
     _nrf24_write_buff
       _SPI1_ExchangeByte
     _nrf24_write_register
     _printf
   _printf

 _INTERRUPT_InterruptManager (ROOT)
   _TMR0_ISR
     _TMR0_CallBack
       Absolute function(Fake) *
       _TMR0_DefaultInterruptHandler *
       _blink_led *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1FF      0       0      23        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      3      71       5       70.6%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     58      5B       1       96.8%
BITBIGSFRlll        1E      0       0      21        0.0%
BITBIGSFRhlhh       1A      0       0       9        0.0%
BITBIGSFRlhhhhl      D      0       0      14        0.0%
BITBIGSFRhh          D      0       0       8        0.0%
BITBIGSFRlhhllh      9      0       0      16        0.0%
BITBIGSFRllh         9      0       0      20        0.0%
BITBIGSFRlhhlll      8      0       0      18        0.0%
BITBIGSFRlhhhl       7      0       0      15        0.0%
BITBIGSFRlhhhhh      6      0       0      12        0.0%
BITBIGSFRlhl         6      0       0      19        0.0%
BITBIGSFRlhhhhh      2      0       0      11        0.0%
BITBIGSFRlhhhhh      1      0       0      13        0.0%
BITBIGSFRlhhllh      1      0       0      17        0.0%
BITBIGSFRhll         1      0       0      10        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      CC      22        0.0%
DATA                 0      0      CC       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Sun Aug 14 10:20:18 2022

                             _SPI1_ExchangeByte 16E4                                               _i 0094  
                            _SPI1_ExchangeBlock 000000                                     _SSPSTATbits 000FC7  
                                            l50 1924                                              l71 1882  
                                            l47 18D4                              ?_SPI1_ExchangeByte 0001  
                           ___wmul@multiplicand 0006                                 _timer0ReloadVal 0059  
                                           l115 15C8                                             l204 16EE  
                                           l142 18EA                                             l160 194C  
                                           l208 171A                                             l305 195A  
                                           l410 144E                                             l163 1942  
                                           l403 13CC                                             l139 18D8  
                                           l260 1750                                             l500 1616  
                                           l148 192E                                             l420 1664  
                                           l413 18A4                                             l166 1956  
                                           l430 161A                                             l193 17FC  
                                           l417 18BA                                             l425 16A4  
                                           l427 16A6                                             l451 13C8  
                                           l371 12DC                                             l516 0152  
                                           l372 12DC                                             l285 1938  
                                           l437 1660                                             l197 18A0  
                                           l621 0BE2                                             l526 0212  
                                           l462 1578                                             l473 1862  
                                           l476 1842                                             l581 0A68  
                                           l663 0FCA                                             l479 1918  
                                           l488 15CA                                             l673 1062  
                                           l692 17D8                                             l669 107A  
                                           l689 11A0                                             _ret 0095  
                       ??_nrf24_set_channel_frq 0008                             ??_SPI1_ExchangeByte 0004  
                                           tosl 000FFD                                             wreg 000FE8  
                            _nrf24_read_rf_data 1822                                  ?_nrf24_rf_init 0055  
                  ??_nrf24_is_rf_data_available 0008                                            l1171 14BA  
                                          l1181 151E                                            l4000 142E  
                                          l4010 18AE                                            l4002 143E  
                                          l1178 14C2                                            l4100 17EC  
                                          l4012 18B6                                            l4004 1444  
                                          l4020 1622                                            l1188 1526  
                                          l1356 1782                                            l4102 17F4  
                                          l4014 18B8                                            l4006 1446  
                                          l4030 1652                                            l4022 162A  
                                          l4110 006A                                            l4104 17F6  
                                          l4008 18A6                                            l4032 165E  
                                          l4024 163A                                            l4200 038C  
                                          l4120 00A2                                            l4112 0072  
                                          l4050 1864                                            l4106 17F8  
                                          l4026 163E                                            l4018 161C  
                                          l4042 189E                                            l4034 1884  
                                          l4210 03EC                                            l4202 039A  
                                          l4130 0128                                            l4122 00AE  
                                          l4114 0080                                            l4052 1870  
                                          l4108 17FA                                            l4060 173C  
                                          l4028 1640                                            l4036 1892  
                                          l4300 075E                                            l4212 03FC  
                                          l4220 0454                                            l4204 03A6  
                                          l4140 014A                                            l4124 00B6  
                                          l4116 008C                                            l4070 157A  
                                          l4046 191A                                            l4062 173E  
                                          l4054 171C                                            l4038 1898  
                                          l4310 07B0                                            l4302 0770  
                                          l4230 04A4                                            l4222 0464  
                                          l4214 040C                                            l4206 03AE  
                                          l4150 01B6                                            l4142 017E  
                                          l4126 0106                                            l4118 0094  
                                          l4080 1594                                            l4072 1586  
                                          l4048 191C                                            l4064 1740  
                                          l4056 171E                                            l4320 0820  
                                          l4312 07EA                                            l4304 0784  
                                          l4240 0506                                            l4224 0474  
                                          l4208 03DC                                            l4152 01C6  
                                          l4144 018A                                            l4136 012C  
                                          l4128 010E                                            l4400 152E  
                                          l4090 159E                                            l4082 1596  
                                          l4074 1588                                            l4066 174C  
                                          l4058 1726                                            l4330 0898  
                                          l4322 0842                                            l4314 07F2  
                                          l4306 078C                                            l4250 0578  
                                          l4242 0514                                            l4226 0484  
                                          l4234 04B4                                            l4218 041C  
                                          l4170 024A                                            l4162 01EC  
                                          l4154 01CE                                            l4146 0192  
                                          l4138 013E                                            l4402 1538  
                                          l4410 154E                                            l4092 15AA  
                                          l4084 1598                                            l4076 158E  
                                          l4068 1958                                            l4420 15E4  
                                          l4340 0912                                            l4332 08AC  
                                          l4324 0844                                            l4316 0804  
                                          l4308 07AE                                            l4260 05DA  
                                          l4252 05B0                                            l4244 0520  
                                          l4228 0494                                            l4236 04F2  
                                          l4180 028E                                            l4172 0252  
                                          l4164 01FE                                            l4156 01E8  
                                          l4148 01B4                                            l4404 153E  
                                          l4500 13AE                                            l4094 15B6  
                                          l4086 159A                                            l4078 1592  
                                          l4510 1844                                            l4430 15FE  
                                          l4422 15E6                                            l3710 1458  
                                          l3702 17B4                                            l4350 095A  
                                          l4342 091A                                            l4334 08B4  
                                          l4326 087E                                            l4318 0818  
                                          l4270 064C                                            l4262 05FC  
                                          l4254 05B8                                            l4246 0528  
                                          l4238 04FE                                            l4190 033C  
                                          l4182 0296                                            l4174 0274  
                                          l4166 020A                                            l4406 1548  
                                          l4502 13BA                                            l4096 15C2  
                                          l4088 159C                                            l4512 185A  
                                          l4432 1600                                            l4424 15E8  
                                          l4416 15CC                                            l4520 1822  
                                          l3720 148E                                            l3712 146A  
                                          l3704 17D0                                            l3800 0BF8  
                                          l4360 09A4                                            l4352 097C  
                                          l4344 092C                                            l4336 08D6  
                                          l4328 0886                                            l4280 0692  
                                          l4272 064E                                            l4264 060E  
                                          l4256 05C6                                            l4248 0570  
                                          l4192 0362                                            l4184 02C4  
                                          l4176 0276                                            l4168 023E  
                                          l4504 13BE                                            l4600 129C  
                                          l4098 17DA                                            l4450 18D0  
                                          l4442 18BC                                            l4434 1606  
                                          l4426 15EE                                            l4418 15D6  
                                          l4522 1834                                            l3722 14A4  
                                          l3714 1472                                            l3730 14C4  
                                          l3810 0C2A                                            l3802 0C00  
                                          l4370 0A2C                                            l4362 09C6  
                                          l4354 097E                                            l4346 093E  
                                          l4338 08D8                                            l4290 06F0  
                                          l4282 069A                                            l4274 0660  
                                          l4266 0622                                            l4258 05D2  
                                          l4194 036A                                            l4186 02CC  
                                          l4178 0286                                            l4506 13C6  
                                          l4602 12B8                                            l4444 18C4  
                                          l4516 1860                                            l4436 1614  
                                          l4428 15FC                                            l4524 183E  
                                          l3724 14AC                                            l3716 147A  
                                          l3708 1450                                            l3740 150A  
                                          l3732 14D6                                            l3900 0F32  
                                          l3820 0CB2                                            l3812 0C66  
                                          l3804 0C12                                            l4372 0A46  
                                          l4364 09E0                                            l4356 0990  
                                          l4348 0952                                            l4292 06F8  
                                          l4284 06BC                                            l4276 066C  
                                          l4268 062A                                            l4196 0378  
                                          l4188 0334                                            l4460 12F4  
                                          l4452 12E6                                            l3750 194E  
                                          l4446 18C8                                            l3726 14AE  
                                          l3718 1488                                            l3742 1512  
                                          l3734 14DE                                            l3670 18D8  
                                          l3902 0F36                                            l3830 0D12  
                                          l3822 0CBE                                            l3814 0C76  
                                          l3806 0C1A                                            l4366 0A02  
                                          l4358 099C                                            l4294 071A  
                                          l4286 06BE                                            l4278 067E  
                                          l4198 0384                                            l4390 1688  
                                          l4382 1666                                            l4470 130C  
                                          l4462 12F6                                            l4454 12EA  
                                          l4448 18CC                                            l3680 1700  
                                          l3728 14B4                                            l3744 1518  
                                          l3736 14E6                                            l3672 18E6  
                                          l3920 0F9C                                            l3904 0F48  
                                          l3832 0D16                                            l3824 0CCA  
                                          l3816 0C96                                            l3808 0C26  
                                          l3840 0DA0                                            l3760 0AA2  
                                          l3752 0A6A                                            l4368 0A0A  
                                          l4296 071C                                            l4288 06D0  
                                          l4392 1690                                            l4384 166E  
                                          l4480 134E                                            l4472 1316  
                                          l4464 12F8                                            l4456 12F0  
                                          l3746 1944                                            l3682 170E  
                                          l3738 14F4                                            l3690 1754  
                                          l3674 1928                                            l3930 0FF0  
                                          l3922 0FAA                                            l3906 0F5E  
                                          l3914 0F64                                            l3850 0DE0  
                                          l3842 0DB6                                            l3834 0D34  
                                          l3826 0CD0                                            l3818 0C9C  
                                          l3770 0B04                                            l3762 0AAC  
                                          l3754 0A76                                            l4298 0756  
                                          l4386 1676                                            l4394 1692  
                                          l4490 137A                                            l4482 1358  
                                          l4474 1320                                            l4466 1300  
                                          l4458 12F2                                            l4570 11C2  
                                          l4562 11A2                                            l3748 193A  
                                          l3684 1712                                            l3676 16E6  
                                          l3692 1758                                            l3940 1042  
                                          l3932 0FF6                                            l3924 0FC0  
                                          l3916 0F88                                            l3860 0E26  
                                          l3844 0DC6                                            l3852 0DEC  
                                          l3828 0CEE                                            l3772 0B0C  
                                          l3780 0B72                                            l3756 0A88  
                                          l4396 190E                                            l4388 1684  
                                          l4492 1380                                            l4484 135E  
                                          l4476 132A                                            l4468 1302  
                                          l4580 1222                                            l4572 11C8  
                                          l4564 11A6                                            l3686 1714  
                                          l3678 16F0                                            l3694 1768  
                                          l3950 10F2                                            l3942 1058  
                                          l3926 0FD8                                            l3934 1012  
                                          l3918 0F94                                            l3862 0E2C  
                                          l3854 0DFC                                            l3846 0DCE  
                                          l3838 0D3C                                            l3790 0BB2  
                                          l3782 0B8E                                            l3774 0B28  
                                          l3766 0AB2                                            l3758 0A92  
                                          l4398 152A                                            l4494 1388  
                                          l4486 1368                                            l4478 133C  
                                          l4590 1248                                            l4582 122E  
                                          l4574 11D6                                            l4566 11A8  
                                          l3696 1778                                            l3960 1132  
                                          l3952 1100                                            l3944 1070  
                                          l3936 1024                                            l3928 0FDE  
                                          l3872 0E5E                                            l3848 0DDC  
                                          l3856 0E04                                            l3792 0BB6  
                                          l3784 0B92                                            l3776 0B50  
                                          l3768 0AE6                                            l4496 1394  
                                          l4488 1372                                            l4592 126A  
                                          l4584 1242                                            l4576 11E6  
                                          l4568 11B6                                            l3698 177C  
                                          l3954 110C                                            l3962 1166  
                                          l3946 107E                                            l3938 102A  
                                          l3882 0E7A                                            l3874 0E60  
                                          l3858 0E14                                            l4770 0D62  
                                          l3786 0B9A                                            l3794 0BD8  
                                          l3778 0B54                                            l4762 1562  
                                          l4498 1398                                            l4594 126E  
                                          l4578 120E                                            l3956 1114  
                                          l3948 10C4                                            l3964 116C  
                                          l4772 0ED6                                            l3876 0E76  
                                          l3868 0E30                                            l3892 0EC0  
                                          l3796 0BE0                                            l3788 0BA2  
                                          l4764 0436                                            l4596 127E  
                                          l3990 13E8                                            l4774 1148  
                                          l3886 0EA8                                            l3894 0EF4  
                                          l3798 0BE8                                            l3966 117E  
                                          l4766 04CC                                            l4598 128A  
                                          l3984 1930                                            l3992 13F2  
                                          l3896 0F10                                            l3888 0EAA  
                                          l4768 0AD0                                            l3994 13F8  
                                          l3986 13CE                                            l3898 0F18  
                                          l3996 140A                                            l3988 13DE  
                                          l3998 141C                                            STR_1 3F29  
                                          STR_2 3F50                                            STR_3 3BB5  
                                          STR_4 3D2B                                            STR_5 3BB5  
                                          STR_6 3DD4                                            STR_7 3FCD  
                                          STR_8 3F3B                                            STR_9 3BB5  
                                          u2000 1778                                            u2001 1774  
                                          u2010 146A                                            u2011 1466  
                                          u2020 1488                                            u2100 0B8E  
                                          u2021 1484                                            u2101 0B8A  
                                          u2030 14A4                                            u2110 0BD4  
                                          u2031 14A0                                            u2111 0BD0  
                                          u2040 14D6                                            u2200 0D30  
                                          u2120 0C12                                            u2041 14D2  
                                          u2201 0D2C                                            u2121 0C0E  
                                          u2050 14F4                                            u2210 0DB6  
                                          u2130 0C56                                            u2051 14F0  
                                          u2211 0DB2                                            u2060 150A  
                                          u2300 0F32                                            u2220 0DDC  
                                          u2140 0C66                                            u2061 1506  
                                          u2301 0F2E                                            u2221 0DD8  
                                          u2141 0C62                                            _LATA 000F89  
                                          u2310 0F48                                            u2230 0E14  
                                          u2150 0C76                                            u2070 0A88  
                                          _LATB 000F8A                                            u2311 0F44  
                                          u2231 0E10                                            u2151 0C72  
                                          u2071 0A84                                            _LATC 000F8B  
                                          u2400 1042                                            u2320 0F5E  
                                          u2240 0E26                                            u2160 0C96  
                                          u2080 0B04                                            u2401 103E  
                                          u2321 0F5A                                            u2241 0E22  
                                          u2161 0C92                                            u2137 0C4C  
                                          u2081 0B00                                            u2410 1058  
                                          u2330 0F88                                            u2250 0E5A  
                                          u2170 0CB2                                            u2090 0B72  
                                          u2411 1054                                            u2331 0F84  
                                          u2251 0E56                                            u2171 0CAE  
                                          u2091 0B6E                                            u2500 143E  
                                          u2420 1070                                            u2340 0FAA  
                                          u2260 0E72                                            u2180 0CEA  
                                          u2501 143A                                            u2421 106C  
                                          u2341 0FA6                                            u2261 0E6E  
                                          u2181 0CE6                                            u2510 1652  
                                          u2430 1100                                            u2350 0FC0  
                                          u2270 0EA4                                            u2190 0D0E  
                                          u2511 164E                                            u2431 10FC  
                                          u2351 0FBC                                            u2271 0EA0  
                                          u2520 1892                                            u2440 117E  
                                          u2360 0FD8                                            u2280 0EBC  
                                          u2521 188E                                            u2441 117A  
                                          u2361 0FD4                                            u2281 0EB8  
                                          u2450 11A0                                            u2370 0FF0  
                                          u2290 0F10                                            u2610 023E  
                                          u2530 0080                                            u2451 119C  
                                          u2371 0FEC                                            u2291 0F0C  
                                          u2611 023A                                            u2531 007C  
                                          u2460 13DE                                            u2380 100E  
                                          u2700 07EA                                            u2620 0286  
                                          u2604 0224                                            u2540 00A2  
                                          u2461 13DA                                            u2381 100A  
                                          u2197 0D04                                            u2701 07E6  
                                          u2621 0282                                            u2605 0220  
                                          u2541 009E                                            u2470 140A  
                                          u2390 1024                                            u2710 087E  
                                          u2630 0378                                            u2550 013E  
                                          u2471 1406                                            u2391 1020  
                                          u2711 087A                                            u2631 0374  
                                          u2551 013A                                            u2480 141C  
                                          u2720 0912                                            u2640 039A  
                                          u2800 1222                                            u2481 1418  
                                          u2721 090E                                            u2641 0396  
                                          u2801 121E                                            u2490 142E  
                                          u2730 0990                                            u2650 0514  
                                          u2570 017E                                            u2810 127E  
                                          u2491 142A                                            u2731 098C  
                                          u2651 0510                                            u2571 017A  
                                          u2811 127A                                            u2660 05C6  
                                          u2580 01C6                                            u2564 0164  
                                          u2740 16A4                                            u2661 05C2  
                                          u2581 01C2                                            u2565 0160  
                                          u2741 16A0                                            u2670 0660  
                                          u2590 01FE                                            u2750 13AE  
                                          u2671 065C                                            u2591 01FA  
                                          u2751 13AA                                            u2760 185A  
                                          u1960 18E6                                            u2680 06D0  
                                          u2761 1856                                            u1961 18E2  
                                          u2681 06CC                                            u1970 1700  
                                          u2690 0756                                            u1971 16FC  
                                          u2907 15F4                                            u2691 0752  
                                          u2827 1292                                            u1980 170E  
                                          u1981 170A                                            u2917 160C  
                                          u2837 12A8                                            u1990 1768  
                                          u2790 11E6                                            u2927 1448  
                                          u1991 1764                                            u2847 12FA  
                                          u2791 11E2                                            u2857 1374  
                                          u2867 1382                                            u2877 13C0  
                                          u2887 168A                                            u2897 15DC  
                           ?_nrf24_read_rf_data 000B                                   _EUSART1_Write 18D6  
              nrf24_read_register@mnemonic_addr 0006                                            _main 11A2  
                        EUSART1_Initialize@brgh 0007                                            fsr0h 000FEA  
                                          indf0 000FEF                                            fsr2h 000FDA  
                                          fsr0l 000FE9                                            indf2 000FDF  
                                          fsr1l 000FE1                                            fsr2l 000FD9  
                                          btemp 005C                          EUSART1_Initialize@sync 0006  
                                          prodh 000FF4                                            prodl 000FF3  
                                          start 0066                    __end_of_nrf24_write_register 1450  
                     __end_of_SPI1_ExchangeByte 171C                                    ___param_bank 000000  
                           _nrf24_read_register 18A2                         __end_of_TMR0_Initialize 1752  
                          ??_nrf24_read_rf_data 000D                  ??_TMR0_DefaultInterruptHandler 0001  
                 __end_of_OSCILLATOR_Initialize 1926                                           ?_main 0001  
                                         STR_10 3D4C                                           STR_11 3BB5  
                                         STR_20 3F85                                           STR_12 3DA1  
                                         STR_21 3FF8                                           STR_13 3DED  
                                         STR_30 3FD0                                           STR_22 3FFA  
                                         STR_14 3C69                                           STR_23 3F3A  
                                         STR_15 3FE9                                           STR_31 3C33  
                                         STR_24 3FD0                                           STR_16 3FDE  
                                         STR_40 3FAF                                           STR_32 3BF7  
                                         STR_17 3FEF                                           STR_41 3F90  
                                         STR_25 3D85                                           STR_33 3D69  
                                         STR_26 3F85                                           STR_18 3FF2  
                                         STR_42 3FC8                                           STR_50 3CD1  
                                         STR_34 3C9E                                           STR_27 3FF8  
                                         STR_35 3FE9                                           STR_51 3FE2  
                                         STR_43 3F99                                           STR_19 3E8E  
                                         STR_28 3FFA                                           STR_36 3FDE  
                                         STR_52 3FEC                                           STR_44 3FD6  
                                         STR_60 3EBB                                           STR_29 3F3A  
                                         STR_37 3FE9                                           STR_61 3FF5  
                                         STR_45 3FD2                                           STR_53 3D02  
                                         STR_62 3FB8                                           STR_38 3FDE  
                                         STR_70 3FF5                                           STR_46 3FE6  
                                         STR_54 3DBB                                           STR_55 3FE2  
                                         STR_47 3FFC                                           STR_71 3FBC  
                                         STR_39 3FA8                                           STR_63 3ED1  
                                         STR_56 3FEC                                           STR_64 3FF5  
                                         STR_48 3FDA                                           STR_72 3F13  
                                         STR_80 3E32                                           STR_73 3FF5  
                                         STR_49 3FC2                                           STR_65 3FB6  
                                         STR_57 3EA5                                           STR_81 3E49  
                                         STR_74 3FBC                                           STR_58 3FF5  
                                         STR_66 3EE7                                           STR_82 3E60  
                                         STR_59 3FB8                                           STR_67 3FF5  
                                         STR_75 3F3D                                           STR_83 3E77  
                                         STR_68 3FB6                                           STR_76 3FF5  
                                         STR_84 3FA1                                           STR_77 3FB8  
                                         STR_85 3F63                                           STR_69 3EFD  
                                         STR_86 3F74                                           STR_78 3E04  
                                         STR_79 3E1B                SPI1_Open@spi1UniqueConfiguration 0001  
                 nrf24_write_buff@mnemonic_addr 0009                                           _ANSEL 000F7E  
                                         _T0CON 000FD5                                 __end_of___lwdiv 14C4  
                               __end_of___lwmod 1528                                           i2l313 005A  
                                         i2l354 17FE                                           i2l282 17B2  
                                         i2l356 1820                                           i2l278 18FA  
                                         i2l288 195C                                           _TMR0H 000FD7  
                                         _TMR0L 000FD6                                           _SPBRG 000FAF  
                                         _TRISA 000F92                                           _TRISB 000F93  
                                         _TRISC 000F94                                           _TXREG 000FAD  
                     ?_TMR0_SetInterruptHandler 0004                                __end_of_TMR0_ISR 18FC  
                          ?_nrf24_read_register 0001                         EUSART1_Initialize@brg16 0008  
                               __end_of_dpowers 3BAD                                 __end_of_isdigit 1784  
                                         _putch 1926                                           main@i 00D0  
                                ?_EUSART1_Write 0001                                           pclath 000FFA  
                                         pclatu 000FFB                                           tablat 000FF5  
                      nrf24_read_rf_data@buffer 000B                                           ttemp5 005D  
                                         ttemp6 0060                                           ttemp7 0064  
                                         status 000FD8                                           wtemp8 005D  
                      __end_of_nrf24_write_buff 16A8              _EUSART1_DefaultFramingErrorHandler 000000  
                              ?_nrf24_read_buff 0006                                 __initialization 16A8  
                    __end_of_EUSART1_Initialize 15CA                                    __end_of_main 12E4  
                   ?_INTERRUPT_InterruptManager 0001                                          ??_main 00CE  
                                 __activetblptr 000002                                 ??_nrf24_rf_init 0056  
                         ??_nrf24_read_register 0006                                          ?_putch 0001  
                                        _ANSELH 000F7F                                          i2l3330 18EC  
                                        i2l3332 18EE                                          i2l3334 18F2  
                                        i2l3336 18F6                                          i2l3460 0040  
                                        i2l3452 0012                                          i2l3462 0044  
                                        i2l3454 0020                                          i2l3464 0046  
                                        i2l3456 002E                                          i2l3466 0054  
                                        i2l3458 0032                                          i2l3468 0058  
                                        i2l2846 17FE                                          i2l2972 1784  
                                        i2l2974 1798                                          _RCREG1 000FAE  
                                        _SPBRGH 000FB0                                          _SSPBUF 000FC9  
                             __end_of_SPI1_Open 18A2                            _ADDRESS_DATA_RXPIPE0 00C1  
                          _ADDRESS_DATA_RXPIPE1 00B7                                          ___wmul 17B4  
                          _ADDRESS_DATA_TXPIPE0 00BC                                       ??___lwdiv 0008  
                                     ??___lwmod 000F                        ?_EUSART1_SetErrorHandler 0004  
                              ?_TMR0_Initialize 0001                                          clear_0 16CE  
                                        isa$std 000001                                          _printf 0A6A  
              ??_EUSART1_SetOverrunErrorHandler 0006                 ?_EUSART1_SetOverrunErrorHandler 0004  
                                     ??_isdigit 0004                          _nrf24_printf_rf_config 006A  
                                  __mediumconst 3B8E                            _nrf24_write_register 13CA  
                                        tblptrh 000FF7                                          tblptrl 000FF6  
                                        tblptru 000FF8              __end_of_nrf24_is_rf_data_available 1864  
                    _nrf24_is_rf_data_available 1844                           __end_of_TMR0_CallBack 17B4  
                               ??_EUSART1_Write 0004        TMR0_SetInterruptHandler@InterruptHandler 0004  
                             _SYSTEM_Initialize 18BC                                      __accesstop 0060  
                       __end_of__initialization 16D6                                  _SPI1_ReadBlock 000000  
                            ?_SYSTEM_Initialize 0001                                   ___rparam_used 000001  
                                __pcstackCOMRAM 0001                                    __pidataBANK0 18FC  
                           ??_SYSTEM_Initialize 0009                                       ?_TMR0_ISR 0001  
                             ??_SPI1_Initialize 0004                                   __end_of_putch 1930  
                         SPI1_ExchangeByte@data 0004                           ?_nrf24_write_register 0006  
                 __end_of_nrf24_set_channel_frq 191A                       __end_of_SYSTEM_Initialize 18D6  
                                       ??_putch 0005                                      __pbssBANK0 0060  
                                    __pnvCOMRAM 0059                                  _SPI1_WriteByte 000000  
               __end_of_EUSART1_SetErrorHandler 1958                __end_of_TMR0_SetInterruptHandler 193A  
                                       ?___wmul 0004                                      ??_TMR0_ISR 0002  
                                       ?_printf 0010          __end_of_EUSART1_SetFramingErrorHandler 194E  
                _EUSART1_SetFramingErrorHandler 1944                                         _SSPCON1 000FC6  
                             __end_of_blink_led 1822                               ?_nrf24_write_buff 0006  
                                       __Hparam 0000                               nrf24_rf_init@mode 0057  
                             nrf24_rf_init@stat 0058                                         __Lparam 0000  
                            ??_nrf24_write_buff 0009                         nrf24_rf_init@rf_channel 0055  
                                       ___lwdiv 1450                                         ___lwmod 14C4  
                                       __pcinit 16A8                                         __ramtop 0200  
                                       __ptext0 11A2                                         __ptext1 12E4  
                                       __ptext2 1662                                         __ptext3 1528  
                                       __ptext4 190C                                         __ptext5 006A  
                                       __ptext6 0A6A                                         __ptext7 1926  
                                       __ptext8 18D6                                         __ptext9 1752  
                                       _buffer1 0080                                       _T0CONbits 000FD5  
                        ??_nrf24_write_register 0007                               __end_of_hexpowers 3BB5  
                                       _dpowers 3BA3                           _OSCILLATOR_Initialize 191A  
                                       _isdigit 1752                            fp__SPI1_ExchangeByte 0000  
                            _EUSART1_Initialize 157A                        ??_PIN_MANAGER_Initialize 0004  
                          end_of_initialization 16D6                             ?_EUSART1_Initialize 0001  
                                 __Lmediumconst 3B8E                     _EUSART1_OverrunErrorHandler 00CA  
                             __end_of_spiMaster 3BA3                                       _RCSTAbits 000FAB  
                                       printf@c 0031                                         printf@f 0010  
                                       postdec1 000FE5                                         postdec2 000FDD  
                                       postinc0 000FEE                                         postinc2 000FDE  
                       nrf24_printf_rf_config@i 0054                         nrf24_printf_rf_config@j 0052  
                                     _SPI1_Open 1884                            ??_EUSART1_Initialize 0006  
                       ?_nrf24_printf_rf_config 0001                     __end_of_nrf24_read_register 18BC  
                      _TMR0_SetInterruptHandler 1930                       nrf24_printf_rf_config@buf 004D  
                             _nrf24_flush_tx_rx 15CA                           nrf24_read_buff@buffer 0006  
                                     _TRISBbits 000F93                                       _TRISCbits 000F94  
                             _spi_rx_data_ready 005B                           __end_of_nrf24_rf_init 13CA  
                   ?_nrf24_is_rf_data_available 0001                              ?_nrf24_flush_tx_rx 0001  
                           EUSART1_Write@txData 0004                                    _MASTER0_open 000000  
                           ??_nrf24_flush_tx_rx 0008                                 _SPI1_Initialize 17DA  
                                   printf@width 002E                                       _TXSTAbits 000FAC  
                  __end_of_INTERRUPT_Initialize 195C                                      ?_SPI1_Open 0001  
                __end_of_nrf24_printf_rf_config 0A6A                                  __end_of___wmul 17DA  
                                   _BAUDCONbits 000FB8                          ?_OSCILLATOR_Initialize 0001  
                     __end_of_nrf24_flush_tx_rx 1618                                  __end_of_printf 11A2  
                           start_initialization 16A8                                     putch@txData 0005  
                         __end_of_EUSART1_Write 18EC                        nrf24_read_register@byte0 0007  
                                      ??___wmul 0008                                     __pdataBANK0 00B7  
                             _nrf24_set_rf_mode 1528                                        ??_printf 001E  
                            ?_nrf24_set_rf_mode 0001               nrf24_write_register@mnemonic_addr 0007  
                                 _SPI1_ReadByte 000000                                     __pbssCOMRAM 005B  
                                 __pcstackBANK0 00CE                               ??_nrf24_read_buff 0009  
               nrf24_set_channel_frq@rf_channel 0008                         __end_of_SPI1_Initialize 17FE  
                                  _isdigit$2143 0005                             ??_nrf24_set_rf_mode 0008  
                          SPI1_ExchangeByte@ret 0005                           _nrf24_set_channel_frq 190C  
                               _SPI1_WriteBlock 000000                ??_EUSART1_SetFramingErrorHandler 0006  
               ?_EUSART1_SetFramingErrorHandler 0004                    nrf24_read_buff@mnemonic_addr 0009  
                         _TMR0_InterruptHandler 00C6                                       __pnvBANK0 00C6  
                              ___lwdiv@dividend 0004                          _PIN_MANAGER_Initialize 1864  
                                     __pintcode 0008                                       _blink_led 17FE  
                                 __pmediumconst 3B8E                                nrf24_read_buff@i 000A  
                     __end_of_nrf24_set_rf_mode 157A                       nrf24_write_register@value 0006  
                                      ?___lwdiv 0004                                     ??_SPI1_Open 0004  
                                      ?___lwmod 000B                    ??_INTERRUPT_InterruptManager 0002  
            _EUSART1_DefaultOverrunErrorHandler 000000                                        ?_isdigit 0001  
                          _EUSART1_ErrorHandler 00C8                         _EUSART1_SetErrorHandler 194E  
                                     _hexpowers 3BAD                                ___lwdiv@quotient 0009  
                                 _TMR0_CallBack 1784                            _INTERRUPT_Initialize 1958  
                             ??_TMR0_Initialize 0006                                  ___wmul@product 0008  
                                      _LATAbits 000F89         EUSART1_SetErrorHandler@interruptHandler 0004  
                                      _LATCbits 000F8B                                        _PIE1bits 000F9D  
                                      _PIE2bits 000FA0                                        i2u151_40 180E  
                                      i2u151_41 1808                                        i2u151_46 1810  
                                      i2u160_48 179E                                        i2u160_49 17B2  
                    ??_TMR0_SetInterruptHandler 0006                                        i2u190_40 002E  
                                      i2u190_41 002A                                        i2u159_40 1798  
                                      i2u191_40 0040                                        i2u159_41 1794  
                                      i2u191_41 003C                                        i2u192_40 0054  
                                      i2u192_41 0050                                        _PIR1bits 000F9E  
                                      _PIR2bits 000FA1                                        i2u189_40 0020  
                                      i2u189_41 001C                                       _spiMaster 3B8F  
                                      _RCONbits 000FD0                                      ?_blink_led 0001  
                    __end_of_nrf24_read_rf_data 1844                                        _TMR0_ISR 18EC  
                          nrf24_read_buff@bytes 0008                               ___wmul@multiplier 0004  
                                    printf@flag 002D                                      printf@prec 0030  
                                ?_TMR0_CallBack 0001                          ?_nrf24_set_channel_frq 0001  
                              ?_SPI1_Initialize 0001                                       copy_data0 16BC  
                         ?_INTERRUPT_Initialize 0001                                        __Hrparam 0000  
                                      __Lrparam 0000                         ??_OSCILLATOR_Initialize 0004  
                     ??_EUSART1_SetErrorHandler 0006                     _EUSART1_DefaultErrorHandler 000000  
                   _nrf24_printf_rf_config$1600 0043                     _nrf24_printf_rf_config$1611 0045  
                   _nrf24_printf_rf_config$1612 0047                     _nrf24_printf_rf_config$1634 004B  
                   _nrf24_printf_rf_config$1628 0049                     _nrf24_printf_rf_config$1580 003B  
                   _nrf24_printf_rf_config$1590 003F                     _nrf24_printf_rf_config$1579 0039  
                   _nrf24_printf_rf_config$1589 003D                     _nrf24_printf_rf_config$1599 0041  
                               ___lwdiv@divisor 0006                                 ___lwdiv@counter 0008  
                                      __ptext10 17B4                                        __ptext11 14C4  
                                      __ptext20 16E4                                        __ptext12 1450  
                                      __ptext21 18BC                                        __ptext13 1884  
                                      __ptext30 1944                                        __ptext22 171C  
                                      __ptext14 1822                                        __ptext31 194E  
                                      __ptext23 1930                                        __ptext15 1618  
                                      __ptext24 17DA                                        __ptext16 15CA  
                                      __ptext33 18EC                                        __ptext25 1864  
                                      __ptext17 13CA                                        __ptext34 1784  
                                      __ptext26 191A                                        __ptext18 1844  
                                      __ptext35 195C                                        __ptext27 1958  
                                      __ptext19 18A2                                        __ptext36 17FE  
                                      __ptext28 157A                                        __ptext37 0000  
                                      __ptext29 193A                                        _bufferRX 0097  
                                      _bufferTX 0060            __end_of_TMR0_DefaultInterruptHandler 195E  
                  _TMR0_DefaultInterruptHandler 195C  EUSART1_SetOverrunErrorHandler@interruptHandler 0004  
                                      isa$xinst 000000                                     ??_blink_led 0001  
                         nrf24_set_rf_mode@mode 000A                               nrf24_write_buff@i 000A  
                                      int$flags 005C                                 _nrf24_read_buff 1618  
            __end_of_INTERRUPT_InterruptManager 0066                      _INTERRUPT_InterruptManager 0008  
                                     printf@idx 0022                                       printf@len 0029  
                                     printf@val 002B                     _EUSART1_FramingErrorHandler 00CC  
                              _nrf24_write_buff 1662                                      _INTCONbits 000FF2  
                               ??_TMR0_CallBack 0002                                        isdigit@c 0006  
                        ??_INTERRUPT_Initialize 0004                                        intlevel2 0000  
                              ___lwmod@dividend 000B                         ?_PIN_MANAGER_Initialize 0001  
        __end_of_EUSART1_SetOverrunErrorHandler 1944                  _EUSART1_SetOverrunErrorHandler 193A  
                                    _OSCCONbits 000FD3                          nrf24_write_buff@buffer 0006  
               fp__TMR0_DefaultInterruptHandler 0000                   ?_TMR0_DefaultInterruptHandler 0001  
                                      printf@ap 0027                                        printf@cp 0025  
EUSART1_SetFramingErrorHandler@interruptHandler 0004                              _eusart1RxLastError 0096  
                      nrf24_printf_rf_config@aw 0053                                      _SPI1_Close 000000  
                                   _printf$1703 0023                                 ___lwmod@divisor 000D  
                               _TMR0_Initialize 171C                                 ___lwmod@counter 000F  
                         nrf24_write_buff@bytes 0008                                     _SSPCON1bits 000FC6  
                                 _nrf24_rf_init 12E4                                    fp__blink_led 0000  
                __end_of_PIN_MANAGER_Initialize 1884                        ??_nrf24_printf_rf_config 0032  
                       __end_of_nrf24_read_buff 1662  
